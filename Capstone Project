{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "name": "Capstone Project",
      "provenance": [],
      "collapsed_sections": []
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    }
  },
  "cells": [
    {
      "cell_type": "code",
      "metadata": {
        "id": "hvVKWNkCs5sJ",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 33
        },
        "outputId": "fba1ec38-6dc0-4e10-8eac-ddc7dc04d5a4"
      },
      "source": [
        "from google.colab import drive\n",
        "drive.mount('/content/gdrive')"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "Drive already mounted at /content/gdrive; to attempt to forcibly remount, call drive.mount(\"/content/gdrive\", force_remount=True).\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "vy2zOkd1tCDm",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 50
        },
        "outputId": "7d7c8257-27a6-42e2-9d8a-a1662a450dd1"
      },
      "source": [
        "import numpy as np\n",
        "import pandas as pd\n",
        "import matplotlib.pyplot as plt\n",
        "import seaborn as sns"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "/usr/local/lib/python3.6/dist-packages/statsmodels/tools/_testing.py:19: FutureWarning: pandas.util.testing is deprecated. Use the functions in the public API at pandas.testing instead.\n",
            "  import pandas.util.testing as tm\n"
          ],
          "name": "stderr"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "pzls4qMlzcQ-",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "cd=pd.read_excel('/content/gdrive/My Drive/Data Science/Capstone/Customer_Data.xlsx')"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "mriuDeuPE9VO",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 50
        },
        "outputId": "d7cda77b-c16c-41aa-dde6-882f651d6034"
      },
      "source": [
        "invoice=pd.read_csv('/content/gdrive/My Drive/Data Science/Capstone/Final_invoice.csv')"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "/usr/local/lib/python3.6/dist-packages/IPython/core/interactiveshell.py:2718: DtypeWarning: Columns (9,10,14,15,21,41,51) have mixed types.Specify dtype option on import or set low_memory=False.\n",
            "  interactivity=interactivity, compiler=compiler, result=result)\n"
          ],
          "name": "stderr"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "hGaz7-H6_X5x",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "jtd= pd.read_csv('/content/gdrive/My Drive/Data Science/Capstone/JTD.csv')"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "prUwYlna_YZD",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "pm = pd.read_excel('/content/gdrive/My Drive/Data Science/Capstone/Plant Master.xlsx')"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "TAu9GX72H0K5",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 590
        },
        "outputId": "a06fae72-a7b2-4762-b81a-dfd1af0e3c57"
      },
      "source": [
        "fig,ax = plt.subplots(figsize = (16,8))\n",
        "sns.heatmap(invoice.isnull(), cbar = False, cmap = 'viridis', yticklabels = False)\n",
        "plt.show()"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 1152x576 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": [],
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "UJjrCKqnJSCj",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 483
        },
        "outputId": "aa377e09-eac1-4b97-81d9-a185053b2eed"
      },
      "source": [
        "fig,ax = plt.subplots(figsize = (16,8))\n",
        "sns.heatmap(cd.isnull(), yticklabels = False, cbar = False, cmap = 'viridis', )\n",
        "plt.show()"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 1152x576 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": [],
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "fmonJk5sKDGI",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 600
        },
        "outputId": "0a87a802-7437-4418-c0e8-364333aa6d6f"
      },
      "source": [
        "fig,ax = plt.subplots(figsize = (16,8))\n",
        "sns.heatmap(pm.isnull(), yticklabels = False, cbar = False, cmap = 'viridis', )\n",
        "plt.show()"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 1152x576 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": [],
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "psLY-WfCKleu",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 483
        },
        "outputId": "9d04b379-6b98-45f7-e16a-08c5a877db18"
      },
      "source": [
        "fig,ax = plt.subplots(figsize = (16,8))\n",
        "sns.heatmap(jtd.isnull(), yticklabels = False, cbar = False, cmap = 'viridis')\n",
        "plt.show()"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 1152x576 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": [],
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "b2Av4DXnLiu3",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 33
        },
        "outputId": "c114c7a3-bd15-4034-c2fc-6589826aa7b9"
      },
      "source": [
        "print(\"Shape of Customer Data: \", cd.shape, \", Shape of JTD: \",jtd.shape, \", Shape of invoice data: \", invoice.shape)"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "Shape of Customer Data:  (555338, 9) , Shape of JTD:  (5619484, 10) , Shape of invoice data:  (492314, 59)\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "NuUmzFffApZD",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "invoice.drop(['CGST(14%)', 'CGST(2.5%)', 'CGST(6%)', 'CGST(9%)', 'Cash /Cashless Type', 'Claim No.','Expiry Date', 'Gate Pass Date','IGST(12%)', 'IGST(18%)', 'IGST(28%)', 'IGST(5%)','Policy no.','SGST/UGST(14%)', 'SGST/UGST(2.5%)', 'SGST/UGST(6%)', 'SGST/UGST(9%)',\n",
        "       'Service Advisor Name', 'TDS amount','Total CGST', 'Total GST', 'Total IGST','Total SGST/UGST','Gate Pass Time'], axis = 1, inplace = True)"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "B7kzg7LnO0VW",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "invoice.drop(['Total Amt Wtd Tax.'], inplace=True, axis=1)"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "2VFGVya1Txb_",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "invoice.drop(['Amt Rcvd From Custom', 'Amt Rcvd From Ins Co', 'Outstanding Amt'], axis = 1, inplace=True)"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "xxruse5qLzDU",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "jtd.drop(['Labor Value Number'], axis = 1, inplace = True)"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "aywKfET9L1jh",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "pm.drop(['Vendor number plant'], axis=1, inplace=True)"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "TMypjnZ7-FAa",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "cd.drop(['Marital Status', 'Occupation', 'Date of Birth', 'Death date'], axis=1, inplace=True)"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "D6abZlOpEYbd",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "invoice_cols_to_date = ['Invoice Date', 'JobCard Date']"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "J7y-LPftIouM",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "\n",
        "invoice_cols_to_time = ['Invoice Time',  'JobCard Time']"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "sFiELq8LEcK_",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "for i in invoice_cols_to_date:\n",
        "    invoice[i] = pd.to_datetime(invoice[i], dayfirst=True, yearfirst=False)"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "JTs7tmmDF90H",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "for i in invoice_cols_to_time:\n",
        "    invoice[i] = pd.to_datetime(invoice[i], format= '%H:%M:%S', ).dt.time"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "tlTPFshYHFMh",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 793
        },
        "outputId": "fd0893ae-f7d4-47c8-d53a-7b317d085827"
      },
      "source": [
        "invoice[invoice['Total Value'].isnull()]"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Unnamed: 0</th>\n",
              "      <th>Area / Locality</th>\n",
              "      <th>CITY</th>\n",
              "      <th>Cust Type</th>\n",
              "      <th>Customer No.</th>\n",
              "      <th>District</th>\n",
              "      <th>Insurance Company</th>\n",
              "      <th>Invoice Date</th>\n",
              "      <th>Invoice No</th>\n",
              "      <th>Invoice Time</th>\n",
              "      <th>Job Card No</th>\n",
              "      <th>JobCard Date</th>\n",
              "      <th>JobCard Time</th>\n",
              "      <th>KMs Reading</th>\n",
              "      <th>Labour Total</th>\n",
              "      <th>Make</th>\n",
              "      <th>Misc Total</th>\n",
              "      <th>Model</th>\n",
              "      <th>ODN No.</th>\n",
              "      <th>OSL Total</th>\n",
              "      <th>Order Type</th>\n",
              "      <th>Parts Total</th>\n",
              "      <th>Pin code</th>\n",
              "      <th>Plant</th>\n",
              "      <th>Plant Name1</th>\n",
              "      <th>Print Status</th>\n",
              "      <th>Recovrbl Exp</th>\n",
              "      <th>Regn No</th>\n",
              "      <th>Technician Name</th>\n",
              "      <th>Total Value</th>\n",
              "      <th>User ID</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>295028</th>\n",
              "      <td>730169</td>\n",
              "      <td>MUMBAI</td>\n",
              "      <td>BHANDUP</td>\n",
              "      <td>Retail</td>\n",
              "      <td>119371</td>\n",
              "      <td>Maharashtra</td>\n",
              "      <td>NaN</td>\n",
              "      <td>2016-01-02</td>\n",
              "      <td>7005202789</td>\n",
              "      <td>11:27:27</td>\n",
              "      <td>300412</td>\n",
              "      <td>2016-01-02</td>\n",
              "      <td>10:52:24</td>\n",
              "      <td>35654</td>\n",
              "      <td>1125.76</td>\n",
              "      <td>MARUTI SUZUKI</td>\n",
              "      <td>291.45</td>\n",
              "      <td>ZEN ESTILO</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0.0</td>\n",
              "      <td>SMC Value Package</td>\n",
              "      <td>2082.07</td>\n",
              "      <td>400089</td>\n",
              "      <td>BC01</td>\n",
              "      <td>THANE</td>\n",
              "      <td>YES</td>\n",
              "      <td>0.0</td>\n",
              "      <td>MH02BD6668</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>BC01SA2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>295029</th>\n",
              "      <td>730170</td>\n",
              "      <td>THNAE</td>\n",
              "      <td>THANE</td>\n",
              "      <td>Retail</td>\n",
              "      <td>128929</td>\n",
              "      <td>Maharashtra</td>\n",
              "      <td>NaN</td>\n",
              "      <td>2016-01-02</td>\n",
              "      <td>7005202790</td>\n",
              "      <td>13:03:16</td>\n",
              "      <td>300447</td>\n",
              "      <td>2016-01-02</td>\n",
              "      <td>11:50:58</td>\n",
              "      <td>70730</td>\n",
              "      <td>233.85</td>\n",
              "      <td>MARUTI SUZUKI</td>\n",
              "      <td>0.00</td>\n",
              "      <td>SWIFT</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0.0</td>\n",
              "      <td>Running Repairs</td>\n",
              "      <td>195.44</td>\n",
              "      <td>400604</td>\n",
              "      <td>BC01</td>\n",
              "      <td>THANE</td>\n",
              "      <td>YES</td>\n",
              "      <td>0.0</td>\n",
              "      <td>MH12EM2307</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>BC01SA2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>295030</th>\n",
              "      <td>730171</td>\n",
              "      <td>MUMBAI</td>\n",
              "      <td>BHANDUP</td>\n",
              "      <td>Retail</td>\n",
              "      <td>119371</td>\n",
              "      <td>Maharashtra</td>\n",
              "      <td>NaN</td>\n",
              "      <td>2016-01-02</td>\n",
              "      <td>7005202791</td>\n",
              "      <td>14:37:52</td>\n",
              "      <td>300443</td>\n",
              "      <td>2016-01-02</td>\n",
              "      <td>11:29:21</td>\n",
              "      <td>163215</td>\n",
              "      <td>0.00</td>\n",
              "      <td>MARUTI SUZUKI</td>\n",
              "      <td>0.00</td>\n",
              "      <td>ZEN ESTILO</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0.0</td>\n",
              "      <td>SMC Redemption</td>\n",
              "      <td>0.00</td>\n",
              "      <td>400089</td>\n",
              "      <td>BC01</td>\n",
              "      <td>THANE</td>\n",
              "      <td>YES</td>\n",
              "      <td>0.0</td>\n",
              "      <td>MH02BD6668</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>BC01SA2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>295031</th>\n",
              "      <td>730172</td>\n",
              "      <td>NaN</td>\n",
              "      <td>Thane</td>\n",
              "      <td>Retail</td>\n",
              "      <td>E10724</td>\n",
              "      <td>Maharashtra</td>\n",
              "      <td>NaN</td>\n",
              "      <td>2016-01-02</td>\n",
              "      <td>7005202792</td>\n",
              "      <td>15:57:28</td>\n",
              "      <td>300505</td>\n",
              "      <td>2016-01-02</td>\n",
              "      <td>12:20:38</td>\n",
              "      <td>50220</td>\n",
              "      <td>69.97</td>\n",
              "      <td>FIAT</td>\n",
              "      <td>0.00</td>\n",
              "      <td>PALIO</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0.0</td>\n",
              "      <td>Running Repairs</td>\n",
              "      <td>297.65</td>\n",
              "      <td>400606</td>\n",
              "      <td>BC01</td>\n",
              "      <td>THANE</td>\n",
              "      <td>YES</td>\n",
              "      <td>0.0</td>\n",
              "      <td>MH04CT2685</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>BC01SA2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>295032</th>\n",
              "      <td>730173</td>\n",
              "      <td>THNAE</td>\n",
              "      <td>THNAE</td>\n",
              "      <td>Retail</td>\n",
              "      <td>92107</td>\n",
              "      <td>Maharashtra</td>\n",
              "      <td>NaN</td>\n",
              "      <td>2016-01-02</td>\n",
              "      <td>7005202793</td>\n",
              "      <td>16:23:22</td>\n",
              "      <td>300561</td>\n",
              "      <td>2016-01-02</td>\n",
              "      <td>13:06:01</td>\n",
              "      <td>79061</td>\n",
              "      <td>698.64</td>\n",
              "      <td>MARUTI SUZUKI</td>\n",
              "      <td>0.00</td>\n",
              "      <td>SWIFT</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0.0</td>\n",
              "      <td>Paid Service</td>\n",
              "      <td>44.44</td>\n",
              "      <td>400603</td>\n",
              "      <td>BC01</td>\n",
              "      <td>THANE</td>\n",
              "      <td>YES</td>\n",
              "      <td>0.0</td>\n",
              "      <td>MH04GE5258</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>BC01SA2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>492309</th>\n",
              "      <td>984736</td>\n",
              "      <td>.</td>\n",
              "      <td>Chennai</td>\n",
              "      <td>Retail</td>\n",
              "      <td>203820</td>\n",
              "      <td>Tamil Nadu</td>\n",
              "      <td>NaN</td>\n",
              "      <td>2016-06-30</td>\n",
              "      <td>7231000017</td>\n",
              "      <td>14:56:58</td>\n",
              "      <td>400100</td>\n",
              "      <td>2016-06-30</td>\n",
              "      <td>09:15:12</td>\n",
              "      <td>72546</td>\n",
              "      <td>2495.90</td>\n",
              "      <td>MARUTI SUZUKI</td>\n",
              "      <td>374.97</td>\n",
              "      <td>ALTO</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0.0</td>\n",
              "      <td>Paid Service</td>\n",
              "      <td>1587.28</td>\n",
              "      <td>600058</td>\n",
              "      <td>X405</td>\n",
              "      <td>X405 - NANGAN MOTORS PVT. LTD.</td>\n",
              "      <td>NO</td>\n",
              "      <td>0.0</td>\n",
              "      <td>TN38Y9343</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>X405SA1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>492310</th>\n",
              "      <td>984737</td>\n",
              "      <td>.</td>\n",
              "      <td>ADAMBAKKAM</td>\n",
              "      <td>Retail</td>\n",
              "      <td>170411</td>\n",
              "      <td>Tamil Nadu</td>\n",
              "      <td>NaN</td>\n",
              "      <td>2016-06-30</td>\n",
              "      <td>7231000018</td>\n",
              "      <td>15:06:52</td>\n",
              "      <td>400092</td>\n",
              "      <td>2016-06-30</td>\n",
              "      <td>08:42:15</td>\n",
              "      <td>18968</td>\n",
              "      <td>2443.47</td>\n",
              "      <td>NISSAN</td>\n",
              "      <td>0.00</td>\n",
              "      <td>MICRA</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0.0</td>\n",
              "      <td>Paid Service</td>\n",
              "      <td>4388.61</td>\n",
              "      <td>600088</td>\n",
              "      <td>X405</td>\n",
              "      <td>X405 - NANGAN MOTORS PVT. LTD.</td>\n",
              "      <td>NO</td>\n",
              "      <td>0.0</td>\n",
              "      <td>TN22CK0396</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>X405SA1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>492311</th>\n",
              "      <td>984738</td>\n",
              "      <td>CHENNAI</td>\n",
              "      <td>CHENNAI</td>\n",
              "      <td>Retail</td>\n",
              "      <td>48811</td>\n",
              "      <td>Tamil Nadu</td>\n",
              "      <td>NaN</td>\n",
              "      <td>2016-06-30</td>\n",
              "      <td>7231000019</td>\n",
              "      <td>15:43:56</td>\n",
              "      <td>400082</td>\n",
              "      <td>2016-06-30</td>\n",
              "      <td>08:27:51</td>\n",
              "      <td>177433</td>\n",
              "      <td>2598.92</td>\n",
              "      <td>MAHINDRA &amp;  MAHINDRA</td>\n",
              "      <td>0.00</td>\n",
              "      <td>SCORPIO CRDE</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0.0</td>\n",
              "      <td>Paid Service</td>\n",
              "      <td>6588.79</td>\n",
              "      <td>600044</td>\n",
              "      <td>X405</td>\n",
              "      <td>X405 - NANGAN MOTORS PVT. LTD.</td>\n",
              "      <td>NO</td>\n",
              "      <td>0.0</td>\n",
              "      <td>TN07BA0211</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>X405SA1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>492312</th>\n",
              "      <td>984739</td>\n",
              "      <td>DK NAGAR EXTN,</td>\n",
              "      <td>Vijaya Nagar, 1 main road,Velacherr</td>\n",
              "      <td>Retail</td>\n",
              "      <td>204067</td>\n",
              "      <td>Tamil Nadu</td>\n",
              "      <td>NaN</td>\n",
              "      <td>2016-06-30</td>\n",
              "      <td>7231000020</td>\n",
              "      <td>15:58:59</td>\n",
              "      <td>400545</td>\n",
              "      <td>2016-06-30</td>\n",
              "      <td>12:53:48</td>\n",
              "      <td>22932</td>\n",
              "      <td>11000.00</td>\n",
              "      <td>HONDA</td>\n",
              "      <td>100.00</td>\n",
              "      <td>AMAZE</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0.0</td>\n",
              "      <td>Accidental</td>\n",
              "      <td>0.00</td>\n",
              "      <td>600042</td>\n",
              "      <td>X405</td>\n",
              "      <td>X405 - NANGAN MOTORS PVT. LTD.</td>\n",
              "      <td>NO</td>\n",
              "      <td>0.0</td>\n",
              "      <td>TN07BV9290</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>X405SA1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>492313</th>\n",
              "      <td>984740</td>\n",
              "      <td>2ND FLOOR</td>\n",
              "      <td>saidapet</td>\n",
              "      <td>Retail</td>\n",
              "      <td>204288</td>\n",
              "      <td>Tamil Nadu</td>\n",
              "      <td>NaN</td>\n",
              "      <td>2016-06-30</td>\n",
              "      <td>7231000021</td>\n",
              "      <td>17:09:19</td>\n",
              "      <td>400891</td>\n",
              "      <td>2016-06-30</td>\n",
              "      <td>16:54:06</td>\n",
              "      <td>149197</td>\n",
              "      <td>747.78</td>\n",
              "      <td>MARUTI SUZUKI</td>\n",
              "      <td>0.00</td>\n",
              "      <td>WAGONR</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0.0</td>\n",
              "      <td>Running Repairs</td>\n",
              "      <td>0.00</td>\n",
              "      <td>600016</td>\n",
              "      <td>X405</td>\n",
              "      <td>X405 - NANGAN MOTORS PVT. LTD.</td>\n",
              "      <td>NO</td>\n",
              "      <td>0.0</td>\n",
              "      <td>TN10T3317</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>X405WM1</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>197286 rows × 31 columns</p>\n",
              "</div>"
            ],
            "text/plain": [
              "        Unnamed: 0 Area / Locality  ... Total Value  User ID\n",
              "295028      730169          MUMBAI  ...         NaN  BC01SA2\n",
              "295029      730170           THNAE  ...         NaN  BC01SA2\n",
              "295030      730171          MUMBAI  ...         NaN  BC01SA2\n",
              "295031      730172             NaN  ...         NaN  BC01SA2\n",
              "295032      730173           THNAE  ...         NaN  BC01SA2\n",
              "...            ...             ...  ...         ...      ...\n",
              "492309      984736               .  ...         NaN  X405SA1\n",
              "492310      984737               .  ...         NaN  X405SA1\n",
              "492311      984738         CHENNAI  ...         NaN  X405SA1\n",
              "492312      984739  DK NAGAR EXTN,  ...         NaN  X405SA1\n",
              "492313      984740       2ND FLOOR  ...         NaN  X405WM1\n",
              "\n",
              "[197286 rows x 31 columns]"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 23
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "yu9Lxk0sOZ9o",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 334
        },
        "outputId": "a76de8ee-5997-43ac-8ff9-d1457c9cfce1"
      },
      "source": [
        "invoice.head()"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Unnamed: 0</th>\n",
              "      <th>Area / Locality</th>\n",
              "      <th>CITY</th>\n",
              "      <th>Cust Type</th>\n",
              "      <th>Customer No.</th>\n",
              "      <th>District</th>\n",
              "      <th>Insurance Company</th>\n",
              "      <th>Invoice Date</th>\n",
              "      <th>Invoice No</th>\n",
              "      <th>Invoice Time</th>\n",
              "      <th>Job Card No</th>\n",
              "      <th>JobCard Date</th>\n",
              "      <th>JobCard Time</th>\n",
              "      <th>KMs Reading</th>\n",
              "      <th>Labour Total</th>\n",
              "      <th>Make</th>\n",
              "      <th>Misc Total</th>\n",
              "      <th>Model</th>\n",
              "      <th>ODN No.</th>\n",
              "      <th>OSL Total</th>\n",
              "      <th>Order Type</th>\n",
              "      <th>Parts Total</th>\n",
              "      <th>Pin code</th>\n",
              "      <th>Plant</th>\n",
              "      <th>Plant Name1</th>\n",
              "      <th>Print Status</th>\n",
              "      <th>Recovrbl Exp</th>\n",
              "      <th>Regn No</th>\n",
              "      <th>Technician Name</th>\n",
              "      <th>Total Value</th>\n",
              "      <th>User ID</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>0</td>\n",
              "      <td>MAJIWADA</td>\n",
              "      <td>Thane</td>\n",
              "      <td>Retail</td>\n",
              "      <td>67849</td>\n",
              "      <td>Maharashtra</td>\n",
              "      <td>NaN</td>\n",
              "      <td>2015-01-02</td>\n",
              "      <td>7005200002</td>\n",
              "      <td>11:30:36</td>\n",
              "      <td>168303</td>\n",
              "      <td>2014-12-13</td>\n",
              "      <td>14:29:43</td>\n",
              "      <td>49317</td>\n",
              "      <td>1203.14</td>\n",
              "      <td>GENERAL MOTORS</td>\n",
              "      <td>0.00</td>\n",
              "      <td>SPARK</td>\n",
              "      <td>7.005200e+09</td>\n",
              "      <td>500.06</td>\n",
              "      <td>Paid Service</td>\n",
              "      <td>2348.75</td>\n",
              "      <td>400601</td>\n",
              "      <td>BC01</td>\n",
              "      <td>THANE</td>\n",
              "      <td>NO</td>\n",
              "      <td>0.0</td>\n",
              "      <td>KA19MA1291</td>\n",
              "      <td>RUPESH</td>\n",
              "      <td>4051.95</td>\n",
              "      <td>BC01FS1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>1</td>\n",
              "      <td>THNAE</td>\n",
              "      <td>THNAE</td>\n",
              "      <td>Retail</td>\n",
              "      <td>84419</td>\n",
              "      <td>Maharashtra</td>\n",
              "      <td>NaN</td>\n",
              "      <td>2015-01-03</td>\n",
              "      <td>7005200003</td>\n",
              "      <td>10:07:32</td>\n",
              "      <td>173997</td>\n",
              "      <td>2015-01-02</td>\n",
              "      <td>14:12:18</td>\n",
              "      <td>78584</td>\n",
              "      <td>804.26</td>\n",
              "      <td>TATA MOTORS</td>\n",
              "      <td>197.03</td>\n",
              "      <td>INDICA</td>\n",
              "      <td>7.005200e+09</td>\n",
              "      <td>0.00</td>\n",
              "      <td>SMC Value Package</td>\n",
              "      <td>0.00</td>\n",
              "      <td>400603</td>\n",
              "      <td>BC01</td>\n",
              "      <td>THANE</td>\n",
              "      <td>NO</td>\n",
              "      <td>0.0</td>\n",
              "      <td>MH43R3046</td>\n",
              "      <td>PRASHANT</td>\n",
              "      <td>1001.29</td>\n",
              "      <td>BC01SA2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>2</td>\n",
              "      <td>THANE</td>\n",
              "      <td>THANE[W]</td>\n",
              "      <td>Retail</td>\n",
              "      <td>81055</td>\n",
              "      <td>Maharashtra</td>\n",
              "      <td>NaN</td>\n",
              "      <td>2015-01-03</td>\n",
              "      <td>7005200004</td>\n",
              "      <td>11:12:57</td>\n",
              "      <td>173889</td>\n",
              "      <td>2015-01-02</td>\n",
              "      <td>11:40:44</td>\n",
              "      <td>33985</td>\n",
              "      <td>180.19</td>\n",
              "      <td>MARUTI SUZUKI</td>\n",
              "      <td>0.00</td>\n",
              "      <td>ZEN</td>\n",
              "      <td>7.005200e+09</td>\n",
              "      <td>0.00</td>\n",
              "      <td>Running Repairs</td>\n",
              "      <td>52.95</td>\n",
              "      <td>400607</td>\n",
              "      <td>BC01</td>\n",
              "      <td>THANE</td>\n",
              "      <td>NO</td>\n",
              "      <td>0.0</td>\n",
              "      <td>AP09AX0582</td>\n",
              "      <td>IMRAN</td>\n",
              "      <td>233.14</td>\n",
              "      <td>BC01SA2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>3</td>\n",
              "      <td>THNAE</td>\n",
              "      <td>THNAE</td>\n",
              "      <td>Retail</td>\n",
              "      <td>84419</td>\n",
              "      <td>Maharashtra</td>\n",
              "      <td>NaN</td>\n",
              "      <td>2015-01-03</td>\n",
              "      <td>7005200005</td>\n",
              "      <td>11:40:44</td>\n",
              "      <td>174158</td>\n",
              "      <td>2015-01-03</td>\n",
              "      <td>10:12:32</td>\n",
              "      <td>78584</td>\n",
              "      <td>0.00</td>\n",
              "      <td>TATA MOTORS</td>\n",
              "      <td>0.00</td>\n",
              "      <td>INDICA</td>\n",
              "      <td>7.005200e+09</td>\n",
              "      <td>0.00</td>\n",
              "      <td>SMC Redemption</td>\n",
              "      <td>0.00</td>\n",
              "      <td>400603</td>\n",
              "      <td>BC01</td>\n",
              "      <td>THANE</td>\n",
              "      <td>NO</td>\n",
              "      <td>0.0</td>\n",
              "      <td>MH43R3046</td>\n",
              "      <td>PRASHANT</td>\n",
              "      <td>0.00</td>\n",
              "      <td>BC01SA2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>4</td>\n",
              "      <td>THANE</td>\n",
              "      <td>THANE</td>\n",
              "      <td>Retail</td>\n",
              "      <td>18980</td>\n",
              "      <td>Maharashtra</td>\n",
              "      <td>NaN</td>\n",
              "      <td>2015-01-03</td>\n",
              "      <td>7005200006</td>\n",
              "      <td>12:07:17</td>\n",
              "      <td>173860</td>\n",
              "      <td>2015-01-02</td>\n",
              "      <td>10:45:42</td>\n",
              "      <td>50057</td>\n",
              "      <td>1202.97</td>\n",
              "      <td>HYUNDAI</td>\n",
              "      <td>100.00</td>\n",
              "      <td>SANTRO XING</td>\n",
              "      <td>7.005200e+09</td>\n",
              "      <td>499.99</td>\n",
              "      <td>Paid Service</td>\n",
              "      <td>944.16</td>\n",
              "      <td>400603</td>\n",
              "      <td>BC01</td>\n",
              "      <td>THANE</td>\n",
              "      <td>NO</td>\n",
              "      <td>0.0</td>\n",
              "      <td>MH04CD9768</td>\n",
              "      <td>DAYANAND</td>\n",
              "      <td>2747.12</td>\n",
              "      <td>BC01SA2</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "   Unnamed: 0 Area / Locality      CITY  ... Technician Name Total Value  User ID\n",
              "0           0        MAJIWADA     Thane  ...          RUPESH     4051.95  BC01FS1\n",
              "1           1           THNAE     THNAE  ...        PRASHANT     1001.29  BC01SA2\n",
              "2           2           THANE  THANE[W]  ...           IMRAN      233.14  BC01SA2\n",
              "3           3           THNAE     THNAE  ...        PRASHANT        0.00  BC01SA2\n",
              "4           4           THANE     THANE  ...        DAYANAND     2747.12  BC01SA2\n",
              "\n",
              "[5 rows x 31 columns]"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 24
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "69rlIEpAZsV9",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 216
        },
        "outputId": "1931ec39-b047-4345-af45-b335b8cd8ca7"
      },
      "source": [
        "invoice['Labour Total']+invoice['OSL Total']+invoice['Parts Total']+invoice['Recovrbl Exp']+invoice['Misc Total']"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "0          4051.95\n",
              "1          1001.29\n",
              "2           233.14\n",
              "3             0.00\n",
              "4          2747.12\n",
              "            ...   \n",
              "492309     4458.15\n",
              "492310     6832.08\n",
              "492311     9187.71\n",
              "492312    11100.00\n",
              "492313      747.78\n",
              "Length: 492314, dtype: float64"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 25
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "ZQr-wGkcb7QA",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 406
        },
        "outputId": "1d759726-77f9-47cc-c463-02605ac24b7a"
      },
      "source": [
        "invoice[['Labour Total', 'OSL Total', 'Parts Total', 'Recovrbl Exp', 'Misc Total']]"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Labour Total</th>\n",
              "      <th>OSL Total</th>\n",
              "      <th>Parts Total</th>\n",
              "      <th>Recovrbl Exp</th>\n",
              "      <th>Misc Total</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>1203.14</td>\n",
              "      <td>500.06</td>\n",
              "      <td>2348.75</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>804.26</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.0</td>\n",
              "      <td>197.03</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>180.19</td>\n",
              "      <td>0.00</td>\n",
              "      <td>52.95</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>0.00</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>1202.97</td>\n",
              "      <td>499.99</td>\n",
              "      <td>944.16</td>\n",
              "      <td>0.0</td>\n",
              "      <td>100.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>492309</th>\n",
              "      <td>2495.90</td>\n",
              "      <td>0.00</td>\n",
              "      <td>1587.28</td>\n",
              "      <td>0.0</td>\n",
              "      <td>374.97</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>492310</th>\n",
              "      <td>2443.47</td>\n",
              "      <td>0.00</td>\n",
              "      <td>4388.61</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>492311</th>\n",
              "      <td>2598.92</td>\n",
              "      <td>0.00</td>\n",
              "      <td>6588.79</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>492312</th>\n",
              "      <td>11000.00</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.0</td>\n",
              "      <td>100.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>492313</th>\n",
              "      <td>747.78</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.00</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>492314 rows × 5 columns</p>\n",
              "</div>"
            ],
            "text/plain": [
              "        Labour Total  OSL Total  Parts Total  Recovrbl Exp  Misc Total\n",
              "0            1203.14     500.06      2348.75           0.0        0.00\n",
              "1             804.26       0.00         0.00           0.0      197.03\n",
              "2             180.19       0.00        52.95           0.0        0.00\n",
              "3               0.00       0.00         0.00           0.0        0.00\n",
              "4            1202.97     499.99       944.16           0.0      100.00\n",
              "...              ...        ...          ...           ...         ...\n",
              "492309       2495.90       0.00      1587.28           0.0      374.97\n",
              "492310       2443.47       0.00      4388.61           0.0        0.00\n",
              "492311       2598.92       0.00      6588.79           0.0        0.00\n",
              "492312      11000.00       0.00         0.00           0.0      100.00\n",
              "492313        747.78       0.00         0.00           0.0        0.00\n",
              "\n",
              "[492314 rows x 5 columns]"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 26
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "FXz4wJdDcn13",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 334
        },
        "outputId": "0936eae3-ea5d-4ebd-e45a-0174b5ac5aff"
      },
      "source": [
        "invoice['Total Value Manual']= invoice['Labour Total']+invoice['OSL Total']+invoice['Parts Total']+invoice['Recovrbl Exp']+invoice['Misc Total']\n",
        "invoice.head()"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Unnamed: 0</th>\n",
              "      <th>Area / Locality</th>\n",
              "      <th>CITY</th>\n",
              "      <th>Cust Type</th>\n",
              "      <th>Customer No.</th>\n",
              "      <th>District</th>\n",
              "      <th>Insurance Company</th>\n",
              "      <th>Invoice Date</th>\n",
              "      <th>Invoice No</th>\n",
              "      <th>Invoice Time</th>\n",
              "      <th>Job Card No</th>\n",
              "      <th>JobCard Date</th>\n",
              "      <th>JobCard Time</th>\n",
              "      <th>KMs Reading</th>\n",
              "      <th>Labour Total</th>\n",
              "      <th>Make</th>\n",
              "      <th>Misc Total</th>\n",
              "      <th>Model</th>\n",
              "      <th>ODN No.</th>\n",
              "      <th>OSL Total</th>\n",
              "      <th>Order Type</th>\n",
              "      <th>Parts Total</th>\n",
              "      <th>Pin code</th>\n",
              "      <th>Plant</th>\n",
              "      <th>Plant Name1</th>\n",
              "      <th>Print Status</th>\n",
              "      <th>Recovrbl Exp</th>\n",
              "      <th>Regn No</th>\n",
              "      <th>Technician Name</th>\n",
              "      <th>Total Value</th>\n",
              "      <th>User ID</th>\n",
              "      <th>Total Value Manual</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>0</td>\n",
              "      <td>MAJIWADA</td>\n",
              "      <td>Thane</td>\n",
              "      <td>Retail</td>\n",
              "      <td>67849</td>\n",
              "      <td>Maharashtra</td>\n",
              "      <td>NaN</td>\n",
              "      <td>2015-01-02</td>\n",
              "      <td>7005200002</td>\n",
              "      <td>11:30:36</td>\n",
              "      <td>168303</td>\n",
              "      <td>2014-12-13</td>\n",
              "      <td>14:29:43</td>\n",
              "      <td>49317</td>\n",
              "      <td>1203.14</td>\n",
              "      <td>GENERAL MOTORS</td>\n",
              "      <td>0.00</td>\n",
              "      <td>SPARK</td>\n",
              "      <td>7.005200e+09</td>\n",
              "      <td>500.06</td>\n",
              "      <td>Paid Service</td>\n",
              "      <td>2348.75</td>\n",
              "      <td>400601</td>\n",
              "      <td>BC01</td>\n",
              "      <td>THANE</td>\n",
              "      <td>NO</td>\n",
              "      <td>0.0</td>\n",
              "      <td>KA19MA1291</td>\n",
              "      <td>RUPESH</td>\n",
              "      <td>4051.95</td>\n",
              "      <td>BC01FS1</td>\n",
              "      <td>4051.95</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>1</td>\n",
              "      <td>THNAE</td>\n",
              "      <td>THNAE</td>\n",
              "      <td>Retail</td>\n",
              "      <td>84419</td>\n",
              "      <td>Maharashtra</td>\n",
              "      <td>NaN</td>\n",
              "      <td>2015-01-03</td>\n",
              "      <td>7005200003</td>\n",
              "      <td>10:07:32</td>\n",
              "      <td>173997</td>\n",
              "      <td>2015-01-02</td>\n",
              "      <td>14:12:18</td>\n",
              "      <td>78584</td>\n",
              "      <td>804.26</td>\n",
              "      <td>TATA MOTORS</td>\n",
              "      <td>197.03</td>\n",
              "      <td>INDICA</td>\n",
              "      <td>7.005200e+09</td>\n",
              "      <td>0.00</td>\n",
              "      <td>SMC Value Package</td>\n",
              "      <td>0.00</td>\n",
              "      <td>400603</td>\n",
              "      <td>BC01</td>\n",
              "      <td>THANE</td>\n",
              "      <td>NO</td>\n",
              "      <td>0.0</td>\n",
              "      <td>MH43R3046</td>\n",
              "      <td>PRASHANT</td>\n",
              "      <td>1001.29</td>\n",
              "      <td>BC01SA2</td>\n",
              "      <td>1001.29</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>2</td>\n",
              "      <td>THANE</td>\n",
              "      <td>THANE[W]</td>\n",
              "      <td>Retail</td>\n",
              "      <td>81055</td>\n",
              "      <td>Maharashtra</td>\n",
              "      <td>NaN</td>\n",
              "      <td>2015-01-03</td>\n",
              "      <td>7005200004</td>\n",
              "      <td>11:12:57</td>\n",
              "      <td>173889</td>\n",
              "      <td>2015-01-02</td>\n",
              "      <td>11:40:44</td>\n",
              "      <td>33985</td>\n",
              "      <td>180.19</td>\n",
              "      <td>MARUTI SUZUKI</td>\n",
              "      <td>0.00</td>\n",
              "      <td>ZEN</td>\n",
              "      <td>7.005200e+09</td>\n",
              "      <td>0.00</td>\n",
              "      <td>Running Repairs</td>\n",
              "      <td>52.95</td>\n",
              "      <td>400607</td>\n",
              "      <td>BC01</td>\n",
              "      <td>THANE</td>\n",
              "      <td>NO</td>\n",
              "      <td>0.0</td>\n",
              "      <td>AP09AX0582</td>\n",
              "      <td>IMRAN</td>\n",
              "      <td>233.14</td>\n",
              "      <td>BC01SA2</td>\n",
              "      <td>233.14</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>3</td>\n",
              "      <td>THNAE</td>\n",
              "      <td>THNAE</td>\n",
              "      <td>Retail</td>\n",
              "      <td>84419</td>\n",
              "      <td>Maharashtra</td>\n",
              "      <td>NaN</td>\n",
              "      <td>2015-01-03</td>\n",
              "      <td>7005200005</td>\n",
              "      <td>11:40:44</td>\n",
              "      <td>174158</td>\n",
              "      <td>2015-01-03</td>\n",
              "      <td>10:12:32</td>\n",
              "      <td>78584</td>\n",
              "      <td>0.00</td>\n",
              "      <td>TATA MOTORS</td>\n",
              "      <td>0.00</td>\n",
              "      <td>INDICA</td>\n",
              "      <td>7.005200e+09</td>\n",
              "      <td>0.00</td>\n",
              "      <td>SMC Redemption</td>\n",
              "      <td>0.00</td>\n",
              "      <td>400603</td>\n",
              "      <td>BC01</td>\n",
              "      <td>THANE</td>\n",
              "      <td>NO</td>\n",
              "      <td>0.0</td>\n",
              "      <td>MH43R3046</td>\n",
              "      <td>PRASHANT</td>\n",
              "      <td>0.00</td>\n",
              "      <td>BC01SA2</td>\n",
              "      <td>0.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>4</td>\n",
              "      <td>THANE</td>\n",
              "      <td>THANE</td>\n",
              "      <td>Retail</td>\n",
              "      <td>18980</td>\n",
              "      <td>Maharashtra</td>\n",
              "      <td>NaN</td>\n",
              "      <td>2015-01-03</td>\n",
              "      <td>7005200006</td>\n",
              "      <td>12:07:17</td>\n",
              "      <td>173860</td>\n",
              "      <td>2015-01-02</td>\n",
              "      <td>10:45:42</td>\n",
              "      <td>50057</td>\n",
              "      <td>1202.97</td>\n",
              "      <td>HYUNDAI</td>\n",
              "      <td>100.00</td>\n",
              "      <td>SANTRO XING</td>\n",
              "      <td>7.005200e+09</td>\n",
              "      <td>499.99</td>\n",
              "      <td>Paid Service</td>\n",
              "      <td>944.16</td>\n",
              "      <td>400603</td>\n",
              "      <td>BC01</td>\n",
              "      <td>THANE</td>\n",
              "      <td>NO</td>\n",
              "      <td>0.0</td>\n",
              "      <td>MH04CD9768</td>\n",
              "      <td>DAYANAND</td>\n",
              "      <td>2747.12</td>\n",
              "      <td>BC01SA2</td>\n",
              "      <td>2747.12</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "   Unnamed: 0 Area / Locality  ...  User ID Total Value Manual\n",
              "0           0        MAJIWADA  ...  BC01FS1            4051.95\n",
              "1           1           THNAE  ...  BC01SA2            1001.29\n",
              "2           2           THANE  ...  BC01SA2             233.14\n",
              "3           3           THNAE  ...  BC01SA2               0.00\n",
              "4           4           THANE  ...  BC01SA2            2747.12\n",
              "\n",
              "[5 rows x 32 columns]"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 27
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "1hXRTiIddONT",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 216
        },
        "outputId": "705bb1fe-2ba0-448d-b23a-60376d143521"
      },
      "source": [
        "invoice['Total Value'] - invoice['Total Value Manual']"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "0         0.0\n",
              "1         0.0\n",
              "2         0.0\n",
              "3         0.0\n",
              "4         0.0\n",
              "         ... \n",
              "492309    NaN\n",
              "492310    NaN\n",
              "492311    NaN\n",
              "492312    NaN\n",
              "492313    NaN\n",
              "Length: 492314, dtype: float64"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 28
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "UlumTwwVdeK9",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "invoice['Diff'] = invoice['Total Value'] - invoice['Total Value Manual']"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "qEdRpS06eFON",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 633
        },
        "outputId": "652c4145-ac4f-4dad-b547-b73ac9d448ac"
      },
      "source": [
        "round(pd.Series(invoice['Diff'].unique()),2)"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "0     0.0\n",
              "1    -0.0\n",
              "2     0.0\n",
              "3    -0.0\n",
              "4    -0.0\n",
              "5     0.0\n",
              "6    -0.0\n",
              "7     0.0\n",
              "8    -0.0\n",
              "9     0.0\n",
              "10    0.0\n",
              "11    0.0\n",
              "12    0.0\n",
              "13   -0.0\n",
              "14    0.0\n",
              "15   -0.0\n",
              "16   -0.0\n",
              "17    0.0\n",
              "18    0.0\n",
              "19   -0.0\n",
              "20   -0.0\n",
              "21    0.0\n",
              "22   -0.0\n",
              "23   -0.0\n",
              "24    0.0\n",
              "25   -0.0\n",
              "26   -0.0\n",
              "27    0.0\n",
              "28    0.0\n",
              "29   -0.0\n",
              "30    0.0\n",
              "31    0.0\n",
              "32   -0.0\n",
              "33   -0.0\n",
              "34    0.0\n",
              "35    NaN\n",
              "dtype: float64"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 30
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "jazhgH78eO-a",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "invoice.drop(['Total Value', \"Diff\"], axis=1, inplace=True)"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "yY1oRUXXF6QW",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 334
        },
        "outputId": "feeb8096-5b47-4d85-84c7-95496f166f75"
      },
      "source": [
        "invoice.head()"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Unnamed: 0</th>\n",
              "      <th>Area / Locality</th>\n",
              "      <th>CITY</th>\n",
              "      <th>Cust Type</th>\n",
              "      <th>Customer No.</th>\n",
              "      <th>District</th>\n",
              "      <th>Insurance Company</th>\n",
              "      <th>Invoice Date</th>\n",
              "      <th>Invoice No</th>\n",
              "      <th>Invoice Time</th>\n",
              "      <th>Job Card No</th>\n",
              "      <th>JobCard Date</th>\n",
              "      <th>JobCard Time</th>\n",
              "      <th>KMs Reading</th>\n",
              "      <th>Labour Total</th>\n",
              "      <th>Make</th>\n",
              "      <th>Misc Total</th>\n",
              "      <th>Model</th>\n",
              "      <th>ODN No.</th>\n",
              "      <th>OSL Total</th>\n",
              "      <th>Order Type</th>\n",
              "      <th>Parts Total</th>\n",
              "      <th>Pin code</th>\n",
              "      <th>Plant</th>\n",
              "      <th>Plant Name1</th>\n",
              "      <th>Print Status</th>\n",
              "      <th>Recovrbl Exp</th>\n",
              "      <th>Regn No</th>\n",
              "      <th>Technician Name</th>\n",
              "      <th>User ID</th>\n",
              "      <th>Total Value Manual</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>0</td>\n",
              "      <td>MAJIWADA</td>\n",
              "      <td>Thane</td>\n",
              "      <td>Retail</td>\n",
              "      <td>67849</td>\n",
              "      <td>Maharashtra</td>\n",
              "      <td>NaN</td>\n",
              "      <td>2015-01-02</td>\n",
              "      <td>7005200002</td>\n",
              "      <td>11:30:36</td>\n",
              "      <td>168303</td>\n",
              "      <td>2014-12-13</td>\n",
              "      <td>14:29:43</td>\n",
              "      <td>49317</td>\n",
              "      <td>1203.14</td>\n",
              "      <td>GENERAL MOTORS</td>\n",
              "      <td>0.00</td>\n",
              "      <td>SPARK</td>\n",
              "      <td>7.005200e+09</td>\n",
              "      <td>500.06</td>\n",
              "      <td>Paid Service</td>\n",
              "      <td>2348.75</td>\n",
              "      <td>400601</td>\n",
              "      <td>BC01</td>\n",
              "      <td>THANE</td>\n",
              "      <td>NO</td>\n",
              "      <td>0.0</td>\n",
              "      <td>KA19MA1291</td>\n",
              "      <td>RUPESH</td>\n",
              "      <td>BC01FS1</td>\n",
              "      <td>4051.95</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>1</td>\n",
              "      <td>THNAE</td>\n",
              "      <td>THNAE</td>\n",
              "      <td>Retail</td>\n",
              "      <td>84419</td>\n",
              "      <td>Maharashtra</td>\n",
              "      <td>NaN</td>\n",
              "      <td>2015-01-03</td>\n",
              "      <td>7005200003</td>\n",
              "      <td>10:07:32</td>\n",
              "      <td>173997</td>\n",
              "      <td>2015-01-02</td>\n",
              "      <td>14:12:18</td>\n",
              "      <td>78584</td>\n",
              "      <td>804.26</td>\n",
              "      <td>TATA MOTORS</td>\n",
              "      <td>197.03</td>\n",
              "      <td>INDICA</td>\n",
              "      <td>7.005200e+09</td>\n",
              "      <td>0.00</td>\n",
              "      <td>SMC Value Package</td>\n",
              "      <td>0.00</td>\n",
              "      <td>400603</td>\n",
              "      <td>BC01</td>\n",
              "      <td>THANE</td>\n",
              "      <td>NO</td>\n",
              "      <td>0.0</td>\n",
              "      <td>MH43R3046</td>\n",
              "      <td>PRASHANT</td>\n",
              "      <td>BC01SA2</td>\n",
              "      <td>1001.29</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>2</td>\n",
              "      <td>THANE</td>\n",
              "      <td>THANE[W]</td>\n",
              "      <td>Retail</td>\n",
              "      <td>81055</td>\n",
              "      <td>Maharashtra</td>\n",
              "      <td>NaN</td>\n",
              "      <td>2015-01-03</td>\n",
              "      <td>7005200004</td>\n",
              "      <td>11:12:57</td>\n",
              "      <td>173889</td>\n",
              "      <td>2015-01-02</td>\n",
              "      <td>11:40:44</td>\n",
              "      <td>33985</td>\n",
              "      <td>180.19</td>\n",
              "      <td>MARUTI SUZUKI</td>\n",
              "      <td>0.00</td>\n",
              "      <td>ZEN</td>\n",
              "      <td>7.005200e+09</td>\n",
              "      <td>0.00</td>\n",
              "      <td>Running Repairs</td>\n",
              "      <td>52.95</td>\n",
              "      <td>400607</td>\n",
              "      <td>BC01</td>\n",
              "      <td>THANE</td>\n",
              "      <td>NO</td>\n",
              "      <td>0.0</td>\n",
              "      <td>AP09AX0582</td>\n",
              "      <td>IMRAN</td>\n",
              "      <td>BC01SA2</td>\n",
              "      <td>233.14</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>3</td>\n",
              "      <td>THNAE</td>\n",
              "      <td>THNAE</td>\n",
              "      <td>Retail</td>\n",
              "      <td>84419</td>\n",
              "      <td>Maharashtra</td>\n",
              "      <td>NaN</td>\n",
              "      <td>2015-01-03</td>\n",
              "      <td>7005200005</td>\n",
              "      <td>11:40:44</td>\n",
              "      <td>174158</td>\n",
              "      <td>2015-01-03</td>\n",
              "      <td>10:12:32</td>\n",
              "      <td>78584</td>\n",
              "      <td>0.00</td>\n",
              "      <td>TATA MOTORS</td>\n",
              "      <td>0.00</td>\n",
              "      <td>INDICA</td>\n",
              "      <td>7.005200e+09</td>\n",
              "      <td>0.00</td>\n",
              "      <td>SMC Redemption</td>\n",
              "      <td>0.00</td>\n",
              "      <td>400603</td>\n",
              "      <td>BC01</td>\n",
              "      <td>THANE</td>\n",
              "      <td>NO</td>\n",
              "      <td>0.0</td>\n",
              "      <td>MH43R3046</td>\n",
              "      <td>PRASHANT</td>\n",
              "      <td>BC01SA2</td>\n",
              "      <td>0.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>4</td>\n",
              "      <td>THANE</td>\n",
              "      <td>THANE</td>\n",
              "      <td>Retail</td>\n",
              "      <td>18980</td>\n",
              "      <td>Maharashtra</td>\n",
              "      <td>NaN</td>\n",
              "      <td>2015-01-03</td>\n",
              "      <td>7005200006</td>\n",
              "      <td>12:07:17</td>\n",
              "      <td>173860</td>\n",
              "      <td>2015-01-02</td>\n",
              "      <td>10:45:42</td>\n",
              "      <td>50057</td>\n",
              "      <td>1202.97</td>\n",
              "      <td>HYUNDAI</td>\n",
              "      <td>100.00</td>\n",
              "      <td>SANTRO XING</td>\n",
              "      <td>7.005200e+09</td>\n",
              "      <td>499.99</td>\n",
              "      <td>Paid Service</td>\n",
              "      <td>944.16</td>\n",
              "      <td>400603</td>\n",
              "      <td>BC01</td>\n",
              "      <td>THANE</td>\n",
              "      <td>NO</td>\n",
              "      <td>0.0</td>\n",
              "      <td>MH04CD9768</td>\n",
              "      <td>DAYANAND</td>\n",
              "      <td>BC01SA2</td>\n",
              "      <td>2747.12</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "   Unnamed: 0 Area / Locality  ...  User ID Total Value Manual\n",
              "0           0        MAJIWADA  ...  BC01FS1            4051.95\n",
              "1           1           THNAE  ...  BC01SA2            1001.29\n",
              "2           2           THANE  ...  BC01SA2             233.14\n",
              "3           3           THNAE  ...  BC01SA2               0.00\n",
              "4           4           THANE  ...  BC01SA2            2747.12\n",
              "\n",
              "[5 rows x 31 columns]"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 32
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "VQEn_Z8oG2y0",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 50
        },
        "outputId": "1f22af7b-4f0a-42ab-91a4-b502e0326cb3"
      },
      "source": [
        "plt.figure(figsize=(15,10))\n",
        "#(invoice['Insurance Company'].value_counts(normalize=True)*100).plot(kind='pie', subplots=True)\n"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<Figure size 1080x720 with 0 Axes>"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 33
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1080x720 with 0 Axes>"
            ]
          },
          "metadata": {
            "tags": []
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "VkwTJIawHGkM",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "# Insurance_companies=pd.DataFrame(round(invoice['Insurance Company'].value_counts(normalize=True)*100,2))\n",
        "# Insurance_companies.reset_index(inplace=True)\n",
        "# Insurance_companies.columns = ['Insurance Company', 'Percentage Count']\n",
        "# Insurance_companies"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "UR4GDFRCBkMl",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "# for i in range(0,len(Insurance_companies['Insurance Company'])):\n",
        "#     if Insurance_companies['Percentage Count'][i]<=5.0:\n",
        "#         Insurance_companies['category'][i]='Others'\n",
        "#     else:\n",
        "#         Insurance_companies['category'][i]= Insurance_companies['Insurance Company'][i]"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "Ad6rBtS2hMXE",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "# for i in range(0,len(Insurance_companies['Insurance Company'])):\n",
        "#     if Insurance_companies['Percentage Count'][i]<=5.:\n",
        "#         print('others')\n",
        "#     else:\n",
        "#         print(Insurance_companies['Insurance Company'][i])"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "ieCUSv4eO_vJ",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "# Insurance_companies"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "TTr4UdJLPBkB",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "#Which city and which state gives me the most revenue and which least?\n",
        "#Which state has the most no. of service centers?\n",
        "#Which is the most ordered item for repairing?\n",
        "#Which item category is widely ordered?\n",
        "#What is the distribution of cars for servicing across the seasons?\n",
        "#Who's the most preferred insurance company?"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "3r9tcNldSChK",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 334
        },
        "outputId": "451eca37-c1da-4c7d-9025-b8ecd067335f"
      },
      "source": [
        "invoice.head()"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Unnamed: 0</th>\n",
              "      <th>Area / Locality</th>\n",
              "      <th>CITY</th>\n",
              "      <th>Cust Type</th>\n",
              "      <th>Customer No.</th>\n",
              "      <th>District</th>\n",
              "      <th>Insurance Company</th>\n",
              "      <th>Invoice Date</th>\n",
              "      <th>Invoice No</th>\n",
              "      <th>Invoice Time</th>\n",
              "      <th>Job Card No</th>\n",
              "      <th>JobCard Date</th>\n",
              "      <th>JobCard Time</th>\n",
              "      <th>KMs Reading</th>\n",
              "      <th>Labour Total</th>\n",
              "      <th>Make</th>\n",
              "      <th>Misc Total</th>\n",
              "      <th>Model</th>\n",
              "      <th>ODN No.</th>\n",
              "      <th>OSL Total</th>\n",
              "      <th>Order Type</th>\n",
              "      <th>Parts Total</th>\n",
              "      <th>Pin code</th>\n",
              "      <th>Plant</th>\n",
              "      <th>Plant Name1</th>\n",
              "      <th>Print Status</th>\n",
              "      <th>Recovrbl Exp</th>\n",
              "      <th>Regn No</th>\n",
              "      <th>Technician Name</th>\n",
              "      <th>User ID</th>\n",
              "      <th>Total Value Manual</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>0</td>\n",
              "      <td>MAJIWADA</td>\n",
              "      <td>Thane</td>\n",
              "      <td>Retail</td>\n",
              "      <td>67849</td>\n",
              "      <td>Maharashtra</td>\n",
              "      <td>NaN</td>\n",
              "      <td>2015-01-02</td>\n",
              "      <td>7005200002</td>\n",
              "      <td>11:30:36</td>\n",
              "      <td>168303</td>\n",
              "      <td>2014-12-13</td>\n",
              "      <td>14:29:43</td>\n",
              "      <td>49317</td>\n",
              "      <td>1203.14</td>\n",
              "      <td>GENERAL MOTORS</td>\n",
              "      <td>0.00</td>\n",
              "      <td>SPARK</td>\n",
              "      <td>7.005200e+09</td>\n",
              "      <td>500.06</td>\n",
              "      <td>Paid Service</td>\n",
              "      <td>2348.75</td>\n",
              "      <td>400601</td>\n",
              "      <td>BC01</td>\n",
              "      <td>THANE</td>\n",
              "      <td>NO</td>\n",
              "      <td>0.0</td>\n",
              "      <td>KA19MA1291</td>\n",
              "      <td>RUPESH</td>\n",
              "      <td>BC01FS1</td>\n",
              "      <td>4051.95</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>1</td>\n",
              "      <td>THNAE</td>\n",
              "      <td>THNAE</td>\n",
              "      <td>Retail</td>\n",
              "      <td>84419</td>\n",
              "      <td>Maharashtra</td>\n",
              "      <td>NaN</td>\n",
              "      <td>2015-01-03</td>\n",
              "      <td>7005200003</td>\n",
              "      <td>10:07:32</td>\n",
              "      <td>173997</td>\n",
              "      <td>2015-01-02</td>\n",
              "      <td>14:12:18</td>\n",
              "      <td>78584</td>\n",
              "      <td>804.26</td>\n",
              "      <td>TATA MOTORS</td>\n",
              "      <td>197.03</td>\n",
              "      <td>INDICA</td>\n",
              "      <td>7.005200e+09</td>\n",
              "      <td>0.00</td>\n",
              "      <td>SMC Value Package</td>\n",
              "      <td>0.00</td>\n",
              "      <td>400603</td>\n",
              "      <td>BC01</td>\n",
              "      <td>THANE</td>\n",
              "      <td>NO</td>\n",
              "      <td>0.0</td>\n",
              "      <td>MH43R3046</td>\n",
              "      <td>PRASHANT</td>\n",
              "      <td>BC01SA2</td>\n",
              "      <td>1001.29</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>2</td>\n",
              "      <td>THANE</td>\n",
              "      <td>THANE[W]</td>\n",
              "      <td>Retail</td>\n",
              "      <td>81055</td>\n",
              "      <td>Maharashtra</td>\n",
              "      <td>NaN</td>\n",
              "      <td>2015-01-03</td>\n",
              "      <td>7005200004</td>\n",
              "      <td>11:12:57</td>\n",
              "      <td>173889</td>\n",
              "      <td>2015-01-02</td>\n",
              "      <td>11:40:44</td>\n",
              "      <td>33985</td>\n",
              "      <td>180.19</td>\n",
              "      <td>MARUTI SUZUKI</td>\n",
              "      <td>0.00</td>\n",
              "      <td>ZEN</td>\n",
              "      <td>7.005200e+09</td>\n",
              "      <td>0.00</td>\n",
              "      <td>Running Repairs</td>\n",
              "      <td>52.95</td>\n",
              "      <td>400607</td>\n",
              "      <td>BC01</td>\n",
              "      <td>THANE</td>\n",
              "      <td>NO</td>\n",
              "      <td>0.0</td>\n",
              "      <td>AP09AX0582</td>\n",
              "      <td>IMRAN</td>\n",
              "      <td>BC01SA2</td>\n",
              "      <td>233.14</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>3</td>\n",
              "      <td>THNAE</td>\n",
              "      <td>THNAE</td>\n",
              "      <td>Retail</td>\n",
              "      <td>84419</td>\n",
              "      <td>Maharashtra</td>\n",
              "      <td>NaN</td>\n",
              "      <td>2015-01-03</td>\n",
              "      <td>7005200005</td>\n",
              "      <td>11:40:44</td>\n",
              "      <td>174158</td>\n",
              "      <td>2015-01-03</td>\n",
              "      <td>10:12:32</td>\n",
              "      <td>78584</td>\n",
              "      <td>0.00</td>\n",
              "      <td>TATA MOTORS</td>\n",
              "      <td>0.00</td>\n",
              "      <td>INDICA</td>\n",
              "      <td>7.005200e+09</td>\n",
              "      <td>0.00</td>\n",
              "      <td>SMC Redemption</td>\n",
              "      <td>0.00</td>\n",
              "      <td>400603</td>\n",
              "      <td>BC01</td>\n",
              "      <td>THANE</td>\n",
              "      <td>NO</td>\n",
              "      <td>0.0</td>\n",
              "      <td>MH43R3046</td>\n",
              "      <td>PRASHANT</td>\n",
              "      <td>BC01SA2</td>\n",
              "      <td>0.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>4</td>\n",
              "      <td>THANE</td>\n",
              "      <td>THANE</td>\n",
              "      <td>Retail</td>\n",
              "      <td>18980</td>\n",
              "      <td>Maharashtra</td>\n",
              "      <td>NaN</td>\n",
              "      <td>2015-01-03</td>\n",
              "      <td>7005200006</td>\n",
              "      <td>12:07:17</td>\n",
              "      <td>173860</td>\n",
              "      <td>2015-01-02</td>\n",
              "      <td>10:45:42</td>\n",
              "      <td>50057</td>\n",
              "      <td>1202.97</td>\n",
              "      <td>HYUNDAI</td>\n",
              "      <td>100.00</td>\n",
              "      <td>SANTRO XING</td>\n",
              "      <td>7.005200e+09</td>\n",
              "      <td>499.99</td>\n",
              "      <td>Paid Service</td>\n",
              "      <td>944.16</td>\n",
              "      <td>400603</td>\n",
              "      <td>BC01</td>\n",
              "      <td>THANE</td>\n",
              "      <td>NO</td>\n",
              "      <td>0.0</td>\n",
              "      <td>MH04CD9768</td>\n",
              "      <td>DAYANAND</td>\n",
              "      <td>BC01SA2</td>\n",
              "      <td>2747.12</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "   Unnamed: 0 Area / Locality  ...  User ID Total Value Manual\n",
              "0           0        MAJIWADA  ...  BC01FS1            4051.95\n",
              "1           1           THNAE  ...  BC01SA2            1001.29\n",
              "2           2           THANE  ...  BC01SA2             233.14\n",
              "3           3           THNAE  ...  BC01SA2               0.00\n",
              "4           4           THANE  ...  BC01SA2            2747.12\n",
              "\n",
              "[5 rows x 31 columns]"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 39
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "OMBhErL6LS-J",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 250
        },
        "outputId": "51f3c159-f9e2-45df-8366-1dfe1a22cb55"
      },
      "source": [
        "pip install pgeocode"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "Collecting pgeocode\n",
            "  Downloading https://files.pythonhosted.org/packages/86/44/519e3db3db84acdeb29e24f2e65991960f13464279b61bde5e9e96909c9d/pgeocode-0.2.1-py2.py3-none-any.whl\n",
            "Requirement already satisfied: requests in /usr/local/lib/python3.6/dist-packages (from pgeocode) (2.23.0)\n",
            "Requirement already satisfied: numpy in /usr/local/lib/python3.6/dist-packages (from pgeocode) (1.18.5)\n",
            "Requirement already satisfied: pandas in /usr/local/lib/python3.6/dist-packages (from pgeocode) (1.0.5)\n",
            "Requirement already satisfied: urllib3!=1.25.0,!=1.25.1,<1.26,>=1.21.1 in /usr/local/lib/python3.6/dist-packages (from requests->pgeocode) (1.24.3)\n",
            "Requirement already satisfied: chardet<4,>=3.0.2 in /usr/local/lib/python3.6/dist-packages (from requests->pgeocode) (3.0.4)\n",
            "Requirement already satisfied: certifi>=2017.4.17 in /usr/local/lib/python3.6/dist-packages (from requests->pgeocode) (2020.6.20)\n",
            "Requirement already satisfied: idna<3,>=2.5 in /usr/local/lib/python3.6/dist-packages (from requests->pgeocode) (2.10)\n",
            "Requirement already satisfied: python-dateutil>=2.6.1 in /usr/local/lib/python3.6/dist-packages (from pandas->pgeocode) (2.8.1)\n",
            "Requirement already satisfied: pytz>=2017.2 in /usr/local/lib/python3.6/dist-packages (from pandas->pgeocode) (2018.9)\n",
            "Requirement already satisfied: six>=1.5 in /usr/local/lib/python3.6/dist-packages (from python-dateutil>=2.6.1->pandas->pgeocode) (1.15.0)\n",
            "Installing collected packages: pgeocode\n",
            "Successfully installed pgeocode-0.2.1\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "Ic8xl3mNOYA5",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "import pgeocode"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "WZx1PJGOOcYa",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 416
        },
        "outputId": "044fc0c0-6e05-43bc-8a05-e25e64a7115b"
      },
      "source": [
        "dir(pgeocode)"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "['BytesIO',\n",
              " 'COUNTRIES_VALID',\n",
              " 'DATA_FIELDS',\n",
              " 'DOWNLOAD_URL',\n",
              " 'EARTH_RADIUS',\n",
              " 'GeoDistance',\n",
              " 'Nominatim',\n",
              " 'STORAGE_DIR',\n",
              " '__builtins__',\n",
              " '__cached__',\n",
              " '__doc__',\n",
              " '__file__',\n",
              " '__loader__',\n",
              " '__name__',\n",
              " '__package__',\n",
              " '__spec__',\n",
              " '__version__',\n",
              " '_get_url',\n",
              " 'haversine_distance',\n",
              " 'np',\n",
              " 'os',\n",
              " 'pd',\n",
              " 'urllib',\n",
              " 'warnings']"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 42
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "0pmSmSb0Octc",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 233
        },
        "outputId": "28a80e69-7fd8-44c3-dd9a-ea9c27233eb9"
      },
      "source": [
        "nomi = pgeocode.Nominatim('in')\n",
        "nomi.query_postal_code('410206')"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "postal_code                                                  410206\n",
              "country code                                                     IN\n",
              "place_name        Ulwa, Nhava, Pargaon, Jasai, Kundevahal, Nere,...\n",
              "state_name                                              Maharashtra\n",
              "state_code                                                       16\n",
              "county_name                                             Raigarh(MH)\n",
              "county_code                                                     NaN\n",
              "community_name                                               Panvel\n",
              "community_code                                                  NaN\n",
              "latitude                                                    19.5495\n",
              "longitude                                                   74.7128\n",
              "accuracy                                                          3\n",
              "Name: 0, dtype: object"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 43
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "j9Hxcf7RTAYw",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 83
        },
        "outputId": "b65ca69c-f4f4-4236-a7aa-f274ce9b9e21"
      },
      "source": [
        "print(pgeocode.Nominatim('in').query_postal_code('400601')[5])\n",
        "print(pgeocode.Nominatim('in').query_postal_code('400601')[3])\n",
        "print(pgeocode.Nominatim('in').query_postal_code('400601')[9])\n",
        "print(pgeocode.Nominatim('in').query_postal_code('400601')[10])"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "Thane\n",
            "Maharashtra\n",
            "19.1941\n",
            "73.0002\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "IsupXZQEqnzC",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "invoice[\"actual_city\"]=nomi.query_postal_code(np.array(invoice[\"Pin code\"].astype(str))).county_name\n",
        "invoice[\"actual_state\"]=nomi.query_postal_code(np.array(invoice[\"Pin code\"].astype(str))).state_name"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "JiJ2bqY6rzkl",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 417
        },
        "outputId": "0e814a68-7610-45d1-ffbc-8aea023e4d51"
      },
      "source": [
        "invoice.head()"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Unnamed: 0</th>\n",
              "      <th>CITY</th>\n",
              "      <th>Cust Type</th>\n",
              "      <th>Customer No.</th>\n",
              "      <th>District</th>\n",
              "      <th>Insurance Company</th>\n",
              "      <th>Invoice Date</th>\n",
              "      <th>Invoice No</th>\n",
              "      <th>Invoice Time</th>\n",
              "      <th>Job Card No</th>\n",
              "      <th>JobCard Date</th>\n",
              "      <th>JobCard Time</th>\n",
              "      <th>KMs Reading</th>\n",
              "      <th>Labour Total</th>\n",
              "      <th>Make</th>\n",
              "      <th>Misc Total</th>\n",
              "      <th>Model</th>\n",
              "      <th>OSL Total</th>\n",
              "      <th>Order Type</th>\n",
              "      <th>Parts Total</th>\n",
              "      <th>Pin code</th>\n",
              "      <th>Plant</th>\n",
              "      <th>Plant Name1</th>\n",
              "      <th>Print Status</th>\n",
              "      <th>Recovrbl Exp</th>\n",
              "      <th>User ID</th>\n",
              "      <th>Total Value Manual</th>\n",
              "      <th>Date</th>\n",
              "      <th>Category of days</th>\n",
              "      <th>Month</th>\n",
              "      <th>zero revenue</th>\n",
              "      <th>actual_city</th>\n",
              "      <th>actual_state</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>0</td>\n",
              "      <td>Thane</td>\n",
              "      <td>Retail</td>\n",
              "      <td>67849</td>\n",
              "      <td>Maharashtra</td>\n",
              "      <td>NaN</td>\n",
              "      <td>2015-01-02</td>\n",
              "      <td>7005200002</td>\n",
              "      <td>11:30:36</td>\n",
              "      <td>168303</td>\n",
              "      <td>2014-12-13</td>\n",
              "      <td>14:29:43</td>\n",
              "      <td>49317</td>\n",
              "      <td>1203.14</td>\n",
              "      <td>GENERAL MOTORS</td>\n",
              "      <td>0.00</td>\n",
              "      <td>SPARK</td>\n",
              "      <td>500.06</td>\n",
              "      <td>Paid Service</td>\n",
              "      <td>2348.75</td>\n",
              "      <td>400601</td>\n",
              "      <td>BC01</td>\n",
              "      <td>THANE</td>\n",
              "      <td>NO</td>\n",
              "      <td>0.0</td>\n",
              "      <td>BC01FS1</td>\n",
              "      <td>4051.95</td>\n",
              "      <td>2</td>\n",
              "      <td>Start of the Month</td>\n",
              "      <td>1</td>\n",
              "      <td>Revenue</td>\n",
              "      <td>Thane</td>\n",
              "      <td>Maharashtra</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>1</td>\n",
              "      <td>THNAE</td>\n",
              "      <td>Retail</td>\n",
              "      <td>84419</td>\n",
              "      <td>Maharashtra</td>\n",
              "      <td>NaN</td>\n",
              "      <td>2015-01-03</td>\n",
              "      <td>7005200003</td>\n",
              "      <td>10:07:32</td>\n",
              "      <td>173997</td>\n",
              "      <td>2015-01-02</td>\n",
              "      <td>14:12:18</td>\n",
              "      <td>78584</td>\n",
              "      <td>804.26</td>\n",
              "      <td>TATA MOTORS</td>\n",
              "      <td>197.03</td>\n",
              "      <td>INDICA</td>\n",
              "      <td>0.00</td>\n",
              "      <td>SMC Value Package</td>\n",
              "      <td>0.00</td>\n",
              "      <td>400603</td>\n",
              "      <td>BC01</td>\n",
              "      <td>THANE</td>\n",
              "      <td>NO</td>\n",
              "      <td>0.0</td>\n",
              "      <td>BC01SA2</td>\n",
              "      <td>1001.29</td>\n",
              "      <td>3</td>\n",
              "      <td>Start of the Month</td>\n",
              "      <td>1</td>\n",
              "      <td>Revenue</td>\n",
              "      <td>Thane</td>\n",
              "      <td>Maharashtra</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>2</td>\n",
              "      <td>THANE[W]</td>\n",
              "      <td>Retail</td>\n",
              "      <td>81055</td>\n",
              "      <td>Maharashtra</td>\n",
              "      <td>NaN</td>\n",
              "      <td>2015-01-03</td>\n",
              "      <td>7005200004</td>\n",
              "      <td>11:12:57</td>\n",
              "      <td>173889</td>\n",
              "      <td>2015-01-02</td>\n",
              "      <td>11:40:44</td>\n",
              "      <td>33985</td>\n",
              "      <td>180.19</td>\n",
              "      <td>MARUTI SUZUKI</td>\n",
              "      <td>0.00</td>\n",
              "      <td>ZEN</td>\n",
              "      <td>0.00</td>\n",
              "      <td>Running Repairs</td>\n",
              "      <td>52.95</td>\n",
              "      <td>400607</td>\n",
              "      <td>BC01</td>\n",
              "      <td>THANE</td>\n",
              "      <td>NO</td>\n",
              "      <td>0.0</td>\n",
              "      <td>BC01SA2</td>\n",
              "      <td>233.14</td>\n",
              "      <td>3</td>\n",
              "      <td>Start of the Month</td>\n",
              "      <td>1</td>\n",
              "      <td>Revenue</td>\n",
              "      <td>Thane</td>\n",
              "      <td>Maharashtra</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>3</td>\n",
              "      <td>THNAE</td>\n",
              "      <td>Retail</td>\n",
              "      <td>84419</td>\n",
              "      <td>Maharashtra</td>\n",
              "      <td>NaN</td>\n",
              "      <td>2015-01-03</td>\n",
              "      <td>7005200005</td>\n",
              "      <td>11:40:44</td>\n",
              "      <td>174158</td>\n",
              "      <td>2015-01-03</td>\n",
              "      <td>10:12:32</td>\n",
              "      <td>78584</td>\n",
              "      <td>0.00</td>\n",
              "      <td>TATA MOTORS</td>\n",
              "      <td>0.00</td>\n",
              "      <td>INDICA</td>\n",
              "      <td>0.00</td>\n",
              "      <td>SMC Redemption</td>\n",
              "      <td>0.00</td>\n",
              "      <td>400603</td>\n",
              "      <td>BC01</td>\n",
              "      <td>THANE</td>\n",
              "      <td>NO</td>\n",
              "      <td>0.0</td>\n",
              "      <td>BC01SA2</td>\n",
              "      <td>0.00</td>\n",
              "      <td>3</td>\n",
              "      <td>Start of the Month</td>\n",
              "      <td>1</td>\n",
              "      <td>Zero Revenue</td>\n",
              "      <td>Thane</td>\n",
              "      <td>Maharashtra</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>4</td>\n",
              "      <td>THANE</td>\n",
              "      <td>Retail</td>\n",
              "      <td>18980</td>\n",
              "      <td>Maharashtra</td>\n",
              "      <td>NaN</td>\n",
              "      <td>2015-01-03</td>\n",
              "      <td>7005200006</td>\n",
              "      <td>12:07:17</td>\n",
              "      <td>173860</td>\n",
              "      <td>2015-01-02</td>\n",
              "      <td>10:45:42</td>\n",
              "      <td>50057</td>\n",
              "      <td>1202.97</td>\n",
              "      <td>HYUNDAI</td>\n",
              "      <td>100.00</td>\n",
              "      <td>SANTRO XING</td>\n",
              "      <td>499.99</td>\n",
              "      <td>Paid Service</td>\n",
              "      <td>944.16</td>\n",
              "      <td>400603</td>\n",
              "      <td>BC01</td>\n",
              "      <td>THANE</td>\n",
              "      <td>NO</td>\n",
              "      <td>0.0</td>\n",
              "      <td>BC01SA2</td>\n",
              "      <td>2747.12</td>\n",
              "      <td>3</td>\n",
              "      <td>Start of the Month</td>\n",
              "      <td>1</td>\n",
              "      <td>Revenue</td>\n",
              "      <td>Thane</td>\n",
              "      <td>Maharashtra</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "   Unnamed: 0      CITY Cust Type  ...  zero revenue actual_city actual_state\n",
              "0           0     Thane    Retail  ...       Revenue       Thane  Maharashtra\n",
              "1           1     THNAE    Retail  ...       Revenue       Thane  Maharashtra\n",
              "2           2  THANE[W]    Retail  ...       Revenue       Thane  Maharashtra\n",
              "3           3     THNAE    Retail  ...  Zero Revenue       Thane  Maharashtra\n",
              "4           4     THANE    Retail  ...       Revenue       Thane  Maharashtra\n",
              "\n",
              "[5 rows x 33 columns]"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 118
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "ISPbTFi-Oc3h",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "# for i in invoice['Pin code']:\n",
        "#     invoice['city']=invoice['Pin code'].apply(pgeocode.Nominatim('in').query_postal_code(i)[5])\n",
        "#     invoice['state']=invoice['Pin code'].apply(pgeocode.Nominatim('in').query_postal_code(i)[3])\n",
        "#     invoice['latitude']=invoice['Pin code'].apply(pgeocode.Nominatim('in').query_postal_code(i)[9])\n",
        "#     invoice['longitude']=invoice['Pin code'].apply(pgeocode.Nominatim('in').query_postal_code(i)[10])"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "SMYnICKUOdAB",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 635
        },
        "outputId": "ccc46046-ef81-47e5-855e-6f527017c680"
      },
      "source": [
        "invoice.groupby('District')['Total Value Manual'].agg('sum').sort_values(ascending=True)/1000000"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "District\n",
              "Tripura                   0.004527\n",
              "Sikkim                    0.004776\n",
              "Mizoram                   0.007670\n",
              "Megalaya                  0.019196\n",
              "Lakshadweep               0.021691\n",
              "Manipur                   0.043833\n",
              "Jammu and Kashmir         0.065381\n",
              "Andaman and Nico.In.      0.072034\n",
              "Arunachal Pradesh         0.131429\n",
              "Goa                       0.147931\n",
              "Nagaland                  0.219982\n",
              "Assam                     0.305899\n",
              "Jharkhand                 1.157960\n",
              "Chhattisgarh              2.082921\n",
              "Daman and Diu             2.556021\n",
              "Dadra and Nagar Hav.      5.079009\n",
              "West Bengal               5.460910\n",
              "Odisha                    5.714786\n",
              "Puducherry                6.786200\n",
              "Uttarakhand               8.454214\n",
              "Himachal Pradesh          9.591633\n",
              "Bihar                    14.963347\n",
              "Chandigarh               19.579714\n",
              "Kerala                   31.809196\n",
              "Delhi                    32.079238\n",
              "Telangana                40.777878\n",
              "Rajasthan                48.519475\n",
              "Madhya Pradesh           60.372146\n",
              "Haryana                  69.966252\n",
              "Gujarat                  92.901244\n",
              "Punjab                   99.189816\n",
              "Uttar Pradesh           107.386701\n",
              "Karnataka               174.668467\n",
              "Andhra Pradesh          202.639458\n",
              "Maharashtra             512.009820\n",
              "Tamil Nadu              609.497873\n",
              "Name: Total Value Manual, dtype: float64"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 120
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "n2F6gIC7OdIZ",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 505
        },
        "outputId": "c8f4570f-be6b-4bde-ff47-2c430f78b6ff"
      },
      "source": [
        "round(invoice.groupby('Make')['Total Value Manual'].agg('sum').sort_values(ascending=True)/1000000,4)"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Make\n",
              "MORRIS                    0.0008\n",
              "SAN MOTORS                0.0062\n",
              "PORCHE                    0.0208\n",
              "JEEP                      0.0383\n",
              "VOLVO                     0.0614\n",
              "LAND ROVER                0.1551\n",
              "PREMIER AUTOMOBILES       0.3984\n",
              "SONALIKA                  0.5185\n",
              "HINDUSTAN MOTORS          0.6817\n",
              "FORCE                     0.8348\n",
              "DAEWOO                    1.2276\n",
              "BMW                       1.9402\n",
              "AUDI                      2.0978\n",
              "MERCEDES BENZ             2.3435\n",
              "MITSUBISHI MOTORS         8.7332\n",
              "NISSAN                   12.9613\n",
              "RENAULT                  14.7760\n",
              "VOLKSWAGEN               29.5922\n",
              "FIAT                     30.6826\n",
              "SKODA                    39.4069\n",
              "HONDA                    68.7191\n",
              "FORD                     97.4158\n",
              "TOYOTA                  110.0372\n",
              "GENERAL MOTORS          130.5304\n",
              "TATA MOTORS             251.3642\n",
              "HYUNDAI                 314.3526\n",
              "MARUTI SUZUKI           472.7120\n",
              "MAHINDRA &  MAHINDRA    572.6803\n",
              "Name: Total Value Manual, dtype: float64"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 146
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "sWL-yjQ2cLKD",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 621
        },
        "outputId": "d54437d0-3d42-4720-ccfc-d02f1af31e2b"
      },
      "source": [
        "plt.figure(figsize=(15,10))\n",
        "(round(invoice.groupby('District')['Total Value Manual'].agg('sum').sort_values(ascending=True)/1000000,2)).plot(kind='barh')\n",
        "plt.title(\"State wise revenue\")\n",
        "for i, v in enumerate(round(invoice.groupby('District')['Total Value Manual'].agg('sum').sort_values(ascending=True)/1000000,2)):\n",
        "    plt.text(v+5,i -.2,str(v))\n",
        "plt.ylabel(\"States\")\n",
        "plt.xlabel(\"Revenue in Millions\")\n",
        "plt.show()"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 1080x720 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": [],
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "lR-kYmB9dWlg",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 621
        },
        "outputId": "3cc3a8c9-36a3-4bc3-f7ba-28d7583bb19f"
      },
      "source": [
        "plt.figure(figsize=(15,10))\n",
        "round(invoice.groupby('Make')['Total Value Manual'].agg('sum').sort_values(ascending=True)/1000000,4).plot(kind='barh')\n",
        "plt.title('Revenue vs make')\n",
        "plt.xlabel(\"Revenue in Millions\")\n",
        "plt.xlim(0, 650)\n",
        "for i, v in enumerate(round(invoice.groupby('Make')['Total Value Manual'].agg('sum').sort_values(ascending=True)/1000000,4)):\n",
        "    plt.text(v+5,i-.2,str(v))\n",
        "plt.show()"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "image/png": "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r/3cuXOZPXs2jz/+ODt27GDXrl3Url2bW265hfz8/NJ2+fn5NGzYEAitnnfv3h0zo2XLlpx00kls3ryZM888kwcffLC0z4UXXli6lV5ERERERH5atJX9OGFmF5jZ+WFFacCXYfe/A7YDzwKFhLa3/8PMqgX9rwOigexyYp8JPEloO7wTSsI7unu8u8cTSuj1njmwadMmtm7dCsDOnTuZMWMGCQkJbNy4EYCioiLuu+8+Bg4cuF/fl19+ma+++oq8vDzuv/9+rrvuOkaMGEH9+vWJiYlh3rx5uDtjxoyha9euAFx99dXMnDkTCG1r37VrF/Xq1aOwsJDvvvsOgBkzZhAVFUWzZs2Oxp9AREREREQOk1bMjx+1gUeC09KLgdWEDmwbDxBsOe9LaEV8JPB74H5glZntAVYC3fyH3+E62cxygepBvBcJJfLxwNlA6c+kufsaM9tmPZ6GEQAAIABJREFUZq3c/aMqn+lP2Pr16+nbty8lJSXs2bOHXr160aVLF4YOHcrkyZPZs2cPN910U+nBbDk5OTz55JM888wzB437+OOP069fP3bu3EmnTp3o1KkTAP3796d///4kJSVRo0YNRo8ejZmxceNGOnTowEknnUTDhg158cUXq3zuIiIiIiLy41j47yGLVJWMjAzXqeAiIiIiInKiMrMF7p5RXp22souIiIiIiIhEkBJzERERERERkQhSYi4iIiIiIiISQUrMRURERERERCJIibmIiIiIiIhIBCkxFxEREREREYkgJeYiIiIiIiIiEaTEXERERERERCSClJiLiIiIiIiIRFBUpAcgJ4alBduIHzYl0sM4oLwRnSM9BBEREREROUFpxVxEREREREQkgpSYn+DMrMTMcsM+8WZ2qZlNLtNugpnNC647hLXfYWafBtdjIjOLqvX999/TsmVLUlNTSUxM5O677wZgzZo1tGrVisaNG3PNNdewa9eucvsvWbKENm3akJiYSHJyMt9//z0AY8eOJTk5mZSUFDp27MjmzZsBGDp0KAkJCaSkpNCtWze2bt16yFgiIiIiInLsUmIuO909LeyTV7aBmdUFWgCnmtm57v7O3vZADtAnuL/uKI/9qKhZsybZ2dksXryY3Nxcpk2bxrx587jjjjsYPHgwq1ev5rTTTuPZZ5/dr29xcTHXXnstTz75JJ988gmzZs2ievXqFBcXc8st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cCE///nPy20/duzYcrexjx8/ni5dulCrVq3Ssq5duzJnzhyKi4spLCzko48+omnTplU2FxEREREROf4oMT9GuPsiYAk/rHCXfcf85nK6PUvwuoKZxRNaeS/9mTR3XwNsM7NW7j4ZmA0sCLbP/wK4IyzWBWaWH/b5ZSVPsdJkZWXRpk0bPv30U+Li4nj22WcP2DYnJ2efrel5eXmsXbu23J89K++986ZNm9KxY0dSUlJo2bIlN9xwQ7k/0yYiIiIiInIg5h6xV3/lBJKRkeE5OTmRHoaIiIiIiEhEmNkCd88or04r5iIiIiIiIiIRpMRcREREREREJIKUmIuIiIiIiIhEkBJzERERERERkQhSYi4iIiIiIiISQUrMRURERERERCJIibmIiIiIiIhIBCkxFxEREREREYkgJeYiIiIiIiIiERQV6QHIiWFpwTbih005ohh5IzpX0mhERERERER+OrRiLiIiIiIiIhJBSsyPYWbmZvZA2P0QM/tTcP0nMxsSXLc2s4/MLNfMVoS1+ZmZTTazxWa23Mymlol/dfCMhLCy+KDst2Flj5pZvyqdbAX079+f2NhYkpKSSsuGDh1KQkICKSkpdOvWja1bt5bbd9SoUSQlJZGYmMhDDz20T90jjzxCQkICiYmJ3H777QBs2bKFzMxMateuzaBBg/Zp37FjR1JTU0lMTGTgwIGUlJRU8kxFREREROR4osT82FYEdDezeodoNxq40d3TgCTg1aD8L8AMd09192bAsDL9soA5wb/hNgK3mFmNIxp9JevXrx/Tpk3bp6xdu3YsW7aMJUuW0KRJE+699979+i1btoynn36a+fPns3jxYiZPnszq1asBmDlzJhMnTmTx4sV88sknDBkyBIBatWrx17/+lfvvv3+/eK+++iqLFy9m2bJlbNq0iddee60KZisiIiIiIscLJebHtmLgKWDwIdrFAusB3L3E3ZcH5fWB/L2N3H3J3mszqw1cBAwAepeJtwl4D+h7JIOvbG3btuX000/fp6x9+/ZERYWOUmjdujX5+fn79VuxYgWtWrUiOjqaqKgoLrnkEt544w0AnnjiCYYNG0bNmjUBiI2NBeCUU07hoosuolatWvvFi4mJAaC4uJhdu3ZhZpU3SREREREROe4oMT/2PQb0MbNTD9LmQeBTM3vTzH5jZrXC+j5rZjPN7I9m1iCsT1dg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4PTTTycqSt9XiYiIiIjI0aPE/MTTFZjm7quALWbW4nADuHsJsBhIOFg7M7vRzHLMLKekcNthDzQvL49FixbRqlWrfcoLCgo466yzSu/j4uIoKCggNTWVadOmUVhYyObNm5k5cyZr167dp++ECRO4/PLLiYmJAWDQoEGsWLGCBg0akJyczKhRozjpJP3fQkREREREjh5lICeeLGBccD0uuPcDtD1QOYAd6kHu/pS7Z7h7RrXoUw9rkDt27KBHjx489NBDpUn0obRv354rrriCCy+8kKysLNq0aUO1atX2aTN27FiysrJK79955x3S0tJYt24dubm5DBo0iO3btx/WWEVERERERI6EEvMTiJmdDlwGPGNmecBQoBfwNXBameanA5sPEKcakAysqIpx7t69mx49etCnTx+6d+++X33Dhg33WQnPz8+nYcOGAPzxj38kNzeXGTNm4O40adKktN3mzZuZP38+nTt3Li17/vnn6d69O2ZG48aNOeecc1i5cmVVTEtERERERKRcSsxPLD2BF939bHePd/ezgDWEkvAGZtYUwMzOBlKB3LIBzKw6ocPf1rr7ksoeoLszYMAAmjZtyq233lpum6uuuooxY8bg7sybN49TTz2V+vXrU1JSwpYtWwBYsmQJS5YsoX379qX9xo8fT5cuXahVq1ZpWaNGjXjvvfcA2LBhA59++innnntuZU9LRERERETkgHTK1YklC7ivTNnrhA6BuxZ43sxqAbuBG9w9/MXwl82sCKgJvEvoXfVK98EHH/Diiy+SnJxMWloaAPfccw9fffUVAAMHDuSKK65g6tSpNG7cmOjo6NKfONu9ezcXX3wxADExMbz00kv7HOQ2btw4hg0bts/z7rrrLvr160dycjLuzn333Ue9evWqYmoiIiIiIiLlMveDvUYsUjkyMjI8Jycn0sMQERERERGJCDNb4O4Z5dVpK7uIiIiIiIhIBCkxFxEREREREYkgJeYiIiIiIiIiEaTEXERERERERCSClJiLiIiIiIiIRJAScxEREREREZEIUmIuIiIiIiIiEkFKzEVEREREREQiSIm5iIiIiIiISAQpMZejYmnBNuKHTSF+2JRID0VEREREROQnRYm5/OT079+f2NhYkpKSyq3/5ptv6NatGykpKbRs2ZJly5btU19SUkLz5s3p0qVLadmaNWto1aoVjRs35ppr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RETiSIW5iIiIiIiISBypMJf9YnnVRpKvey7eaYiIiIiIiHzjqDD/DjGzWjMrifokB+2DzazIzFYFn7FRc240s6pgfKmZjYzq621mz5tZmZm9bWaPm9nhZnaimW2MudaP9sY9zJ07lz59+hAOh5k6deoO/R9++CFDhgzh2GOPJT09neeffx6AoqIiMjMzyczMJCMjg6eeeqrBvNraWo499ljOPPPM+rb58+fTr18/MjMzGTx4MGvWrNkbtyAiIiIiIrJbzN3jnYPsJWa22d3bx7QdARQBZ7v722bWGfgbMNndnzOzG4HN7n6HmfUClgKdgNbAcmCCuz8TxDoRWA90Bq5x9zNppgO69PIuF99NxdQzmhxTW1tL7969mTdvHqFQiOzsbPLz8+nbt2/9mLFjx3Lsscdy+eWXU1paytChQ6moqKC6upq2bduSkJDAxx9/TEZGBh999BEJCQkA3HXXXRQXF7Np0yaeffZZAHr37k1hYSEpKSncd999FBUVMXPmzObekoiIiIiISLOZ2VJ3z2qsTyvm333jgJnu/jaAu68HJgLXxQ509zKgGkgEzgfeqCvKg/4F7r5iXyVaVFREOBymR48etG3blry8PAoLCxuMMTM2bdoEwMaNG+natSsA7dq1qy/Ct27dipnVz6msrOS5557j0ksvbVYsERERERGR/Skh3gnIXnWgmZUEx+Xufg6QCsyKGVcctDdgZv2AMnf/1MyOIbJ63pQfRl0L4Dx3fz8m3lhgLEDrDofuMvmqqiq6detWfx4KhXjrrbcajLnxxhs59dRTuffee/nyyy956aWX6vveeustRo8ezQcffMDs2bPrC/WrrrqK2267jS+++KJBrIcffpihQ4dy4IEH0qFDB958881d5igiIiIiIrK3acX8u2WLu2cGn3N2Y954M1sJvAX8XzPnvBZ1rczYohzA3R909yx3z2rdruNupNO0/Px8Ro0aRWVlJc8//zw//elP+frrrwEYMGAAK1euZMmSJUyZMoWtW7fy7LPPcthhh9G/f/8dYk2bNo3nn3+eyspKLrnkEiZMmLBXchQREREREdkdKsy/+0qB2Kq0P7Ay6nyau6cC5wEzzOwHQf+O1ew+lJSUxNq1a+vPKysrSUpKajBmxowZDB8+HIBBgwaxdetW1q9f32BMSkoK7du3Z8WKFbz++uvMmTOH5ORk8vLy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\n",
            "text/plain": [
              "<Figure size 1080x720 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": [],
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "d6t_x-Mpgyxj",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 295
        },
        "outputId": "a123c9b8-97b7-46f9-abd0-1e78cc05c9bf"
      },
      "source": [
        "(invoice.groupby(['actual_city', 'actual_state'])['Total Value Manual'].agg('sum').sort_values(ascending = True)/1000000).tail(10).plot(kind='barh')\n",
        "plt.xlabel(\"Revenue in Millions\")\n",
        "plt.ylabel(\"City, State\")\n",
        "# for i, v in enumerate(invoice.groupby(['actual_city', 'actual_state'])['Total Value Manual'].agg('sum').sort_values(ascending = True)/1000000).head(10):\n",
        "#     plt.text(v,i,str(v))\n",
        "plt.title('Top 10 Revenue genarating Cities')\n",
        "plt.show()"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": [],
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "mShGJitzgzOc",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 420
        },
        "outputId": "640f3016-357d-4ac4-96f8-c2432e74b70d"
      },
      "source": [
        "pd.DataFrame(invoice.groupby(['actual_city', 'actual_state'])['Total Value Manual'].agg('sum').sort_values(ascending = True)/1000000)"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th>Total Value Manual</th>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>actual_city</th>\n",
              "      <th>actual_state</th>\n",
              "      <th></th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>Tonk</th>\n",
              "      <th>Rajasthan</th>\n",
              "      <td>0.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Udhampur</th>\n",
              "      <th>Jammu &amp; Kashmir</th>\n",
              "      <td>0.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Tarn Taran</th>\n",
              "      <th>Punjab</th>\n",
              "      <td>0.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>East Nimar</th>\n",
              "      <th>Madhya Pradesh</th>\n",
              "      <td>0.000003</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Dungarpur</th>\n",
              "      <th>Rajasthan</th>\n",
              "      <td>0.000086</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Tiruvallur</th>\n",
              "      <th>Tamil Nadu</th>\n",
              "      <td>88.626303</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Nashik</th>\n",
              "      <th>Maharashtra</th>\n",
              "      <td>91.873131</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Hyderabad</th>\n",
              "      <th>Telangana</th>\n",
              "      <td>134.265785</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Pune</th>\n",
              "      <th>Maharashtra</th>\n",
              "      <td>139.781001</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Chennai</th>\n",
              "      <th>Tamil Nadu</th>\n",
              "      <td>153.913586</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>461 rows × 1 columns</p>\n",
              "</div>"
            ],
            "text/plain": [
              "                             Total Value Manual\n",
              "actual_city actual_state                       \n",
              "Tonk        Rajasthan                  0.000000\n",
              "Udhampur    Jammu & Kashmir            0.000000\n",
              "Tarn Taran  Punjab                     0.000000\n",
              "East Nimar  Madhya Pradesh             0.000003\n",
              "Dungarpur   Rajasthan                  0.000086\n",
              "...                                         ...\n",
              "Tiruvallur  Tamil Nadu                88.626303\n",
              "Nashik      Maharashtra               91.873131\n",
              "Hyderabad   Telangana                134.265785\n",
              "Pune        Maharashtra              139.781001\n",
              "Chennai     Tamil Nadu               153.913586\n",
              "\n",
              "[461 rows x 1 columns]"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 161
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "d_uxzlXrgzcZ",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        ""
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "tDZtN5dTfwgP",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 197
        },
        "outputId": "18ceb649-9f4d-47ca-b749-b5eef182ec01"
      },
      "source": [
        "pm.head()"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Plant</th>\n",
              "      <th>Name 1</th>\n",
              "      <th>Valuation Area</th>\n",
              "      <th>Customer no. - plant</th>\n",
              "      <th>Factory calendar</th>\n",
              "      <th>Name 2</th>\n",
              "      <th>House number and street</th>\n",
              "      <th>PO Box</th>\n",
              "      <th>Postal Code</th>\n",
              "      <th>City</th>\n",
              "      <th>Sales organization</th>\n",
              "      <th>State</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>BC07</td>\n",
              "      <td>NERKUNDRAM</td>\n",
              "      <td>BC07</td>\n",
              "      <td>PLBC07</td>\n",
              "      <td>IN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>No.117 Poonamallee High Road,</td>\n",
              "      <td>600107.0</td>\n",
              "      <td>600107</td>\n",
              "      <td>Chennai</td>\n",
              "      <td>MFCS</td>\n",
              "      <td>Tamil Nadu</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>BC30</td>\n",
              "      <td>SAS NAGAR - MOHALI</td>\n",
              "      <td>BC30</td>\n",
              "      <td>PLBC30</td>\n",
              "      <td>IN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>C-118, Phase 07,</td>\n",
              "      <td>160055.0</td>\n",
              "      <td>160055</td>\n",
              "      <td>Mohali</td>\n",
              "      <td>MFCS</td>\n",
              "      <td>Punjab</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>X001</td>\n",
              "      <td>X001 - AUTO PLANET WHEELS</td>\n",
              "      <td>X001</td>\n",
              "      <td>PLX001</td>\n",
              "      <td>IN</td>\n",
              "      <td>Thane</td>\n",
              "      <td>Unit No.3, Kothari Compound,</td>\n",
              "      <td>400610.0</td>\n",
              "      <td>400610</td>\n",
              "      <td>Thane</td>\n",
              "      <td>MFCA</td>\n",
              "      <td>Maharashtra</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>X002</td>\n",
              "      <td>X002 - BHANDARI INDUSTRIES PVT</td>\n",
              "      <td>X002</td>\n",
              "      <td>PLX002</td>\n",
              "      <td>IN</td>\n",
              "      <td>Ghaziabad</td>\n",
              "      <td>18/1, C Site 4, Sahibabad</td>\n",
              "      <td>201010.0</td>\n",
              "      <td>201010</td>\n",
              "      <td>Ghaziabad</td>\n",
              "      <td>MFCA</td>\n",
              "      <td>Uttar Pradesh</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>X003</td>\n",
              "      <td>X003 - Om Sri Satya Sai Automo</td>\n",
              "      <td>X003</td>\n",
              "      <td>PLX003</td>\n",
              "      <td>IN</td>\n",
              "      <td>Bengaluru</td>\n",
              "      <td>#75, Sy.No. 83/2, Panathur Mai</td>\n",
              "      <td>560087.0</td>\n",
              "      <td>560087</td>\n",
              "      <td>Bengaluru</td>\n",
              "      <td>MFCB</td>\n",
              "      <td>Karnataka</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "  Plant                          Name 1  ... Sales organization          State\n",
              "0  BC07                      NERKUNDRAM  ...               MFCS     Tamil Nadu\n",
              "1  BC30              SAS NAGAR - MOHALI  ...               MFCS         Punjab\n",
              "2  X001       X001 - AUTO PLANET WHEELS  ...               MFCA    Maharashtra\n",
              "3  X002  X002 - BHANDARI INDUSTRIES PVT  ...               MFCA  Uttar Pradesh\n",
              "4  X003  X003 - Om Sri Satya Sai Automo  ...               MFCB      Karnataka\n",
              "\n",
              "[5 rows x 12 columns]"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 50
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "1mJhHlktinAS",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 33
        },
        "outputId": "e453d7f2-832b-44e9-e09e-88daf18bd95b"
      },
      "source": [
        "(pm['Plant']==pm['Valuation Area']).unique()"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([ True])"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 51
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "BN8Bh8UXlJLE",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 233
        },
        "outputId": "824904bc-296e-4028-f125-f62e0b3abc35"
      },
      "source": [
        "pm.isnull().sum()"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Plant                      0\n",
              "Name 1                     0\n",
              "Valuation Area             0\n",
              "Customer no. - plant       0\n",
              "Factory calendar           0\n",
              "Name 2                     2\n",
              "House number and street    2\n",
              "PO Box                     1\n",
              "Postal Code                0\n",
              "City                       0\n",
              "Sales organization         5\n",
              "State                      0\n",
              "dtype: int64"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 52
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "1zDrCu61oqKM",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 77
        },
        "outputId": "86b04467-5157-4b81-8dbf-740fcdaf54d3"
      },
      "source": [
        "pm[pm['PO Box'].isnull()]"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Plant</th>\n",
              "      <th>Name 1</th>\n",
              "      <th>Valuation Area</th>\n",
              "      <th>Customer no. - plant</th>\n",
              "      <th>Factory calendar</th>\n",
              "      <th>Name 2</th>\n",
              "      <th>House number and street</th>\n",
              "      <th>PO Box</th>\n",
              "      <th>Postal Code</th>\n",
              "      <th>City</th>\n",
              "      <th>Sales organization</th>\n",
              "      <th>State</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>413</th>\n",
              "      <td>X688</td>\n",
              "      <td>X688 - GIRRAJJI MOTORS</td>\n",
              "      <td>X688</td>\n",
              "      <td>PLX688</td>\n",
              "      <td>IN</td>\n",
              "      <td>Agra</td>\n",
              "      <td>Plot No.10K, Mauja Rohta, Gwal</td>\n",
              "      <td>NaN</td>\n",
              "      <td>999999</td>\n",
              "      <td>Agra</td>\n",
              "      <td>MFCD</td>\n",
              "      <td>Uttar Pradesh</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "    Plant                  Name 1  ... Sales organization          State\n",
              "413  X688  X688 - GIRRAJJI MOTORS  ...               MFCD  Uttar Pradesh\n",
              "\n",
              "[1 rows x 12 columns]"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 53
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "MJ4PGc-ArPo5",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 100
        },
        "outputId": "c5872e89-50c0-4044-e8b8-a08beb30e735"
      },
      "source": [
        "pm[pm['Plant']=='X688']['Postal Code'].replace('999999', '282002', inplace = True)"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "/usr/local/lib/python3.6/dist-packages/pandas/core/generic.py:6746: SettingWithCopyWarning: \n",
            "A value is trying to be set on a copy of a slice from a DataFrame\n",
            "\n",
            "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
            "  self._update_inplace(new_data)\n"
          ],
          "name": "stderr"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "ERUSghmdFTqv",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 116
        },
        "outputId": "c668c559-36e9-402b-bc9b-8c875fc29a86"
      },
      "source": [
        "pm[pm['Plant']=='X688']['Postal Code']=282002"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "/usr/local/lib/python3.6/dist-packages/ipykernel_launcher.py:1: SettingWithCopyWarning: \n",
            "A value is trying to be set on a copy of a slice from a DataFrame.\n",
            "Try using .loc[row_indexer,col_indexer] = value instead\n",
            "\n",
            "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
            "  \"\"\"Entry point for launching an IPython kernel.\n"
          ],
          "name": "stderr"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "h-ETrkueFmM_",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "pm.loc[pm['Plant']=='X688','Postal Code']=282002"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "fY9cfQGlrpgb",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 77
        },
        "outputId": "2ec7b35f-4a74-4a07-c499-deb2db2c2918"
      },
      "source": [
        "pm[pm['Plant']=='X688']"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Plant</th>\n",
              "      <th>Name 1</th>\n",
              "      <th>Valuation Area</th>\n",
              "      <th>Customer no. - plant</th>\n",
              "      <th>Factory calendar</th>\n",
              "      <th>Name 2</th>\n",
              "      <th>House number and street</th>\n",
              "      <th>PO Box</th>\n",
              "      <th>Postal Code</th>\n",
              "      <th>City</th>\n",
              "      <th>Sales organization</th>\n",
              "      <th>State</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>413</th>\n",
              "      <td>X688</td>\n",
              "      <td>X688 - GIRRAJJI MOTORS</td>\n",
              "      <td>X688</td>\n",
              "      <td>PLX688</td>\n",
              "      <td>IN</td>\n",
              "      <td>Agra</td>\n",
              "      <td>Plot No.10K, Mauja Rohta, Gwal</td>\n",
              "      <td>NaN</td>\n",
              "      <td>282002</td>\n",
              "      <td>Agra</td>\n",
              "      <td>MFCD</td>\n",
              "      <td>Uttar Pradesh</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "    Plant                  Name 1  ... Sales organization          State\n",
              "413  X688  X688 - GIRRAJJI MOTORS  ...               MFCD  Uttar Pradesh\n",
              "\n",
              "[1 rows x 12 columns]"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 57
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "Brbwl_Mps-ZG",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 197
        },
        "outputId": "0f1d52e1-b2f9-44e0-d0dc-80bd1dcf7af8"
      },
      "source": [
        "cd.head()"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Business Partner</th>\n",
              "      <th>Customer No.</th>\n",
              "      <th>Partner Type</th>\n",
              "      <th>Data Origin</th>\n",
              "      <th>Title</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>31</td>\n",
              "      <td>1</td>\n",
              "      <td>1.0</td>\n",
              "      <td>Z001</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>32</td>\n",
              "      <td>2</td>\n",
              "      <td>1.0</td>\n",
              "      <td>Z005</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>34</td>\n",
              "      <td>4</td>\n",
              "      <td>1.0</td>\n",
              "      <td>Z005</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>35</td>\n",
              "      <td>5</td>\n",
              "      <td>1.0</td>\n",
              "      <td>Z005</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>42</td>\n",
              "      <td>7</td>\n",
              "      <td>1.0</td>\n",
              "      <td>Z008</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "  Business Partner Customer No.  Partner Type Data Origin  Title\n",
              "0               31            1           1.0        Z001    NaN\n",
              "1               32            2           1.0        Z005    NaN\n",
              "2               34            4           1.0        Z005    NaN\n",
              "3               35            5           1.0        Z005    NaN\n",
              "4               42            7           1.0        Z008    NaN"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 58
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "NZOl2fw2w9GR",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 33
        },
        "outputId": "10b7efe2-fe1c-433f-bbeb-5e7564f1e67a"
      },
      "source": [
        "cd.shape"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "(555338, 5)"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 59
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "GxDEIUfexiY4",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 33
        },
        "outputId": "63dd0058-dbf1-4d80-eaae-af06ea96f56f"
      },
      "source": [
        "invoice.shape"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "(492314, 31)"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 60
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "5UpPuyaZxnLp",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 334
        },
        "outputId": "a039cf3a-a729-42ee-effa-c6b122765b1b"
      },
      "source": [
        "invoice.head()"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Unnamed: 0</th>\n",
              "      <th>Area / Locality</th>\n",
              "      <th>CITY</th>\n",
              "      <th>Cust Type</th>\n",
              "      <th>Customer No.</th>\n",
              "      <th>District</th>\n",
              "      <th>Insurance Company</th>\n",
              "      <th>Invoice Date</th>\n",
              "      <th>Invoice No</th>\n",
              "      <th>Invoice Time</th>\n",
              "      <th>Job Card No</th>\n",
              "      <th>JobCard Date</th>\n",
              "      <th>JobCard Time</th>\n",
              "      <th>KMs Reading</th>\n",
              "      <th>Labour Total</th>\n",
              "      <th>Make</th>\n",
              "      <th>Misc Total</th>\n",
              "      <th>Model</th>\n",
              "      <th>ODN No.</th>\n",
              "      <th>OSL Total</th>\n",
              "      <th>Order Type</th>\n",
              "      <th>Parts Total</th>\n",
              "      <th>Pin code</th>\n",
              "      <th>Plant</th>\n",
              "      <th>Plant Name1</th>\n",
              "      <th>Print Status</th>\n",
              "      <th>Recovrbl Exp</th>\n",
              "      <th>Regn No</th>\n",
              "      <th>Technician Name</th>\n",
              "      <th>User ID</th>\n",
              "      <th>Total Value Manual</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>0</td>\n",
              "      <td>MAJIWADA</td>\n",
              "      <td>Thane</td>\n",
              "      <td>Retail</td>\n",
              "      <td>67849</td>\n",
              "      <td>Maharashtra</td>\n",
              "      <td>NaN</td>\n",
              "      <td>2015-01-02</td>\n",
              "      <td>7005200002</td>\n",
              "      <td>11:30:36</td>\n",
              "      <td>168303</td>\n",
              "      <td>2014-12-13</td>\n",
              "      <td>14:29:43</td>\n",
              "      <td>49317</td>\n",
              "      <td>1203.14</td>\n",
              "      <td>GENERAL MOTORS</td>\n",
              "      <td>0.00</td>\n",
              "      <td>SPARK</td>\n",
              "      <td>7.005200e+09</td>\n",
              "      <td>500.06</td>\n",
              "      <td>Paid Service</td>\n",
              "      <td>2348.75</td>\n",
              "      <td>400601</td>\n",
              "      <td>BC01</td>\n",
              "      <td>THANE</td>\n",
              "      <td>NO</td>\n",
              "      <td>0.0</td>\n",
              "      <td>KA19MA1291</td>\n",
              "      <td>RUPESH</td>\n",
              "      <td>BC01FS1</td>\n",
              "      <td>4051.95</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>1</td>\n",
              "      <td>THNAE</td>\n",
              "      <td>THNAE</td>\n",
              "      <td>Retail</td>\n",
              "      <td>84419</td>\n",
              "      <td>Maharashtra</td>\n",
              "      <td>NaN</td>\n",
              "      <td>2015-01-03</td>\n",
              "      <td>7005200003</td>\n",
              "      <td>10:07:32</td>\n",
              "      <td>173997</td>\n",
              "      <td>2015-01-02</td>\n",
              "      <td>14:12:18</td>\n",
              "      <td>78584</td>\n",
              "      <td>804.26</td>\n",
              "      <td>TATA MOTORS</td>\n",
              "      <td>197.03</td>\n",
              "      <td>INDICA</td>\n",
              "      <td>7.005200e+09</td>\n",
              "      <td>0.00</td>\n",
              "      <td>SMC Value Package</td>\n",
              "      <td>0.00</td>\n",
              "      <td>400603</td>\n",
              "      <td>BC01</td>\n",
              "      <td>THANE</td>\n",
              "      <td>NO</td>\n",
              "      <td>0.0</td>\n",
              "      <td>MH43R3046</td>\n",
              "      <td>PRASHANT</td>\n",
              "      <td>BC01SA2</td>\n",
              "      <td>1001.29</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>2</td>\n",
              "      <td>THANE</td>\n",
              "      <td>THANE[W]</td>\n",
              "      <td>Retail</td>\n",
              "      <td>81055</td>\n",
              "      <td>Maharashtra</td>\n",
              "      <td>NaN</td>\n",
              "      <td>2015-01-03</td>\n",
              "      <td>7005200004</td>\n",
              "      <td>11:12:57</td>\n",
              "      <td>173889</td>\n",
              "      <td>2015-01-02</td>\n",
              "      <td>11:40:44</td>\n",
              "      <td>33985</td>\n",
              "      <td>180.19</td>\n",
              "      <td>MARUTI SUZUKI</td>\n",
              "      <td>0.00</td>\n",
              "      <td>ZEN</td>\n",
              "      <td>7.005200e+09</td>\n",
              "      <td>0.00</td>\n",
              "      <td>Running Repairs</td>\n",
              "      <td>52.95</td>\n",
              "      <td>400607</td>\n",
              "      <td>BC01</td>\n",
              "      <td>THANE</td>\n",
              "      <td>NO</td>\n",
              "      <td>0.0</td>\n",
              "      <td>AP09AX0582</td>\n",
              "      <td>IMRAN</td>\n",
              "      <td>BC01SA2</td>\n",
              "      <td>233.14</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>3</td>\n",
              "      <td>THNAE</td>\n",
              "      <td>THNAE</td>\n",
              "      <td>Retail</td>\n",
              "      <td>84419</td>\n",
              "      <td>Maharashtra</td>\n",
              "      <td>NaN</td>\n",
              "      <td>2015-01-03</td>\n",
              "      <td>7005200005</td>\n",
              "      <td>11:40:44</td>\n",
              "      <td>174158</td>\n",
              "      <td>2015-01-03</td>\n",
              "      <td>10:12:32</td>\n",
              "      <td>78584</td>\n",
              "      <td>0.00</td>\n",
              "      <td>TATA MOTORS</td>\n",
              "      <td>0.00</td>\n",
              "      <td>INDICA</td>\n",
              "      <td>7.005200e+09</td>\n",
              "      <td>0.00</td>\n",
              "      <td>SMC Redemption</td>\n",
              "      <td>0.00</td>\n",
              "      <td>400603</td>\n",
              "      <td>BC01</td>\n",
              "      <td>THANE</td>\n",
              "      <td>NO</td>\n",
              "      <td>0.0</td>\n",
              "      <td>MH43R3046</td>\n",
              "      <td>PRASHANT</td>\n",
              "      <td>BC01SA2</td>\n",
              "      <td>0.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>4</td>\n",
              "      <td>THANE</td>\n",
              "      <td>THANE</td>\n",
              "      <td>Retail</td>\n",
              "      <td>18980</td>\n",
              "      <td>Maharashtra</td>\n",
              "      <td>NaN</td>\n",
              "      <td>2015-01-03</td>\n",
              "      <td>7005200006</td>\n",
              "      <td>12:07:17</td>\n",
              "      <td>173860</td>\n",
              "      <td>2015-01-02</td>\n",
              "      <td>10:45:42</td>\n",
              "      <td>50057</td>\n",
              "      <td>1202.97</td>\n",
              "      <td>HYUNDAI</td>\n",
              "      <td>100.00</td>\n",
              "      <td>SANTRO XING</td>\n",
              "      <td>7.005200e+09</td>\n",
              "      <td>499.99</td>\n",
              "      <td>Paid Service</td>\n",
              "      <td>944.16</td>\n",
              "      <td>400603</td>\n",
              "      <td>BC01</td>\n",
              "      <td>THANE</td>\n",
              "      <td>NO</td>\n",
              "      <td>0.0</td>\n",
              "      <td>MH04CD9768</td>\n",
              "      <td>DAYANAND</td>\n",
              "      <td>BC01SA2</td>\n",
              "      <td>2747.12</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "   Unnamed: 0 Area / Locality  ...  User ID Total Value Manual\n",
              "0           0        MAJIWADA  ...  BC01FS1            4051.95\n",
              "1           1           THNAE  ...  BC01SA2            1001.29\n",
              "2           2           THANE  ...  BC01SA2             233.14\n",
              "3           3           THNAE  ...  BC01SA2               0.00\n",
              "4           4           THANE  ...  BC01SA2            2747.12\n",
              "\n",
              "[5 rows x 31 columns]"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 61
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "UqXSndY165Ts",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "invoice['Date']=pd.to_datetime(invoice['Invoice Date']).dt.day"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "ALtz1KAE6jTR",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 793
        },
        "outputId": "7bc55993-8761-4f1c-ab53-e6edae55b993"
      },
      "source": [
        "invoice"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Unnamed: 0</th>\n",
              "      <th>Area / Locality</th>\n",
              "      <th>CITY</th>\n",
              "      <th>Cust Type</th>\n",
              "      <th>Customer No.</th>\n",
              "      <th>District</th>\n",
              "      <th>Insurance Company</th>\n",
              "      <th>Invoice Date</th>\n",
              "      <th>Invoice No</th>\n",
              "      <th>Invoice Time</th>\n",
              "      <th>Job Card No</th>\n",
              "      <th>JobCard Date</th>\n",
              "      <th>JobCard Time</th>\n",
              "      <th>KMs Reading</th>\n",
              "      <th>Labour Total</th>\n",
              "      <th>Make</th>\n",
              "      <th>Misc Total</th>\n",
              "      <th>Model</th>\n",
              "      <th>ODN No.</th>\n",
              "      <th>OSL Total</th>\n",
              "      <th>Order Type</th>\n",
              "      <th>Parts Total</th>\n",
              "      <th>Pin code</th>\n",
              "      <th>Plant</th>\n",
              "      <th>Plant Name1</th>\n",
              "      <th>Print Status</th>\n",
              "      <th>Recovrbl Exp</th>\n",
              "      <th>Regn No</th>\n",
              "      <th>Technician Name</th>\n",
              "      <th>User ID</th>\n",
              "      <th>Total Value Manual</th>\n",
              "      <th>Date</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>0</td>\n",
              "      <td>MAJIWADA</td>\n",
              "      <td>Thane</td>\n",
              "      <td>Retail</td>\n",
              "      <td>67849</td>\n",
              "      <td>Maharashtra</td>\n",
              "      <td>NaN</td>\n",
              "      <td>2015-01-02</td>\n",
              "      <td>7005200002</td>\n",
              "      <td>11:30:36</td>\n",
              "      <td>168303</td>\n",
              "      <td>2014-12-13</td>\n",
              "      <td>14:29:43</td>\n",
              "      <td>49317</td>\n",
              "      <td>1203.14</td>\n",
              "      <td>GENERAL MOTORS</td>\n",
              "      <td>0.00</td>\n",
              "      <td>SPARK</td>\n",
              "      <td>7.005200e+09</td>\n",
              "      <td>500.06</td>\n",
              "      <td>Paid Service</td>\n",
              "      <td>2348.75</td>\n",
              "      <td>400601</td>\n",
              "      <td>BC01</td>\n",
              "      <td>THANE</td>\n",
              "      <td>NO</td>\n",
              "      <td>0.0</td>\n",
              "      <td>KA19MA1291</td>\n",
              "      <td>RUPESH</td>\n",
              "      <td>BC01FS1</td>\n",
              "      <td>4051.95</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>1</td>\n",
              "      <td>THNAE</td>\n",
              "      <td>THNAE</td>\n",
              "      <td>Retail</td>\n",
              "      <td>84419</td>\n",
              "      <td>Maharashtra</td>\n",
              "      <td>NaN</td>\n",
              "      <td>2015-01-03</td>\n",
              "      <td>7005200003</td>\n",
              "      <td>10:07:32</td>\n",
              "      <td>173997</td>\n",
              "      <td>2015-01-02</td>\n",
              "      <td>14:12:18</td>\n",
              "      <td>78584</td>\n",
              "      <td>804.26</td>\n",
              "      <td>TATA MOTORS</td>\n",
              "      <td>197.03</td>\n",
              "      <td>INDICA</td>\n",
              "      <td>7.005200e+09</td>\n",
              "      <td>0.00</td>\n",
              "      <td>SMC Value Package</td>\n",
              "      <td>0.00</td>\n",
              "      <td>400603</td>\n",
              "      <td>BC01</td>\n",
              "      <td>THANE</td>\n",
              "      <td>NO</td>\n",
              "      <td>0.0</td>\n",
              "      <td>MH43R3046</td>\n",
              "      <td>PRASHANT</td>\n",
              "      <td>BC01SA2</td>\n",
              "      <td>1001.29</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>2</td>\n",
              "      <td>THANE</td>\n",
              "      <td>THANE[W]</td>\n",
              "      <td>Retail</td>\n",
              "      <td>81055</td>\n",
              "      <td>Maharashtra</td>\n",
              "      <td>NaN</td>\n",
              "      <td>2015-01-03</td>\n",
              "      <td>7005200004</td>\n",
              "      <td>11:12:57</td>\n",
              "      <td>173889</td>\n",
              "      <td>2015-01-02</td>\n",
              "      <td>11:40:44</td>\n",
              "      <td>33985</td>\n",
              "      <td>180.19</td>\n",
              "      <td>MARUTI SUZUKI</td>\n",
              "      <td>0.00</td>\n",
              "      <td>ZEN</td>\n",
              "      <td>7.005200e+09</td>\n",
              "      <td>0.00</td>\n",
              "      <td>Running Repairs</td>\n",
              "      <td>52.95</td>\n",
              "      <td>400607</td>\n",
              "      <td>BC01</td>\n",
              "      <td>THANE</td>\n",
              "      <td>NO</td>\n",
              "      <td>0.0</td>\n",
              "      <td>AP09AX0582</td>\n",
              "      <td>IMRAN</td>\n",
              "      <td>BC01SA2</td>\n",
              "      <td>233.14</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>3</td>\n",
              "      <td>THNAE</td>\n",
              "      <td>THNAE</td>\n",
              "      <td>Retail</td>\n",
              "      <td>84419</td>\n",
              "      <td>Maharashtra</td>\n",
              "      <td>NaN</td>\n",
              "      <td>2015-01-03</td>\n",
              "      <td>7005200005</td>\n",
              "      <td>11:40:44</td>\n",
              "      <td>174158</td>\n",
              "      <td>2015-01-03</td>\n",
              "      <td>10:12:32</td>\n",
              "      <td>78584</td>\n",
              "      <td>0.00</td>\n",
              "      <td>TATA MOTORS</td>\n",
              "      <td>0.00</td>\n",
              "      <td>INDICA</td>\n",
              "      <td>7.005200e+09</td>\n",
              "      <td>0.00</td>\n",
              "      <td>SMC Redemption</td>\n",
              "      <td>0.00</td>\n",
              "      <td>400603</td>\n",
              "      <td>BC01</td>\n",
              "      <td>THANE</td>\n",
              "      <td>NO</td>\n",
              "      <td>0.0</td>\n",
              "      <td>MH43R3046</td>\n",
              "      <td>PRASHANT</td>\n",
              "      <td>BC01SA2</td>\n",
              "      <td>0.00</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>4</td>\n",
              "      <td>THANE</td>\n",
              "      <td>THANE</td>\n",
              "      <td>Retail</td>\n",
              "      <td>18980</td>\n",
              "      <td>Maharashtra</td>\n",
              "      <td>NaN</td>\n",
              "      <td>2015-01-03</td>\n",
              "      <td>7005200006</td>\n",
              "      <td>12:07:17</td>\n",
              "      <td>173860</td>\n",
              "      <td>2015-01-02</td>\n",
              "      <td>10:45:42</td>\n",
              "      <td>50057</td>\n",
              "      <td>1202.97</td>\n",
              "      <td>HYUNDAI</td>\n",
              "      <td>100.00</td>\n",
              "      <td>SANTRO XING</td>\n",
              "      <td>7.005200e+09</td>\n",
              "      <td>499.99</td>\n",
              "      <td>Paid Service</td>\n",
              "      <td>944.16</td>\n",
              "      <td>400603</td>\n",
              "      <td>BC01</td>\n",
              "      <td>THANE</td>\n",
              "      <td>NO</td>\n",
              "      <td>0.0</td>\n",
              "      <td>MH04CD9768</td>\n",
              "      <td>DAYANAND</td>\n",
              "      <td>BC01SA2</td>\n",
              "      <td>2747.12</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>492309</th>\n",
              "      <td>984736</td>\n",
              "      <td>.</td>\n",
              "      <td>Chennai</td>\n",
              "      <td>Retail</td>\n",
              "      <td>203820</td>\n",
              "      <td>Tamil Nadu</td>\n",
              "      <td>NaN</td>\n",
              "      <td>2016-06-30</td>\n",
              "      <td>7231000017</td>\n",
              "      <td>14:56:58</td>\n",
              "      <td>400100</td>\n",
              "      <td>2016-06-30</td>\n",
              "      <td>09:15:12</td>\n",
              "      <td>72546</td>\n",
              "      <td>2495.90</td>\n",
              "      <td>MARUTI SUZUKI</td>\n",
              "      <td>374.97</td>\n",
              "      <td>ALTO</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0.00</td>\n",
              "      <td>Paid Service</td>\n",
              "      <td>1587.28</td>\n",
              "      <td>600058</td>\n",
              "      <td>X405</td>\n",
              "      <td>X405 - NANGAN MOTORS PVT. LTD.</td>\n",
              "      <td>NO</td>\n",
              "      <td>0.0</td>\n",
              "      <td>TN38Y9343</td>\n",
              "      <td>NaN</td>\n",
              "      <td>X405SA1</td>\n",
              "      <td>4458.15</td>\n",
              "      <td>30</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>492310</th>\n",
              "      <td>984737</td>\n",
              "      <td>.</td>\n",
              "      <td>ADAMBAKKAM</td>\n",
              "      <td>Retail</td>\n",
              "      <td>170411</td>\n",
              "      <td>Tamil Nadu</td>\n",
              "      <td>NaN</td>\n",
              "      <td>2016-06-30</td>\n",
              "      <td>7231000018</td>\n",
              "      <td>15:06:52</td>\n",
              "      <td>400092</td>\n",
              "      <td>2016-06-30</td>\n",
              "      <td>08:42:15</td>\n",
              "      <td>18968</td>\n",
              "      <td>2443.47</td>\n",
              "      <td>NISSAN</td>\n",
              "      <td>0.00</td>\n",
              "      <td>MICRA</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0.00</td>\n",
              "      <td>Paid Service</td>\n",
              "      <td>4388.61</td>\n",
              "      <td>600088</td>\n",
              "      <td>X405</td>\n",
              "      <td>X405 - NANGAN MOTORS PVT. LTD.</td>\n",
              "      <td>NO</td>\n",
              "      <td>0.0</td>\n",
              "      <td>TN22CK0396</td>\n",
              "      <td>NaN</td>\n",
              "      <td>X405SA1</td>\n",
              "      <td>6832.08</td>\n",
              "      <td>30</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>492311</th>\n",
              "      <td>984738</td>\n",
              "      <td>CHENNAI</td>\n",
              "      <td>CHENNAI</td>\n",
              "      <td>Retail</td>\n",
              "      <td>48811</td>\n",
              "      <td>Tamil Nadu</td>\n",
              "      <td>NaN</td>\n",
              "      <td>2016-06-30</td>\n",
              "      <td>7231000019</td>\n",
              "      <td>15:43:56</td>\n",
              "      <td>400082</td>\n",
              "      <td>2016-06-30</td>\n",
              "      <td>08:27:51</td>\n",
              "      <td>177433</td>\n",
              "      <td>2598.92</td>\n",
              "      <td>MAHINDRA &amp;  MAHINDRA</td>\n",
              "      <td>0.00</td>\n",
              "      <td>SCORPIO CRDE</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0.00</td>\n",
              "      <td>Paid Service</td>\n",
              "      <td>6588.79</td>\n",
              "      <td>600044</td>\n",
              "      <td>X405</td>\n",
              "      <td>X405 - NANGAN MOTORS PVT. LTD.</td>\n",
              "      <td>NO</td>\n",
              "      <td>0.0</td>\n",
              "      <td>TN07BA0211</td>\n",
              "      <td>NaN</td>\n",
              "      <td>X405SA1</td>\n",
              "      <td>9187.71</td>\n",
              "      <td>30</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>492312</th>\n",
              "      <td>984739</td>\n",
              "      <td>DK NAGAR EXTN,</td>\n",
              "      <td>Vijaya Nagar, 1 main road,Velacherr</td>\n",
              "      <td>Retail</td>\n",
              "      <td>204067</td>\n",
              "      <td>Tamil Nadu</td>\n",
              "      <td>NaN</td>\n",
              "      <td>2016-06-30</td>\n",
              "      <td>7231000020</td>\n",
              "      <td>15:58:59</td>\n",
              "      <td>400545</td>\n",
              "      <td>2016-06-30</td>\n",
              "      <td>12:53:48</td>\n",
              "      <td>22932</td>\n",
              "      <td>11000.00</td>\n",
              "      <td>HONDA</td>\n",
              "      <td>100.00</td>\n",
              "      <td>AMAZE</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0.00</td>\n",
              "      <td>Accidental</td>\n",
              "      <td>0.00</td>\n",
              "      <td>600042</td>\n",
              "      <td>X405</td>\n",
              "      <td>X405 - NANGAN MOTORS PVT. LTD.</td>\n",
              "      <td>NO</td>\n",
              "      <td>0.0</td>\n",
              "      <td>TN07BV9290</td>\n",
              "      <td>NaN</td>\n",
              "      <td>X405SA1</td>\n",
              "      <td>11100.00</td>\n",
              "      <td>30</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>492313</th>\n",
              "      <td>984740</td>\n",
              "      <td>2ND FLOOR</td>\n",
              "      <td>saidapet</td>\n",
              "      <td>Retail</td>\n",
              "      <td>204288</td>\n",
              "      <td>Tamil Nadu</td>\n",
              "      <td>NaN</td>\n",
              "      <td>2016-06-30</td>\n",
              "      <td>7231000021</td>\n",
              "      <td>17:09:19</td>\n",
              "      <td>400891</td>\n",
              "      <td>2016-06-30</td>\n",
              "      <td>16:54:06</td>\n",
              "      <td>149197</td>\n",
              "      <td>747.78</td>\n",
              "      <td>MARUTI SUZUKI</td>\n",
              "      <td>0.00</td>\n",
              "      <td>WAGONR</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0.00</td>\n",
              "      <td>Running Repairs</td>\n",
              "      <td>0.00</td>\n",
              "      <td>600016</td>\n",
              "      <td>X405</td>\n",
              "      <td>X405 - NANGAN MOTORS PVT. LTD.</td>\n",
              "      <td>NO</td>\n",
              "      <td>0.0</td>\n",
              "      <td>TN10T3317</td>\n",
              "      <td>NaN</td>\n",
              "      <td>X405WM1</td>\n",
              "      <td>747.78</td>\n",
              "      <td>30</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>492314 rows × 32 columns</p>\n",
              "</div>"
            ],
            "text/plain": [
              "        Unnamed: 0 Area / Locality  ... Total Value Manual Date\n",
              "0                0        MAJIWADA  ...            4051.95    2\n",
              "1                1           THNAE  ...            1001.29    3\n",
              "2                2           THANE  ...             233.14    3\n",
              "3                3           THNAE  ...               0.00    3\n",
              "4                4           THANE  ...            2747.12    3\n",
              "...            ...             ...  ...                ...  ...\n",
              "492309      984736               .  ...            4458.15   30\n",
              "492310      984737               .  ...            6832.08   30\n",
              "492311      984738         CHENNAI  ...            9187.71   30\n",
              "492312      984739  DK NAGAR EXTN,  ...           11100.00   30\n",
              "492313      984740       2ND FLOOR  ...             747.78   30\n",
              "\n",
              "[492314 rows x 32 columns]"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 63
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "pk9TagUW_Zb1",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "def catergory(num):\n",
        "    if num<10:\n",
        "        return(\"Start of the Month\")\n",
        "    if num<20:\n",
        "        return(\"Mid of the Month\")\n",
        "    else:\n",
        "        return(\"End of the Month\")"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "Ms7jXFq1APrH",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "invoice['Category of days']=invoice['Date'].apply(lambda x: catergory(x))"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "BJC7Fmw7AqXp",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 417
        },
        "outputId": "e93c1e13-7adb-4011-f850-2bc11da23c68"
      },
      "source": [
        "invoice.head()"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Unnamed: 0</th>\n",
              "      <th>Area / Locality</th>\n",
              "      <th>CITY</th>\n",
              "      <th>Cust Type</th>\n",
              "      <th>Customer No.</th>\n",
              "      <th>District</th>\n",
              "      <th>Insurance Company</th>\n",
              "      <th>Invoice Date</th>\n",
              "      <th>Invoice No</th>\n",
              "      <th>Invoice Time</th>\n",
              "      <th>Job Card No</th>\n",
              "      <th>JobCard Date</th>\n",
              "      <th>JobCard Time</th>\n",
              "      <th>KMs Reading</th>\n",
              "      <th>Labour Total</th>\n",
              "      <th>Make</th>\n",
              "      <th>Misc Total</th>\n",
              "      <th>Model</th>\n",
              "      <th>ODN No.</th>\n",
              "      <th>OSL Total</th>\n",
              "      <th>Order Type</th>\n",
              "      <th>Parts Total</th>\n",
              "      <th>Pin code</th>\n",
              "      <th>Plant</th>\n",
              "      <th>Plant Name1</th>\n",
              "      <th>Print Status</th>\n",
              "      <th>Recovrbl Exp</th>\n",
              "      <th>Regn No</th>\n",
              "      <th>Technician Name</th>\n",
              "      <th>User ID</th>\n",
              "      <th>Total Value Manual</th>\n",
              "      <th>Date</th>\n",
              "      <th>Category of days</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>0</td>\n",
              "      <td>MAJIWADA</td>\n",
              "      <td>Thane</td>\n",
              "      <td>Retail</td>\n",
              "      <td>67849</td>\n",
              "      <td>Maharashtra</td>\n",
              "      <td>NaN</td>\n",
              "      <td>2015-01-02</td>\n",
              "      <td>7005200002</td>\n",
              "      <td>11:30:36</td>\n",
              "      <td>168303</td>\n",
              "      <td>2014-12-13</td>\n",
              "      <td>14:29:43</td>\n",
              "      <td>49317</td>\n",
              "      <td>1203.14</td>\n",
              "      <td>GENERAL MOTORS</td>\n",
              "      <td>0.00</td>\n",
              "      <td>SPARK</td>\n",
              "      <td>7.005200e+09</td>\n",
              "      <td>500.06</td>\n",
              "      <td>Paid Service</td>\n",
              "      <td>2348.75</td>\n",
              "      <td>400601</td>\n",
              "      <td>BC01</td>\n",
              "      <td>THANE</td>\n",
              "      <td>NO</td>\n",
              "      <td>0.0</td>\n",
              "      <td>KA19MA1291</td>\n",
              "      <td>RUPESH</td>\n",
              "      <td>BC01FS1</td>\n",
              "      <td>4051.95</td>\n",
              "      <td>2</td>\n",
              "      <td>Start of the Month</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>1</td>\n",
              "      <td>THNAE</td>\n",
              "      <td>THNAE</td>\n",
              "      <td>Retail</td>\n",
              "      <td>84419</td>\n",
              "      <td>Maharashtra</td>\n",
              "      <td>NaN</td>\n",
              "      <td>2015-01-03</td>\n",
              "      <td>7005200003</td>\n",
              "      <td>10:07:32</td>\n",
              "      <td>173997</td>\n",
              "      <td>2015-01-02</td>\n",
              "      <td>14:12:18</td>\n",
              "      <td>78584</td>\n",
              "      <td>804.26</td>\n",
              "      <td>TATA MOTORS</td>\n",
              "      <td>197.03</td>\n",
              "      <td>INDICA</td>\n",
              "      <td>7.005200e+09</td>\n",
              "      <td>0.00</td>\n",
              "      <td>SMC Value Package</td>\n",
              "      <td>0.00</td>\n",
              "      <td>400603</td>\n",
              "      <td>BC01</td>\n",
              "      <td>THANE</td>\n",
              "      <td>NO</td>\n",
              "      <td>0.0</td>\n",
              "      <td>MH43R3046</td>\n",
              "      <td>PRASHANT</td>\n",
              "      <td>BC01SA2</td>\n",
              "      <td>1001.29</td>\n",
              "      <td>3</td>\n",
              "      <td>Start of the Month</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>2</td>\n",
              "      <td>THANE</td>\n",
              "      <td>THANE[W]</td>\n",
              "      <td>Retail</td>\n",
              "      <td>81055</td>\n",
              "      <td>Maharashtra</td>\n",
              "      <td>NaN</td>\n",
              "      <td>2015-01-03</td>\n",
              "      <td>7005200004</td>\n",
              "      <td>11:12:57</td>\n",
              "      <td>173889</td>\n",
              "      <td>2015-01-02</td>\n",
              "      <td>11:40:44</td>\n",
              "      <td>33985</td>\n",
              "      <td>180.19</td>\n",
              "      <td>MARUTI SUZUKI</td>\n",
              "      <td>0.00</td>\n",
              "      <td>ZEN</td>\n",
              "      <td>7.005200e+09</td>\n",
              "      <td>0.00</td>\n",
              "      <td>Running Repairs</td>\n",
              "      <td>52.95</td>\n",
              "      <td>400607</td>\n",
              "      <td>BC01</td>\n",
              "      <td>THANE</td>\n",
              "      <td>NO</td>\n",
              "      <td>0.0</td>\n",
              "      <td>AP09AX0582</td>\n",
              "      <td>IMRAN</td>\n",
              "      <td>BC01SA2</td>\n",
              "      <td>233.14</td>\n",
              "      <td>3</td>\n",
              "      <td>Start of the Month</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>3</td>\n",
              "      <td>THNAE</td>\n",
              "      <td>THNAE</td>\n",
              "      <td>Retail</td>\n",
              "      <td>84419</td>\n",
              "      <td>Maharashtra</td>\n",
              "      <td>NaN</td>\n",
              "      <td>2015-01-03</td>\n",
              "      <td>7005200005</td>\n",
              "      <td>11:40:44</td>\n",
              "      <td>174158</td>\n",
              "      <td>2015-01-03</td>\n",
              "      <td>10:12:32</td>\n",
              "      <td>78584</td>\n",
              "      <td>0.00</td>\n",
              "      <td>TATA MOTORS</td>\n",
              "      <td>0.00</td>\n",
              "      <td>INDICA</td>\n",
              "      <td>7.005200e+09</td>\n",
              "      <td>0.00</td>\n",
              "      <td>SMC Redemption</td>\n",
              "      <td>0.00</td>\n",
              "      <td>400603</td>\n",
              "      <td>BC01</td>\n",
              "      <td>THANE</td>\n",
              "      <td>NO</td>\n",
              "      <td>0.0</td>\n",
              "      <td>MH43R3046</td>\n",
              "      <td>PRASHANT</td>\n",
              "      <td>BC01SA2</td>\n",
              "      <td>0.00</td>\n",
              "      <td>3</td>\n",
              "      <td>Start of the Month</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>4</td>\n",
              "      <td>THANE</td>\n",
              "      <td>THANE</td>\n",
              "      <td>Retail</td>\n",
              "      <td>18980</td>\n",
              "      <td>Maharashtra</td>\n",
              "      <td>NaN</td>\n",
              "      <td>2015-01-03</td>\n",
              "      <td>7005200006</td>\n",
              "      <td>12:07:17</td>\n",
              "      <td>173860</td>\n",
              "      <td>2015-01-02</td>\n",
              "      <td>10:45:42</td>\n",
              "      <td>50057</td>\n",
              "      <td>1202.97</td>\n",
              "      <td>HYUNDAI</td>\n",
              "      <td>100.00</td>\n",
              "      <td>SANTRO XING</td>\n",
              "      <td>7.005200e+09</td>\n",
              "      <td>499.99</td>\n",
              "      <td>Paid Service</td>\n",
              "      <td>944.16</td>\n",
              "      <td>400603</td>\n",
              "      <td>BC01</td>\n",
              "      <td>THANE</td>\n",
              "      <td>NO</td>\n",
              "      <td>0.0</td>\n",
              "      <td>MH04CD9768</td>\n",
              "      <td>DAYANAND</td>\n",
              "      <td>BC01SA2</td>\n",
              "      <td>2747.12</td>\n",
              "      <td>3</td>\n",
              "      <td>Start of the Month</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "   Unnamed: 0 Area / Locality  ... Date    Category of days\n",
              "0           0        MAJIWADA  ...    2  Start of the Month\n",
              "1           1           THNAE  ...    3  Start of the Month\n",
              "2           2           THANE  ...    3  Start of the Month\n",
              "3           3           THNAE  ...    3  Start of the Month\n",
              "4           4           THANE  ...    3  Start of the Month\n",
              "\n",
              "[5 rows x 33 columns]"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 66
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "Q26iA4rlAsGQ",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 281
        },
        "outputId": "b081d212-728f-4244-aeac-b8632ad6da70"
      },
      "source": [
        "(invoice['Category of days'].value_counts()/invoice.shape[0]*100).plot(kind='barh')\n",
        "for index, value in enumerate(round(invoice['Category of days'].value_counts()/invoice.shape[0]*100),2):\n",
        "    plt.text(value + .5,index -2,str(value))\n",
        "plt.xlim(0,50)\n",
        "plt.title(\"Visit of customer in percentage\")\n",
        "plt.show()"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": [],
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "MU3H4mc9BkGT",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 264
        },
        "outputId": "fbdc2446-82d6-4026-ad6c-c728b0fc13d6"
      },
      "source": [
        "invoice['Order Type'].value_counts().sort_values(ascending=True).plot(kind='barh')\n",
        "plt.show()"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": [],
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "JK_DoFKgOldr",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 294
        },
        "outputId": "33af0031-bc14-4467-c7f4-b858712dbf5c"
      },
      "source": [
        "invoice.groupby('Order Type')['Total Value Manual'].agg('sum').sort_values(ascending=True).plot(kind='barh')"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<matplotlib.axes._subplots.AxesSubplot at 0x7fad1f80e9e8>"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 69
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": [],
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "j8pM9onsPQvA",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 166
        },
        "outputId": "7b763918-e56c-463a-b2a8-d4ed421031f0"
      },
      "source": [
        "invoice.columns"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Index(['Unnamed: 0', 'Area / Locality', 'CITY', 'Cust Type', 'Customer No.',\n",
              "       'District', 'Insurance Company', 'Invoice Date', 'Invoice No',\n",
              "       'Invoice Time', 'Job Card No', 'JobCard Date', 'JobCard Time',\n",
              "       'KMs Reading', 'Labour Total', 'Make', 'Misc Total', 'Model', 'ODN No.',\n",
              "       'OSL Total', 'Order Type', 'Parts Total', 'Pin code', 'Plant',\n",
              "       'Plant Name1', 'Print Status', 'Recovrbl Exp', 'Regn No',\n",
              "       'Technician Name', 'User ID', 'Total Value Manual', 'Date',\n",
              "       'Category of days'],\n",
              "      dtype='object')"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 70
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "C4WUyF16QOEL",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "invoice['Month']=pd.to_datetime(invoice['Invoice Date']).dt.month"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "ZBTtXJEwQqFI",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 406
        },
        "outputId": "53d135a5-e600-421b-da69-04dcdd2e9736"
      },
      "source": [
        "invoice[['Invoice Date', 'Month']]"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Invoice Date</th>\n",
              "      <th>Month</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>2015-01-02</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>2015-01-03</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>2015-01-03</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>2015-01-03</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>2015-01-03</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>492309</th>\n",
              "      <td>2016-06-30</td>\n",
              "      <td>6</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>492310</th>\n",
              "      <td>2016-06-30</td>\n",
              "      <td>6</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>492311</th>\n",
              "      <td>2016-06-30</td>\n",
              "      <td>6</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>492312</th>\n",
              "      <td>2016-06-30</td>\n",
              "      <td>6</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>492313</th>\n",
              "      <td>2016-06-30</td>\n",
              "      <td>6</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>492314 rows × 2 columns</p>\n",
              "</div>"
            ],
            "text/plain": [
              "       Invoice Date  Month\n",
              "0        2015-01-02      1\n",
              "1        2015-01-03      1\n",
              "2        2015-01-03      1\n",
              "3        2015-01-03      1\n",
              "4        2015-01-03      1\n",
              "...             ...    ...\n",
              "492309   2016-06-30      6\n",
              "492310   2016-06-30      6\n",
              "492311   2016-06-30      6\n",
              "492312   2016-06-30      6\n",
              "492313   2016-06-30      6\n",
              "\n",
              "[492314 rows x 2 columns]"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 72
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "xniAusCiQzbv",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 264
        },
        "outputId": "41059fc5-4469-425a-ccb1-f90f9fa23a4f"
      },
      "source": [
        "invoice['Month'].value_counts(ascending = True).plot(kind='barh')\n",
        "plt.show()"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "image/png": "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\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": [],
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "as_rukAORJZ8",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 417
        },
        "outputId": "b1956c91-a2c7-48de-8364-ce7551010121"
      },
      "source": [
        "invoice.head()"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Unnamed: 0</th>\n",
              "      <th>Area / Locality</th>\n",
              "      <th>CITY</th>\n",
              "      <th>Cust Type</th>\n",
              "      <th>Customer No.</th>\n",
              "      <th>District</th>\n",
              "      <th>Insurance Company</th>\n",
              "      <th>Invoice Date</th>\n",
              "      <th>Invoice No</th>\n",
              "      <th>Invoice Time</th>\n",
              "      <th>Job Card No</th>\n",
              "      <th>JobCard Date</th>\n",
              "      <th>JobCard Time</th>\n",
              "      <th>KMs Reading</th>\n",
              "      <th>Labour Total</th>\n",
              "      <th>Make</th>\n",
              "      <th>Misc Total</th>\n",
              "      <th>Model</th>\n",
              "      <th>ODN No.</th>\n",
              "      <th>OSL Total</th>\n",
              "      <th>Order Type</th>\n",
              "      <th>Parts Total</th>\n",
              "      <th>Pin code</th>\n",
              "      <th>Plant</th>\n",
              "      <th>Plant Name1</th>\n",
              "      <th>Print Status</th>\n",
              "      <th>Recovrbl Exp</th>\n",
              "      <th>Regn No</th>\n",
              "      <th>Technician Name</th>\n",
              "      <th>User ID</th>\n",
              "      <th>Total Value Manual</th>\n",
              "      <th>Date</th>\n",
              "      <th>Category of days</th>\n",
              "      <th>Month</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>0</td>\n",
              "      <td>MAJIWADA</td>\n",
              "      <td>Thane</td>\n",
              "      <td>Retail</td>\n",
              "      <td>67849</td>\n",
              "      <td>Maharashtra</td>\n",
              "      <td>NaN</td>\n",
              "      <td>2015-01-02</td>\n",
              "      <td>7005200002</td>\n",
              "      <td>11:30:36</td>\n",
              "      <td>168303</td>\n",
              "      <td>2014-12-13</td>\n",
              "      <td>14:29:43</td>\n",
              "      <td>49317</td>\n",
              "      <td>1203.14</td>\n",
              "      <td>GENERAL MOTORS</td>\n",
              "      <td>0.00</td>\n",
              "      <td>SPARK</td>\n",
              "      <td>7.005200e+09</td>\n",
              "      <td>500.06</td>\n",
              "      <td>Paid Service</td>\n",
              "      <td>2348.75</td>\n",
              "      <td>400601</td>\n",
              "      <td>BC01</td>\n",
              "      <td>THANE</td>\n",
              "      <td>NO</td>\n",
              "      <td>0.0</td>\n",
              "      <td>KA19MA1291</td>\n",
              "      <td>RUPESH</td>\n",
              "      <td>BC01FS1</td>\n",
              "      <td>4051.95</td>\n",
              "      <td>2</td>\n",
              "      <td>Start of the Month</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>1</td>\n",
              "      <td>THNAE</td>\n",
              "      <td>THNAE</td>\n",
              "      <td>Retail</td>\n",
              "      <td>84419</td>\n",
              "      <td>Maharashtra</td>\n",
              "      <td>NaN</td>\n",
              "      <td>2015-01-03</td>\n",
              "      <td>7005200003</td>\n",
              "      <td>10:07:32</td>\n",
              "      <td>173997</td>\n",
              "      <td>2015-01-02</td>\n",
              "      <td>14:12:18</td>\n",
              "      <td>78584</td>\n",
              "      <td>804.26</td>\n",
              "      <td>TATA MOTORS</td>\n",
              "      <td>197.03</td>\n",
              "      <td>INDICA</td>\n",
              "      <td>7.005200e+09</td>\n",
              "      <td>0.00</td>\n",
              "      <td>SMC Value Package</td>\n",
              "      <td>0.00</td>\n",
              "      <td>400603</td>\n",
              "      <td>BC01</td>\n",
              "      <td>THANE</td>\n",
              "      <td>NO</td>\n",
              "      <td>0.0</td>\n",
              "      <td>MH43R3046</td>\n",
              "      <td>PRASHANT</td>\n",
              "      <td>BC01SA2</td>\n",
              "      <td>1001.29</td>\n",
              "      <td>3</td>\n",
              "      <td>Start of the Month</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>2</td>\n",
              "      <td>THANE</td>\n",
              "      <td>THANE[W]</td>\n",
              "      <td>Retail</td>\n",
              "      <td>81055</td>\n",
              "      <td>Maharashtra</td>\n",
              "      <td>NaN</td>\n",
              "      <td>2015-01-03</td>\n",
              "      <td>7005200004</td>\n",
              "      <td>11:12:57</td>\n",
              "      <td>173889</td>\n",
              "      <td>2015-01-02</td>\n",
              "      <td>11:40:44</td>\n",
              "      <td>33985</td>\n",
              "      <td>180.19</td>\n",
              "      <td>MARUTI SUZUKI</td>\n",
              "      <td>0.00</td>\n",
              "      <td>ZEN</td>\n",
              "      <td>7.005200e+09</td>\n",
              "      <td>0.00</td>\n",
              "      <td>Running Repairs</td>\n",
              "      <td>52.95</td>\n",
              "      <td>400607</td>\n",
              "      <td>BC01</td>\n",
              "      <td>THANE</td>\n",
              "      <td>NO</td>\n",
              "      <td>0.0</td>\n",
              "      <td>AP09AX0582</td>\n",
              "      <td>IMRAN</td>\n",
              "      <td>BC01SA2</td>\n",
              "      <td>233.14</td>\n",
              "      <td>3</td>\n",
              "      <td>Start of the Month</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>3</td>\n",
              "      <td>THNAE</td>\n",
              "      <td>THNAE</td>\n",
              "      <td>Retail</td>\n",
              "      <td>84419</td>\n",
              "      <td>Maharashtra</td>\n",
              "      <td>NaN</td>\n",
              "      <td>2015-01-03</td>\n",
              "      <td>7005200005</td>\n",
              "      <td>11:40:44</td>\n",
              "      <td>174158</td>\n",
              "      <td>2015-01-03</td>\n",
              "      <td>10:12:32</td>\n",
              "      <td>78584</td>\n",
              "      <td>0.00</td>\n",
              "      <td>TATA MOTORS</td>\n",
              "      <td>0.00</td>\n",
              "      <td>INDICA</td>\n",
              "      <td>7.005200e+09</td>\n",
              "      <td>0.00</td>\n",
              "      <td>SMC Redemption</td>\n",
              "      <td>0.00</td>\n",
              "      <td>400603</td>\n",
              "      <td>BC01</td>\n",
              "      <td>THANE</td>\n",
              "      <td>NO</td>\n",
              "      <td>0.0</td>\n",
              "      <td>MH43R3046</td>\n",
              "      <td>PRASHANT</td>\n",
              "      <td>BC01SA2</td>\n",
              "      <td>0.00</td>\n",
              "      <td>3</td>\n",
              "      <td>Start of the Month</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>4</td>\n",
              "      <td>THANE</td>\n",
              "      <td>THANE</td>\n",
              "      <td>Retail</td>\n",
              "      <td>18980</td>\n",
              "      <td>Maharashtra</td>\n",
              "      <td>NaN</td>\n",
              "      <td>2015-01-03</td>\n",
              "      <td>7005200006</td>\n",
              "      <td>12:07:17</td>\n",
              "      <td>173860</td>\n",
              "      <td>2015-01-02</td>\n",
              "      <td>10:45:42</td>\n",
              "      <td>50057</td>\n",
              "      <td>1202.97</td>\n",
              "      <td>HYUNDAI</td>\n",
              "      <td>100.00</td>\n",
              "      <td>SANTRO XING</td>\n",
              "      <td>7.005200e+09</td>\n",
              "      <td>499.99</td>\n",
              "      <td>Paid Service</td>\n",
              "      <td>944.16</td>\n",
              "      <td>400603</td>\n",
              "      <td>BC01</td>\n",
              "      <td>THANE</td>\n",
              "      <td>NO</td>\n",
              "      <td>0.0</td>\n",
              "      <td>MH04CD9768</td>\n",
              "      <td>DAYANAND</td>\n",
              "      <td>BC01SA2</td>\n",
              "      <td>2747.12</td>\n",
              "      <td>3</td>\n",
              "      <td>Start of the Month</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "   Unnamed: 0 Area / Locality      CITY  ... Date    Category of days Month\n",
              "0           0        MAJIWADA     Thane  ...    2  Start of the Month     1\n",
              "1           1           THNAE     THNAE  ...    3  Start of the Month     1\n",
              "2           2           THANE  THANE[W]  ...    3  Start of the Month     1\n",
              "3           3           THNAE     THNAE  ...    3  Start of the Month     1\n",
              "4           4           THANE     THANE  ...    3  Start of the Month     1\n",
              "\n",
              "[5 rows x 34 columns]"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 74
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "7bB6i9y-DBSw",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "cd_Data_Origin = cd['Data Origin']"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "62JI6rPvDVNh",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        ""
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "trIE9FnjHZRt",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 33
        },
        "outputId": "96225c72-3993-4c56-911b-dc4f9727e395"
      },
      "source": [
        "type(invoice['Customer No.'][100])"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "str"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 76
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "s-psnW_qJQmD",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "cd['Customer No.'] = [str(i) for i in cd['Customer No.']]"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "cHUxBYtDHZAw",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 33
        },
        "outputId": "4d96267f-2289-4ccf-e8ec-3c8c7bdf7cfb"
      },
      "source": [
        "type(cd['Customer No.'][0])"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "str"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 78
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "zvzzudOoHwsx",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 34
        },
        "outputId": "e4ec83e9-0199-4610-a2ed-fb3f537533f7"
      },
      "source": [
        "cd['Customer No.'][50000]"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "string"
            },
            "text/plain": [
              "'51742'"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 79
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "9dNJzuo5H8iQ",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 227
        },
        "outputId": "4e1369c1-874b-4e3b-c362-1831d79fbc1c"
      },
      "source": [
        "invoice[invoice['Customer No.']=='138']"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Unnamed: 0</th>\n",
              "      <th>Area / Locality</th>\n",
              "      <th>CITY</th>\n",
              "      <th>Cust Type</th>\n",
              "      <th>Customer No.</th>\n",
              "      <th>District</th>\n",
              "      <th>Insurance Company</th>\n",
              "      <th>Invoice Date</th>\n",
              "      <th>Invoice No</th>\n",
              "      <th>Invoice Time</th>\n",
              "      <th>Job Card No</th>\n",
              "      <th>JobCard Date</th>\n",
              "      <th>JobCard Time</th>\n",
              "      <th>KMs Reading</th>\n",
              "      <th>Labour Total</th>\n",
              "      <th>Make</th>\n",
              "      <th>Misc Total</th>\n",
              "      <th>Model</th>\n",
              "      <th>ODN No.</th>\n",
              "      <th>OSL Total</th>\n",
              "      <th>Order Type</th>\n",
              "      <th>Parts Total</th>\n",
              "      <th>Pin code</th>\n",
              "      <th>Plant</th>\n",
              "      <th>Plant Name1</th>\n",
              "      <th>Print Status</th>\n",
              "      <th>Recovrbl Exp</th>\n",
              "      <th>Regn No</th>\n",
              "      <th>Technician Name</th>\n",
              "      <th>User ID</th>\n",
              "      <th>Total Value Manual</th>\n",
              "      <th>Date</th>\n",
              "      <th>Category of days</th>\n",
              "      <th>Month</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>220465</th>\n",
              "      <td>655606</td>\n",
              "      <td>NaN</td>\n",
              "      <td>MUMBAI</td>\n",
              "      <td>Retail</td>\n",
              "      <td>138</td>\n",
              "      <td>Maharashtra</td>\n",
              "      <td>NaN</td>\n",
              "      <td>2012-04-05</td>\n",
              "      <td>7000000167</td>\n",
              "      <td>19:03:19</td>\n",
              "      <td>344</td>\n",
              "      <td>2012-04-05</td>\n",
              "      <td>17:47:13</td>\n",
              "      <td>75916</td>\n",
              "      <td>150.05</td>\n",
              "      <td>HONDA</td>\n",
              "      <td>0.00</td>\n",
              "      <td>CITY</td>\n",
              "      <td>7.000000e+09</td>\n",
              "      <td>0.0</td>\n",
              "      <td>Running Repairs</td>\n",
              "      <td>1133.74</td>\n",
              "      <td>400093</td>\n",
              "      <td>BC11</td>\n",
              "      <td>ANDHERI</td>\n",
              "      <td>NO</td>\n",
              "      <td>0.0</td>\n",
              "      <td>MH01YA3970</td>\n",
              "      <td>NaN</td>\n",
              "      <td>BC11SA2</td>\n",
              "      <td>1283.79</td>\n",
              "      <td>5</td>\n",
              "      <td>Start of the Month</td>\n",
              "      <td>4</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>228887</th>\n",
              "      <td>664028</td>\n",
              "      <td>NaN</td>\n",
              "      <td>MUMBAI</td>\n",
              "      <td>Retail</td>\n",
              "      <td>138</td>\n",
              "      <td>Maharashtra</td>\n",
              "      <td>NaN</td>\n",
              "      <td>2012-08-23</td>\n",
              "      <td>7000008795</td>\n",
              "      <td>09:29:41</td>\n",
              "      <td>8443</td>\n",
              "      <td>2012-08-16</td>\n",
              "      <td>15:13:52</td>\n",
              "      <td>76540</td>\n",
              "      <td>2828.89</td>\n",
              "      <td>HONDA</td>\n",
              "      <td>699.98</td>\n",
              "      <td>CITY</td>\n",
              "      <td>7.000009e+09</td>\n",
              "      <td>0.0</td>\n",
              "      <td>Paid Service</td>\n",
              "      <td>2824.84</td>\n",
              "      <td>400093</td>\n",
              "      <td>BC11</td>\n",
              "      <td>ANDHERI</td>\n",
              "      <td>NO</td>\n",
              "      <td>0.0</td>\n",
              "      <td>MH01YA3970</td>\n",
              "      <td>NaN</td>\n",
              "      <td>BC11SA2</td>\n",
              "      <td>6353.71</td>\n",
              "      <td>23</td>\n",
              "      <td>End of the Month</td>\n",
              "      <td>8</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "        Unnamed: 0 Area / Locality    CITY  ... Date    Category of days Month\n",
              "220465      655606             NaN  MUMBAI  ...    5  Start of the Month     4\n",
              "228887      664028             NaN  MUMBAI  ...   23    End of the Month     8\n",
              "\n",
              "[2 rows x 34 columns]"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 80
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "5kpSDK8JIMSb",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 406
        },
        "outputId": "63633251-2cb0-4861-f0fb-53eacc236b8b"
      },
      "source": [
        "jtd"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Unnamed: 0</th>\n",
              "      <th>DBM Order</th>\n",
              "      <th>Order Item</th>\n",
              "      <th>Material</th>\n",
              "      <th>Description</th>\n",
              "      <th>Item Category</th>\n",
              "      <th>Order Quantity</th>\n",
              "      <th>Target quantity UoM</th>\n",
              "      <th>Net value</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>0</td>\n",
              "      <td>22385</td>\n",
              "      <td>180</td>\n",
              "      <td>OSLCC_SRV31</td>\n",
              "      <td>MACHINING RR.SUSPENSION CHARGE  (MAJOR)</td>\n",
              "      <td>P010</td>\n",
              "      <td>1.2</td>\n",
              "      <td>MIN</td>\n",
              "      <td>1869.87</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>1</td>\n",
              "      <td>23910</td>\n",
              "      <td>10</td>\n",
              "      <td>1DM279018170117</td>\n",
              "      <td>ASSY.OIL COOLER (6-PLATE) (VOR</td>\n",
              "      <td>P002</td>\n",
              "      <td>1.0</td>\n",
              "      <td>EA</td>\n",
              "      <td>2151.13</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>2</td>\n",
              "      <td>23910</td>\n",
              "      <td>40</td>\n",
              "      <td>1IS150203BE01</td>\n",
              "      <td>FRONT WHEEL BEARING/ LUBRICATE</td>\n",
              "      <td>P002</td>\n",
              "      <td>1.0</td>\n",
              "      <td>EA</td>\n",
              "      <td>2552.92</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>3</td>\n",
              "      <td>23910</td>\n",
              "      <td>60</td>\n",
              "      <td>1DM279001990173</td>\n",
              "      <td>ASSY.CYL.HEAD W /O INJ.(NA W /O</td>\n",
              "      <td>P002</td>\n",
              "      <td>1.0</td>\n",
              "      <td>EA</td>\n",
              "      <td>20360.14</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>4</td>\n",
              "      <td>23910</td>\n",
              "      <td>70</td>\n",
              "      <td>1DM88552790S001SA</td>\n",
              "      <td>Engine Overhaul Kit -Indica Di</td>\n",
              "      <td>P002</td>\n",
              "      <td>1.0</td>\n",
              "      <td>EA</td>\n",
              "      <td>10691.63</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5619479</th>\n",
              "      <td>5619479</td>\n",
              "      <td>962813</td>\n",
              "      <td>50</td>\n",
              "      <td>ACCT_SRV</td>\n",
              "      <td>DENTING RADIATOR MOUNTING PANEL LOWER</td>\n",
              "      <td>P001</td>\n",
              "      <td>850.0</td>\n",
              "      <td>MIN</td>\n",
              "      <td>1050.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5619480</th>\n",
              "      <td>5619480</td>\n",
              "      <td>962813</td>\n",
              "      <td>60</td>\n",
              "      <td>ACCT_SRV</td>\n",
              "      <td>DENTING QUARTER PANEL RHS</td>\n",
              "      <td>P001</td>\n",
              "      <td>750.0</td>\n",
              "      <td>MIN</td>\n",
              "      <td>1250.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5619481</th>\n",
              "      <td>5619481</td>\n",
              "      <td>962813</td>\n",
              "      <td>70</td>\n",
              "      <td>TOYOTA_SRV</td>\n",
              "      <td>CHARGING BATTERY &amp; TESTING LOAD</td>\n",
              "      <td>P001</td>\n",
              "      <td>42.0</td>\n",
              "      <td>MIN</td>\n",
              "      <td>223.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5619482</th>\n",
              "      <td>5619482</td>\n",
              "      <td>962813</td>\n",
              "      <td>80</td>\n",
              "      <td>ACCT_SRV</td>\n",
              "      <td>REPAIR  LHS / RHS TAIL LIGHT BOX</td>\n",
              "      <td>P001</td>\n",
              "      <td>450.0</td>\n",
              "      <td>MIN</td>\n",
              "      <td>450.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5619483</th>\n",
              "      <td>5619483</td>\n",
              "      <td>962813</td>\n",
              "      <td>90</td>\n",
              "      <td>ACCT_SRV</td>\n",
              "      <td>DENTING FRONT BUMPER</td>\n",
              "      <td>P001</td>\n",
              "      <td>1200.0</td>\n",
              "      <td>MIN</td>\n",
              "      <td>2149.99</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>5619484 rows × 9 columns</p>\n",
              "</div>"
            ],
            "text/plain": [
              "         Unnamed: 0  DBM Order  ...  Target quantity UoM Net value\n",
              "0                 0      22385  ...                  MIN   1869.87\n",
              "1                 1      23910  ...                   EA   2151.13\n",
              "2                 2      23910  ...                   EA   2552.92\n",
              "3                 3      23910  ...                   EA  20360.14\n",
              "4                 4      23910  ...                   EA  10691.63\n",
              "...             ...        ...  ...                  ...       ...\n",
              "5619479     5619479     962813  ...                  MIN   1050.00\n",
              "5619480     5619480     962813  ...                  MIN   1250.00\n",
              "5619481     5619481     962813  ...                  MIN    223.00\n",
              "5619482     5619482     962813  ...                  MIN    450.00\n",
              "5619483     5619483     962813  ...                  MIN   2149.99\n",
              "\n",
              "[5619484 rows x 9 columns]"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 81
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "KKQ5LqRcOHiN",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 183
        },
        "outputId": "10b29cff-3f30-4b39-f26f-e55d30bb2ba8"
      },
      "source": [
        "jtd.isnull().sum()"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Unnamed: 0                 0\n",
              "DBM Order                  0\n",
              "Order Item                 0\n",
              "Material               51629\n",
              "Description            51629\n",
              "Item Category              0\n",
              "Order Quantity             0\n",
              "Target quantity UoM    51629\n",
              "Net value                  0\n",
              "dtype: int64"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 82
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "_kWzxls-OR6b",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 183
        },
        "outputId": "5d5ef404-a823-4299-983e-2c5279f9cfaa"
      },
      "source": [
        "jtd.nunique()"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Unnamed: 0             5619484\n",
              "DBM Order               973473\n",
              "Order Item                 558\n",
              "Material                126567\n",
              "Description              58558\n",
              "Item Category                5\n",
              "Order Quantity            3604\n",
              "Target quantity UoM          4\n",
              "Net value               375642\n",
              "dtype: int64"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 83
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "UpFCrCyEOiB6",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 294
        },
        "outputId": "c9d04e48-e016-4ed8-aa69-5a8ee536b82a"
      },
      "source": [
        "round((jtd['Item Category'].value_counts()/1000000).sort_values(ascending = True),2).plot(kind='barh')\n",
        "for index, value in enumerate(round((jtd['Item Category'].value_counts()/1000000).sort_values(ascending = True),2)):\n",
        "    plt.text(value + .1,index - .1,str(value))\n",
        "plt.title('Item Category')\n",
        "plt.xlabel('Item Category in Million')  \n",
        "plt.xlim(0,4)\n",
        "plt.show()"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": [],
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "O8_dt4MWfV9n",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "# for index, value in enumerate(round(invoice_cd.groupby(\"Data Origin\")['Total Value Manual'].agg('sum')/1000000,2).sort_values(ascending = True)):\n",
        "#     plt. text(value +5 , index - .1, str(value))"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "qvVoPgb5e15s",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 116
        },
        "outputId": "8417c66e-cc53-43bd-9260-908272b5f978"
      },
      "source": [
        "jtd['Item Category'].value_counts().sort_values(ascending = True)"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "G2TX      51629\n",
              "P010     128823\n",
              "P011     343288\n",
              "P001    1845451\n",
              "P002    3250293\n",
              "Name: Item Category, dtype: int64"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 86
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "RxEOjwMrk-ky",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 876
        },
        "outputId": "688e6059-ef5b-4735-ff34-1c58cee978d4"
      },
      "source": [
        "invoice"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Unnamed: 0</th>\n",
              "      <th>Area / Locality</th>\n",
              "      <th>CITY</th>\n",
              "      <th>Cust Type</th>\n",
              "      <th>Customer No.</th>\n",
              "      <th>District</th>\n",
              "      <th>Insurance Company</th>\n",
              "      <th>Invoice Date</th>\n",
              "      <th>Invoice No</th>\n",
              "      <th>Invoice Time</th>\n",
              "      <th>Job Card No</th>\n",
              "      <th>JobCard Date</th>\n",
              "      <th>JobCard Time</th>\n",
              "      <th>KMs Reading</th>\n",
              "      <th>Labour Total</th>\n",
              "      <th>Make</th>\n",
              "      <th>Misc Total</th>\n",
              "      <th>Model</th>\n",
              "      <th>ODN No.</th>\n",
              "      <th>OSL Total</th>\n",
              "      <th>Order Type</th>\n",
              "      <th>Parts Total</th>\n",
              "      <th>Pin code</th>\n",
              "      <th>Plant</th>\n",
              "      <th>Plant Name1</th>\n",
              "      <th>Print Status</th>\n",
              "      <th>Recovrbl Exp</th>\n",
              "      <th>Regn No</th>\n",
              "      <th>Technician Name</th>\n",
              "      <th>User ID</th>\n",
              "      <th>Total Value Manual</th>\n",
              "      <th>Date</th>\n",
              "      <th>Category of days</th>\n",
              "      <th>Month</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>0</td>\n",
              "      <td>MAJIWADA</td>\n",
              "      <td>Thane</td>\n",
              "      <td>Retail</td>\n",
              "      <td>67849</td>\n",
              "      <td>Maharashtra</td>\n",
              "      <td>NaN</td>\n",
              "      <td>2015-01-02</td>\n",
              "      <td>7005200002</td>\n",
              "      <td>11:30:36</td>\n",
              "      <td>168303</td>\n",
              "      <td>2014-12-13</td>\n",
              "      <td>14:29:43</td>\n",
              "      <td>49317</td>\n",
              "      <td>1203.14</td>\n",
              "      <td>GENERAL MOTORS</td>\n",
              "      <td>0.00</td>\n",
              "      <td>SPARK</td>\n",
              "      <td>7.005200e+09</td>\n",
              "      <td>500.06</td>\n",
              "      <td>Paid Service</td>\n",
              "      <td>2348.75</td>\n",
              "      <td>400601</td>\n",
              "      <td>BC01</td>\n",
              "      <td>THANE</td>\n",
              "      <td>NO</td>\n",
              "      <td>0.0</td>\n",
              "      <td>KA19MA1291</td>\n",
              "      <td>RUPESH</td>\n",
              "      <td>BC01FS1</td>\n",
              "      <td>4051.95</td>\n",
              "      <td>2</td>\n",
              "      <td>Start of the Month</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>1</td>\n",
              "      <td>THNAE</td>\n",
              "      <td>THNAE</td>\n",
              "      <td>Retail</td>\n",
              "      <td>84419</td>\n",
              "      <td>Maharashtra</td>\n",
              "      <td>NaN</td>\n",
              "      <td>2015-01-03</td>\n",
              "      <td>7005200003</td>\n",
              "      <td>10:07:32</td>\n",
              "      <td>173997</td>\n",
              "      <td>2015-01-02</td>\n",
              "      <td>14:12:18</td>\n",
              "      <td>78584</td>\n",
              "      <td>804.26</td>\n",
              "      <td>TATA MOTORS</td>\n",
              "      <td>197.03</td>\n",
              "      <td>INDICA</td>\n",
              "      <td>7.005200e+09</td>\n",
              "      <td>0.00</td>\n",
              "      <td>SMC Value Package</td>\n",
              "      <td>0.00</td>\n",
              "      <td>400603</td>\n",
              "      <td>BC01</td>\n",
              "      <td>THANE</td>\n",
              "      <td>NO</td>\n",
              "      <td>0.0</td>\n",
              "      <td>MH43R3046</td>\n",
              "      <td>PRASHANT</td>\n",
              "      <td>BC01SA2</td>\n",
              "      <td>1001.29</td>\n",
              "      <td>3</td>\n",
              "      <td>Start of the Month</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>2</td>\n",
              "      <td>THANE</td>\n",
              "      <td>THANE[W]</td>\n",
              "      <td>Retail</td>\n",
              "      <td>81055</td>\n",
              "      <td>Maharashtra</td>\n",
              "      <td>NaN</td>\n",
              "      <td>2015-01-03</td>\n",
              "      <td>7005200004</td>\n",
              "      <td>11:12:57</td>\n",
              "      <td>173889</td>\n",
              "      <td>2015-01-02</td>\n",
              "      <td>11:40:44</td>\n",
              "      <td>33985</td>\n",
              "      <td>180.19</td>\n",
              "      <td>MARUTI SUZUKI</td>\n",
              "      <td>0.00</td>\n",
              "      <td>ZEN</td>\n",
              "      <td>7.005200e+09</td>\n",
              "      <td>0.00</td>\n",
              "      <td>Running Repairs</td>\n",
              "      <td>52.95</td>\n",
              "      <td>400607</td>\n",
              "      <td>BC01</td>\n",
              "      <td>THANE</td>\n",
              "      <td>NO</td>\n",
              "      <td>0.0</td>\n",
              "      <td>AP09AX0582</td>\n",
              "      <td>IMRAN</td>\n",
              "      <td>BC01SA2</td>\n",
              "      <td>233.14</td>\n",
              "      <td>3</td>\n",
              "      <td>Start of the Month</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>3</td>\n",
              "      <td>THNAE</td>\n",
              "      <td>THNAE</td>\n",
              "      <td>Retail</td>\n",
              "      <td>84419</td>\n",
              "      <td>Maharashtra</td>\n",
              "      <td>NaN</td>\n",
              "      <td>2015-01-03</td>\n",
              "      <td>7005200005</td>\n",
              "      <td>11:40:44</td>\n",
              "      <td>174158</td>\n",
              "      <td>2015-01-03</td>\n",
              "      <td>10:12:32</td>\n",
              "      <td>78584</td>\n",
              "      <td>0.00</td>\n",
              "      <td>TATA MOTORS</td>\n",
              "      <td>0.00</td>\n",
              "      <td>INDICA</td>\n",
              "      <td>7.005200e+09</td>\n",
              "      <td>0.00</td>\n",
              "      <td>SMC Redemption</td>\n",
              "      <td>0.00</td>\n",
              "      <td>400603</td>\n",
              "      <td>BC01</td>\n",
              "      <td>THANE</td>\n",
              "      <td>NO</td>\n",
              "      <td>0.0</td>\n",
              "      <td>MH43R3046</td>\n",
              "      <td>PRASHANT</td>\n",
              "      <td>BC01SA2</td>\n",
              "      <td>0.00</td>\n",
              "      <td>3</td>\n",
              "      <td>Start of the Month</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>4</td>\n",
              "      <td>THANE</td>\n",
              "      <td>THANE</td>\n",
              "      <td>Retail</td>\n",
              "      <td>18980</td>\n",
              "      <td>Maharashtra</td>\n",
              "      <td>NaN</td>\n",
              "      <td>2015-01-03</td>\n",
              "      <td>7005200006</td>\n",
              "      <td>12:07:17</td>\n",
              "      <td>173860</td>\n",
              "      <td>2015-01-02</td>\n",
              "      <td>10:45:42</td>\n",
              "      <td>50057</td>\n",
              "      <td>1202.97</td>\n",
              "      <td>HYUNDAI</td>\n",
              "      <td>100.00</td>\n",
              "      <td>SANTRO XING</td>\n",
              "      <td>7.005200e+09</td>\n",
              "      <td>499.99</td>\n",
              "      <td>Paid Service</td>\n",
              "      <td>944.16</td>\n",
              "      <td>400603</td>\n",
              "      <td>BC01</td>\n",
              "      <td>THANE</td>\n",
              "      <td>NO</td>\n",
              "      <td>0.0</td>\n",
              "      <td>MH04CD9768</td>\n",
              "      <td>DAYANAND</td>\n",
              "      <td>BC01SA2</td>\n",
              "      <td>2747.12</td>\n",
              "      <td>3</td>\n",
              "      <td>Start of the Month</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>492309</th>\n",
              "      <td>984736</td>\n",
              "      <td>.</td>\n",
              "      <td>Chennai</td>\n",
              "      <td>Retail</td>\n",
              "      <td>203820</td>\n",
              "      <td>Tamil Nadu</td>\n",
              "      <td>NaN</td>\n",
              "      <td>2016-06-30</td>\n",
              "      <td>7231000017</td>\n",
              "      <td>14:56:58</td>\n",
              "      <td>400100</td>\n",
              "      <td>2016-06-30</td>\n",
              "      <td>09:15:12</td>\n",
              "      <td>72546</td>\n",
              "      <td>2495.90</td>\n",
              "      <td>MARUTI SUZUKI</td>\n",
              "      <td>374.97</td>\n",
              "      <td>ALTO</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0.00</td>\n",
              "      <td>Paid Service</td>\n",
              "      <td>1587.28</td>\n",
              "      <td>600058</td>\n",
              "      <td>X405</td>\n",
              "      <td>X405 - NANGAN MOTORS PVT. LTD.</td>\n",
              "      <td>NO</td>\n",
              "      <td>0.0</td>\n",
              "      <td>TN38Y9343</td>\n",
              "      <td>NaN</td>\n",
              "      <td>X405SA1</td>\n",
              "      <td>4458.15</td>\n",
              "      <td>30</td>\n",
              "      <td>End of the Month</td>\n",
              "      <td>6</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>492310</th>\n",
              "      <td>984737</td>\n",
              "      <td>.</td>\n",
              "      <td>ADAMBAKKAM</td>\n",
              "      <td>Retail</td>\n",
              "      <td>170411</td>\n",
              "      <td>Tamil Nadu</td>\n",
              "      <td>NaN</td>\n",
              "      <td>2016-06-30</td>\n",
              "      <td>7231000018</td>\n",
              "      <td>15:06:52</td>\n",
              "      <td>400092</td>\n",
              "      <td>2016-06-30</td>\n",
              "      <td>08:42:15</td>\n",
              "      <td>18968</td>\n",
              "      <td>2443.47</td>\n",
              "      <td>NISSAN</td>\n",
              "      <td>0.00</td>\n",
              "      <td>MICRA</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0.00</td>\n",
              "      <td>Paid Service</td>\n",
              "      <td>4388.61</td>\n",
              "      <td>600088</td>\n",
              "      <td>X405</td>\n",
              "      <td>X405 - NANGAN MOTORS PVT. LTD.</td>\n",
              "      <td>NO</td>\n",
              "      <td>0.0</td>\n",
              "      <td>TN22CK0396</td>\n",
              "      <td>NaN</td>\n",
              "      <td>X405SA1</td>\n",
              "      <td>6832.08</td>\n",
              "      <td>30</td>\n",
              "      <td>End of the Month</td>\n",
              "      <td>6</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>492311</th>\n",
              "      <td>984738</td>\n",
              "      <td>CHENNAI</td>\n",
              "      <td>CHENNAI</td>\n",
              "      <td>Retail</td>\n",
              "      <td>48811</td>\n",
              "      <td>Tamil Nadu</td>\n",
              "      <td>NaN</td>\n",
              "      <td>2016-06-30</td>\n",
              "      <td>7231000019</td>\n",
              "      <td>15:43:56</td>\n",
              "      <td>400082</td>\n",
              "      <td>2016-06-30</td>\n",
              "      <td>08:27:51</td>\n",
              "      <td>177433</td>\n",
              "      <td>2598.92</td>\n",
              "      <td>MAHINDRA &amp;  MAHINDRA</td>\n",
              "      <td>0.00</td>\n",
              "      <td>SCORPIO CRDE</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0.00</td>\n",
              "      <td>Paid Service</td>\n",
              "      <td>6588.79</td>\n",
              "      <td>600044</td>\n",
              "      <td>X405</td>\n",
              "      <td>X405 - NANGAN MOTORS PVT. LTD.</td>\n",
              "      <td>NO</td>\n",
              "      <td>0.0</td>\n",
              "      <td>TN07BA0211</td>\n",
              "      <td>NaN</td>\n",
              "      <td>X405SA1</td>\n",
              "      <td>9187.71</td>\n",
              "      <td>30</td>\n",
              "      <td>End of the Month</td>\n",
              "      <td>6</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>492312</th>\n",
              "      <td>984739</td>\n",
              "      <td>DK NAGAR EXTN,</td>\n",
              "      <td>Vijaya Nagar, 1 main road,Velacherr</td>\n",
              "      <td>Retail</td>\n",
              "      <td>204067</td>\n",
              "      <td>Tamil Nadu</td>\n",
              "      <td>NaN</td>\n",
              "      <td>2016-06-30</td>\n",
              "      <td>7231000020</td>\n",
              "      <td>15:58:59</td>\n",
              "      <td>400545</td>\n",
              "      <td>2016-06-30</td>\n",
              "      <td>12:53:48</td>\n",
              "      <td>22932</td>\n",
              "      <td>11000.00</td>\n",
              "      <td>HONDA</td>\n",
              "      <td>100.00</td>\n",
              "      <td>AMAZE</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0.00</td>\n",
              "      <td>Accidental</td>\n",
              "      <td>0.00</td>\n",
              "      <td>600042</td>\n",
              "      <td>X405</td>\n",
              "      <td>X405 - NANGAN MOTORS PVT. LTD.</td>\n",
              "      <td>NO</td>\n",
              "      <td>0.0</td>\n",
              "      <td>TN07BV9290</td>\n",
              "      <td>NaN</td>\n",
              "      <td>X405SA1</td>\n",
              "      <td>11100.00</td>\n",
              "      <td>30</td>\n",
              "      <td>End of the Month</td>\n",
              "      <td>6</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>492313</th>\n",
              "      <td>984740</td>\n",
              "      <td>2ND FLOOR</td>\n",
              "      <td>saidapet</td>\n",
              "      <td>Retail</td>\n",
              "      <td>204288</td>\n",
              "      <td>Tamil Nadu</td>\n",
              "      <td>NaN</td>\n",
              "      <td>2016-06-30</td>\n",
              "      <td>7231000021</td>\n",
              "      <td>17:09:19</td>\n",
              "      <td>400891</td>\n",
              "      <td>2016-06-30</td>\n",
              "      <td>16:54:06</td>\n",
              "      <td>149197</td>\n",
              "      <td>747.78</td>\n",
              "      <td>MARUTI SUZUKI</td>\n",
              "      <td>0.00</td>\n",
              "      <td>WAGONR</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0.00</td>\n",
              "      <td>Running Repairs</td>\n",
              "      <td>0.00</td>\n",
              "      <td>600016</td>\n",
              "      <td>X405</td>\n",
              "      <td>X405 - NANGAN MOTORS PVT. LTD.</td>\n",
              "      <td>NO</td>\n",
              "      <td>0.0</td>\n",
              "      <td>TN10T3317</td>\n",
              "      <td>NaN</td>\n",
              "      <td>X405WM1</td>\n",
              "      <td>747.78</td>\n",
              "      <td>30</td>\n",
              "      <td>End of the Month</td>\n",
              "      <td>6</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>492314 rows × 34 columns</p>\n",
              "</div>"
            ],
            "text/plain": [
              "        Unnamed: 0 Area / Locality  ...    Category of days Month\n",
              "0                0        MAJIWADA  ...  Start of the Month     1\n",
              "1                1           THNAE  ...  Start of the Month     1\n",
              "2                2           THANE  ...  Start of the Month     1\n",
              "3                3           THNAE  ...  Start of the Month     1\n",
              "4                4           THANE  ...  Start of the Month     1\n",
              "...            ...             ...  ...                 ...   ...\n",
              "492309      984736               .  ...    End of the Month     6\n",
              "492310      984737               .  ...    End of the Month     6\n",
              "492311      984738         CHENNAI  ...    End of the Month     6\n",
              "492312      984739  DK NAGAR EXTN,  ...    End of the Month     6\n",
              "492313      984740       2ND FLOOR  ...    End of the Month     6\n",
              "\n",
              "[492314 rows x 34 columns]"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 87
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "VT8GKlBqlFe1",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "invoice.drop(['Area / Locality', 'ODN No.','Regn No', 'Technician Name'], inplace=True, axis = 1)"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "_yafVhmZlLIf",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 533
        },
        "outputId": "c21277ea-a0ba-4d6b-f162-3d18f5adcb22"
      },
      "source": [
        "invoice.isnull().sum()"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Unnamed: 0                 0\n",
              "CITY                       1\n",
              "Cust Type                  0\n",
              "Customer No.               0\n",
              "District                   0\n",
              "Insurance Company     468723\n",
              "Invoice Date               0\n",
              "Invoice No                 0\n",
              "Invoice Time               0\n",
              "Job Card No                0\n",
              "JobCard Date               0\n",
              "JobCard Time               0\n",
              "KMs Reading                0\n",
              "Labour Total               0\n",
              "Make                       0\n",
              "Misc Total                 0\n",
              "Model                   1525\n",
              "OSL Total                  0\n",
              "Order Type                 0\n",
              "Parts Total                0\n",
              "Pin code                   0\n",
              "Plant                      0\n",
              "Plant Name1                0\n",
              "Print Status               0\n",
              "Recovrbl Exp               0\n",
              "User ID                    0\n",
              "Total Value Manual         0\n",
              "Date                       0\n",
              "Category of days           0\n",
              "Month                      0\n",
              "dtype: int64"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 89
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "l7ru1BDFobbz",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 406
        },
        "outputId": "b1ad6374-f757-4d83-b59d-2cd10ed86725"
      },
      "source": [
        "cd"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Business Partner</th>\n",
              "      <th>Customer No.</th>\n",
              "      <th>Partner Type</th>\n",
              "      <th>Data Origin</th>\n",
              "      <th>Title</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>31</td>\n",
              "      <td>1</td>\n",
              "      <td>1.0</td>\n",
              "      <td>Z001</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>32</td>\n",
              "      <td>2</td>\n",
              "      <td>1.0</td>\n",
              "      <td>Z005</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>34</td>\n",
              "      <td>4</td>\n",
              "      <td>1.0</td>\n",
              "      <td>Z005</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>35</td>\n",
              "      <td>5</td>\n",
              "      <td>1.0</td>\n",
              "      <td>Z005</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>42</td>\n",
              "      <td>7</td>\n",
              "      <td>1.0</td>\n",
              "      <td>Z008</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>555333</th>\n",
              "      <td>PLX506</td>\n",
              "      <td>PLX506</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>555334</th>\n",
              "      <td>PLX507</td>\n",
              "      <td>PLX507</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>555335</th>\n",
              "      <td>PLX508</td>\n",
              "      <td>PLX508</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>555336</th>\n",
              "      <td>PLX555</td>\n",
              "      <td>PLX555</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>555337</th>\n",
              "      <td>RSA100</td>\n",
              "      <td>RSA100</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>555338 rows × 5 columns</p>\n",
              "</div>"
            ],
            "text/plain": [
              "       Business Partner Customer No.  Partner Type Data Origin  Title\n",
              "0                    31            1           1.0        Z001    NaN\n",
              "1                    32            2           1.0        Z005    NaN\n",
              "2                    34            4           1.0        Z005    NaN\n",
              "3                    35            5           1.0        Z005    NaN\n",
              "4                    42            7           1.0        Z008    NaN\n",
              "...                 ...          ...           ...         ...    ...\n",
              "555333           PLX506       PLX506           NaN         NaN    NaN\n",
              "555334           PLX507       PLX507           NaN         NaN    NaN\n",
              "555335           PLX508       PLX508           NaN         NaN    NaN\n",
              "555336           PLX555       PLX555           NaN         NaN    NaN\n",
              "555337           RSA100       RSA100           NaN         NaN    NaN\n",
              "\n",
              "[555338 rows x 5 columns]"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 90
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "0OTOkAzKqhtB",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "invoice['zero revenue'] = invoice['Total Value Manual'].apply(lambda x: \"Zero Revenue\" if x<=0 else \"Revenue\")"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "V_ssCrWqrrpF",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 417
        },
        "outputId": "f6437796-7c7a-49c3-db21-07b266a986a8"
      },
      "source": [
        "invoice.head()"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Unnamed: 0</th>\n",
              "      <th>CITY</th>\n",
              "      <th>Cust Type</th>\n",
              "      <th>Customer No.</th>\n",
              "      <th>District</th>\n",
              "      <th>Insurance Company</th>\n",
              "      <th>Invoice Date</th>\n",
              "      <th>Invoice No</th>\n",
              "      <th>Invoice Time</th>\n",
              "      <th>Job Card No</th>\n",
              "      <th>JobCard Date</th>\n",
              "      <th>JobCard Time</th>\n",
              "      <th>KMs Reading</th>\n",
              "      <th>Labour Total</th>\n",
              "      <th>Make</th>\n",
              "      <th>Misc Total</th>\n",
              "      <th>Model</th>\n",
              "      <th>OSL Total</th>\n",
              "      <th>Order Type</th>\n",
              "      <th>Parts Total</th>\n",
              "      <th>Pin code</th>\n",
              "      <th>Plant</th>\n",
              "      <th>Plant Name1</th>\n",
              "      <th>Print Status</th>\n",
              "      <th>Recovrbl Exp</th>\n",
              "      <th>User ID</th>\n",
              "      <th>Total Value Manual</th>\n",
              "      <th>Date</th>\n",
              "      <th>Category of days</th>\n",
              "      <th>Month</th>\n",
              "      <th>zero revenue</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>0</td>\n",
              "      <td>Thane</td>\n",
              "      <td>Retail</td>\n",
              "      <td>67849</td>\n",
              "      <td>Maharashtra</td>\n",
              "      <td>NaN</td>\n",
              "      <td>2015-01-02</td>\n",
              "      <td>7005200002</td>\n",
              "      <td>11:30:36</td>\n",
              "      <td>168303</td>\n",
              "      <td>2014-12-13</td>\n",
              "      <td>14:29:43</td>\n",
              "      <td>49317</td>\n",
              "      <td>1203.14</td>\n",
              "      <td>GENERAL MOTORS</td>\n",
              "      <td>0.00</td>\n",
              "      <td>SPARK</td>\n",
              "      <td>500.06</td>\n",
              "      <td>Paid Service</td>\n",
              "      <td>2348.75</td>\n",
              "      <td>400601</td>\n",
              "      <td>BC01</td>\n",
              "      <td>THANE</td>\n",
              "      <td>NO</td>\n",
              "      <td>0.0</td>\n",
              "      <td>BC01FS1</td>\n",
              "      <td>4051.95</td>\n",
              "      <td>2</td>\n",
              "      <td>Start of the Month</td>\n",
              "      <td>1</td>\n",
              "      <td>Revenue</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>1</td>\n",
              "      <td>THNAE</td>\n",
              "      <td>Retail</td>\n",
              "      <td>84419</td>\n",
              "      <td>Maharashtra</td>\n",
              "      <td>NaN</td>\n",
              "      <td>2015-01-03</td>\n",
              "      <td>7005200003</td>\n",
              "      <td>10:07:32</td>\n",
              "      <td>173997</td>\n",
              "      <td>2015-01-02</td>\n",
              "      <td>14:12:18</td>\n",
              "      <td>78584</td>\n",
              "      <td>804.26</td>\n",
              "      <td>TATA MOTORS</td>\n",
              "      <td>197.03</td>\n",
              "      <td>INDICA</td>\n",
              "      <td>0.00</td>\n",
              "      <td>SMC Value Package</td>\n",
              "      <td>0.00</td>\n",
              "      <td>400603</td>\n",
              "      <td>BC01</td>\n",
              "      <td>THANE</td>\n",
              "      <td>NO</td>\n",
              "      <td>0.0</td>\n",
              "      <td>BC01SA2</td>\n",
              "      <td>1001.29</td>\n",
              "      <td>3</td>\n",
              "      <td>Start of the Month</td>\n",
              "      <td>1</td>\n",
              "      <td>Revenue</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>2</td>\n",
              "      <td>THANE[W]</td>\n",
              "      <td>Retail</td>\n",
              "      <td>81055</td>\n",
              "      <td>Maharashtra</td>\n",
              "      <td>NaN</td>\n",
              "      <td>2015-01-03</td>\n",
              "      <td>7005200004</td>\n",
              "      <td>11:12:57</td>\n",
              "      <td>173889</td>\n",
              "      <td>2015-01-02</td>\n",
              "      <td>11:40:44</td>\n",
              "      <td>33985</td>\n",
              "      <td>180.19</td>\n",
              "      <td>MARUTI SUZUKI</td>\n",
              "      <td>0.00</td>\n",
              "      <td>ZEN</td>\n",
              "      <td>0.00</td>\n",
              "      <td>Running Repairs</td>\n",
              "      <td>52.95</td>\n",
              "      <td>400607</td>\n",
              "      <td>BC01</td>\n",
              "      <td>THANE</td>\n",
              "      <td>NO</td>\n",
              "      <td>0.0</td>\n",
              "      <td>BC01SA2</td>\n",
              "      <td>233.14</td>\n",
              "      <td>3</td>\n",
              "      <td>Start of the Month</td>\n",
              "      <td>1</td>\n",
              "      <td>Revenue</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>3</td>\n",
              "      <td>THNAE</td>\n",
              "      <td>Retail</td>\n",
              "      <td>84419</td>\n",
              "      <td>Maharashtra</td>\n",
              "      <td>NaN</td>\n",
              "      <td>2015-01-03</td>\n",
              "      <td>7005200005</td>\n",
              "      <td>11:40:44</td>\n",
              "      <td>174158</td>\n",
              "      <td>2015-01-03</td>\n",
              "      <td>10:12:32</td>\n",
              "      <td>78584</td>\n",
              "      <td>0.00</td>\n",
              "      <td>TATA MOTORS</td>\n",
              "      <td>0.00</td>\n",
              "      <td>INDICA</td>\n",
              "      <td>0.00</td>\n",
              "      <td>SMC Redemption</td>\n",
              "      <td>0.00</td>\n",
              "      <td>400603</td>\n",
              "      <td>BC01</td>\n",
              "      <td>THANE</td>\n",
              "      <td>NO</td>\n",
              "      <td>0.0</td>\n",
              "      <td>BC01SA2</td>\n",
              "      <td>0.00</td>\n",
              "      <td>3</td>\n",
              "      <td>Start of the Month</td>\n",
              "      <td>1</td>\n",
              "      <td>Zero Revenue</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>4</td>\n",
              "      <td>THANE</td>\n",
              "      <td>Retail</td>\n",
              "      <td>18980</td>\n",
              "      <td>Maharashtra</td>\n",
              "      <td>NaN</td>\n",
              "      <td>2015-01-03</td>\n",
              "      <td>7005200006</td>\n",
              "      <td>12:07:17</td>\n",
              "      <td>173860</td>\n",
              "      <td>2015-01-02</td>\n",
              "      <td>10:45:42</td>\n",
              "      <td>50057</td>\n",
              "      <td>1202.97</td>\n",
              "      <td>HYUNDAI</td>\n",
              "      <td>100.00</td>\n",
              "      <td>SANTRO XING</td>\n",
              "      <td>499.99</td>\n",
              "      <td>Paid Service</td>\n",
              "      <td>944.16</td>\n",
              "      <td>400603</td>\n",
              "      <td>BC01</td>\n",
              "      <td>THANE</td>\n",
              "      <td>NO</td>\n",
              "      <td>0.0</td>\n",
              "      <td>BC01SA2</td>\n",
              "      <td>2747.12</td>\n",
              "      <td>3</td>\n",
              "      <td>Start of the Month</td>\n",
              "      <td>1</td>\n",
              "      <td>Revenue</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "   Unnamed: 0      CITY Cust Type  ...    Category of days Month  zero revenue\n",
              "0           0     Thane    Retail  ...  Start of the Month     1       Revenue\n",
              "1           1     THNAE    Retail  ...  Start of the Month     1       Revenue\n",
              "2           2  THANE[W]    Retail  ...  Start of the Month     1       Revenue\n",
              "3           3     THNAE    Retail  ...  Start of the Month     1  Zero Revenue\n",
              "4           4     THANE    Retail  ...  Start of the Month     1       Revenue\n",
              "\n",
              "[5 rows x 31 columns]"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 92
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "8R75GNTqs05S",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 150
        },
        "outputId": "c3d79a49-5a42-4ef5-87b7-468812426909"
      },
      "source": [
        "invoice['Cust Type'].value_counts()"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Retail              488995\n",
              "Fleets                2218\n",
              "Corporate others       579\n",
              "Corporate- M&M         254\n",
              "MFCWL                  252\n",
              "Franchise               15\n",
              "Insurance                1\n",
              "Name: Cust Type, dtype: int64"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 93
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "8MKlbZBKtA0i",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 166
        },
        "outputId": "1bdc4245-f856-41f3-e9f9-1dbcc70e98df"
      },
      "source": [
        "invoice.groupby('Cust Type')['Total Value Manual'].sum()"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Cust Type\n",
              "Corporate others    4.593302e+06\n",
              "Corporate- M&M      2.898597e+06\n",
              "Fleets              1.249344e+07\n",
              "Franchise           4.756534e+04\n",
              "Insurance           4.235490e+03\n",
              "MFCWL               8.700147e+05\n",
              "Retail              2.143381e+09\n",
              "Name: Total Value Manual, dtype: float64"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 94
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "oSpsLM9btZ43",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 216
        },
        "outputId": "6f311cdf-894f-402b-ef07-48cfebe2f402"
      },
      "source": [
        "invoice['Customer No.'].value_counts()"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "E4981      2668\n",
              "E11206      688\n",
              "412         610\n",
              "14505       441\n",
              "MFCWP01     360\n",
              "           ... \n",
              "247262        1\n",
              "132382        1\n",
              "201847        1\n",
              "113760        1\n",
              "31467         1\n",
              "Name: Customer No., Length: 253484, dtype: int64"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 95
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "90ezr7p7vA4i",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 233
        },
        "outputId": "ff827816-a9c7-4641-96cf-f5d0b040c197"
      },
      "source": [
        "invoice.groupby('Customer No.')['Total Value Manual'].sum()"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Customer No.\n",
              "1             0.00\n",
              "10        11105.56\n",
              "100       20799.74\n",
              "1000       8813.44\n",
              "10000      1735.52\n",
              "            ...   \n",
              "PLX241     3477.37\n",
              "PLX277     6870.95\n",
              "PLX312      567.80\n",
              "PLX380     4346.98\n",
              "PLX386        0.00\n",
              "Name: Total Value Manual, Length: 253484, dtype: float64"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 96
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "UG20ZyPsv0XH",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "invoice_cd = pd.merge(invoice,cd[['Customer No.','Data Origin']],how='inner', on='Customer No.')"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "N2GhDn-9wn7y",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 417
        },
        "outputId": "70074793-92b2-4102-ee98-464c491dbb56"
      },
      "source": [
        "invoice_cd.head()"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Unnamed: 0</th>\n",
              "      <th>CITY</th>\n",
              "      <th>Cust Type</th>\n",
              "      <th>Customer No.</th>\n",
              "      <th>District</th>\n",
              "      <th>Insurance Company</th>\n",
              "      <th>Invoice Date</th>\n",
              "      <th>Invoice No</th>\n",
              "      <th>Invoice Time</th>\n",
              "      <th>Job Card No</th>\n",
              "      <th>JobCard Date</th>\n",
              "      <th>JobCard Time</th>\n",
              "      <th>KMs Reading</th>\n",
              "      <th>Labour Total</th>\n",
              "      <th>Make</th>\n",
              "      <th>Misc Total</th>\n",
              "      <th>Model</th>\n",
              "      <th>OSL Total</th>\n",
              "      <th>Order Type</th>\n",
              "      <th>Parts Total</th>\n",
              "      <th>Pin code</th>\n",
              "      <th>Plant</th>\n",
              "      <th>Plant Name1</th>\n",
              "      <th>Print Status</th>\n",
              "      <th>Recovrbl Exp</th>\n",
              "      <th>User ID</th>\n",
              "      <th>Total Value Manual</th>\n",
              "      <th>Date</th>\n",
              "      <th>Category of days</th>\n",
              "      <th>Month</th>\n",
              "      <th>zero revenue</th>\n",
              "      <th>Data Origin</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>0</td>\n",
              "      <td>Thane</td>\n",
              "      <td>Retail</td>\n",
              "      <td>67849</td>\n",
              "      <td>Maharashtra</td>\n",
              "      <td>NaN</td>\n",
              "      <td>2015-01-02</td>\n",
              "      <td>7005200002</td>\n",
              "      <td>11:30:36</td>\n",
              "      <td>168303</td>\n",
              "      <td>2014-12-13</td>\n",
              "      <td>14:29:43</td>\n",
              "      <td>49317</td>\n",
              "      <td>1203.14</td>\n",
              "      <td>GENERAL MOTORS</td>\n",
              "      <td>0.0</td>\n",
              "      <td>SPARK</td>\n",
              "      <td>500.06</td>\n",
              "      <td>Paid Service</td>\n",
              "      <td>2348.75</td>\n",
              "      <td>400601</td>\n",
              "      <td>BC01</td>\n",
              "      <td>THANE</td>\n",
              "      <td>NO</td>\n",
              "      <td>0.0</td>\n",
              "      <td>BC01FS1</td>\n",
              "      <td>4051.95</td>\n",
              "      <td>2</td>\n",
              "      <td>Start of the Month</td>\n",
              "      <td>1</td>\n",
              "      <td>Revenue</td>\n",
              "      <td>Z007</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>619842</td>\n",
              "      <td>Thane</td>\n",
              "      <td>Retail</td>\n",
              "      <td>67849</td>\n",
              "      <td>Maharashtra</td>\n",
              "      <td>NaN</td>\n",
              "      <td>2014-08-14</td>\n",
              "      <td>7000137359</td>\n",
              "      <td>17:54:30</td>\n",
              "      <td>136482</td>\n",
              "      <td>2014-08-08</td>\n",
              "      <td>15:26:53</td>\n",
              "      <td>45575</td>\n",
              "      <td>989.98</td>\n",
              "      <td>GENERAL MOTORS</td>\n",
              "      <td>0.0</td>\n",
              "      <td>SPARK</td>\n",
              "      <td>6249.87</td>\n",
              "      <td>Accidental</td>\n",
              "      <td>4230.25</td>\n",
              "      <td>400601</td>\n",
              "      <td>BC01</td>\n",
              "      <td>THANE</td>\n",
              "      <td>NO</td>\n",
              "      <td>0.0</td>\n",
              "      <td>BC01FS1</td>\n",
              "      <td>11470.10</td>\n",
              "      <td>14</td>\n",
              "      <td>Mid of the Month</td>\n",
              "      <td>8</td>\n",
              "      <td>Revenue</td>\n",
              "      <td>Z007</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>619970</td>\n",
              "      <td>Thane</td>\n",
              "      <td>Retail</td>\n",
              "      <td>67849</td>\n",
              "      <td>Maharashtra</td>\n",
              "      <td>NaN</td>\n",
              "      <td>2014-08-16</td>\n",
              "      <td>7000137489</td>\n",
              "      <td>10:52:30</td>\n",
              "      <td>135895</td>\n",
              "      <td>2014-08-06</td>\n",
              "      <td>12:49:48</td>\n",
              "      <td>45575</td>\n",
              "      <td>6473.05</td>\n",
              "      <td>GENERAL MOTORS</td>\n",
              "      <td>0.0</td>\n",
              "      <td>SPARK</td>\n",
              "      <td>7325.09</td>\n",
              "      <td>Paid Service</td>\n",
              "      <td>14546.14</td>\n",
              "      <td>400601</td>\n",
              "      <td>BC01</td>\n",
              "      <td>THANE</td>\n",
              "      <td>NO</td>\n",
              "      <td>0.0</td>\n",
              "      <td>BC01FS1</td>\n",
              "      <td>28344.28</td>\n",
              "      <td>16</td>\n",
              "      <td>Mid of the Month</td>\n",
              "      <td>8</td>\n",
              "      <td>Revenue</td>\n",
              "      <td>Z007</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>632962</td>\n",
              "      <td>Thane</td>\n",
              "      <td>Retail</td>\n",
              "      <td>67849</td>\n",
              "      <td>Maharashtra</td>\n",
              "      <td>NaN</td>\n",
              "      <td>2014-10-09</td>\n",
              "      <td>7000151113</td>\n",
              "      <td>17:35:30</td>\n",
              "      <td>150383</td>\n",
              "      <td>2014-10-06</td>\n",
              "      <td>11:40:52</td>\n",
              "      <td>47556</td>\n",
              "      <td>0.00</td>\n",
              "      <td>GENERAL MOTORS</td>\n",
              "      <td>0.0</td>\n",
              "      <td>SPARK</td>\n",
              "      <td>0.00</td>\n",
              "      <td>Running Repairs</td>\n",
              "      <td>200.00</td>\n",
              "      <td>400601</td>\n",
              "      <td>BC01</td>\n",
              "      <td>THANE</td>\n",
              "      <td>NO</td>\n",
              "      <td>0.0</td>\n",
              "      <td>BC01SA1</td>\n",
              "      <td>200.00</td>\n",
              "      <td>9</td>\n",
              "      <td>Start of the Month</td>\n",
              "      <td>10</td>\n",
              "      <td>Revenue</td>\n",
              "      <td>Z007</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>655371</td>\n",
              "      <td>Thane</td>\n",
              "      <td>Retail</td>\n",
              "      <td>67849</td>\n",
              "      <td>Maharashtra</td>\n",
              "      <td>NaN</td>\n",
              "      <td>2014-12-31</td>\n",
              "      <td>7000175211</td>\n",
              "      <td>18:41:00</td>\n",
              "      <td>168210</td>\n",
              "      <td>2014-12-13</td>\n",
              "      <td>12:14:37</td>\n",
              "      <td>49317</td>\n",
              "      <td>1760.02</td>\n",
              "      <td>GENERAL MOTORS</td>\n",
              "      <td>500.0</td>\n",
              "      <td>SPARK</td>\n",
              "      <td>7850.09</td>\n",
              "      <td>Accidental</td>\n",
              "      <td>20348.81</td>\n",
              "      <td>400601</td>\n",
              "      <td>BC01</td>\n",
              "      <td>THANE</td>\n",
              "      <td>NO</td>\n",
              "      <td>0.0</td>\n",
              "      <td>BC01FS1</td>\n",
              "      <td>30458.92</td>\n",
              "      <td>31</td>\n",
              "      <td>End of the Month</td>\n",
              "      <td>12</td>\n",
              "      <td>Revenue</td>\n",
              "      <td>Z007</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "   Unnamed: 0   CITY Cust Type  ... Month zero revenue Data Origin\n",
              "0           0  Thane    Retail  ...     1      Revenue        Z007\n",
              "1      619842  Thane    Retail  ...     8      Revenue        Z007\n",
              "2      619970  Thane    Retail  ...     8      Revenue        Z007\n",
              "3      632962  Thane    Retail  ...    10      Revenue        Z007\n",
              "4      655371  Thane    Retail  ...    12      Revenue        Z007\n",
              "\n",
              "[5 rows x 32 columns]"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 98
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "FPHtXFAS0XeN",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 566
        },
        "outputId": "6be31701-2166-47b2-9f01-dc031c6c7c00"
      },
      "source": [
        "invoice_cd.isnull().sum()"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Unnamed: 0                 0\n",
              "CITY                       1\n",
              "Cust Type                  0\n",
              "Customer No.               0\n",
              "District                   0\n",
              "Insurance Company     468723\n",
              "Invoice Date               0\n",
              "Invoice No                 0\n",
              "Invoice Time               0\n",
              "Job Card No                0\n",
              "JobCard Date               0\n",
              "JobCard Time               0\n",
              "KMs Reading                0\n",
              "Labour Total               0\n",
              "Make                       0\n",
              "Misc Total                 0\n",
              "Model                   1525\n",
              "OSL Total                  0\n",
              "Order Type                 0\n",
              "Parts Total                0\n",
              "Pin code                   0\n",
              "Plant                      0\n",
              "Plant Name1                0\n",
              "Print Status               0\n",
              "Recovrbl Exp               0\n",
              "User ID                    0\n",
              "Total Value Manual         0\n",
              "Date                       0\n",
              "Category of days           0\n",
              "Month                      0\n",
              "zero revenue               0\n",
              "Data Origin             3567\n",
              "dtype: int64"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 99
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "xac6_cPd0hDo",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 297
        },
        "outputId": "5467c75b-48cd-4228-87bd-c321cc12f7e9"
      },
      "source": [
        "print(invoice_cd['zero revenue'].value_counts())\n",
        "invoice_cd['zero revenue'].value_counts().plot(kind='pie', )\n",
        "plt.show()"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "Revenue         440168\n",
            "Zero Revenue     52144\n",
            "Name: zero revenue, dtype: int64\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": []
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "nL8AJ2zX1XQJ",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 400
        },
        "outputId": "6ee8be4a-748c-44cc-ee06-a81a35d4cb0e"
      },
      "source": [
        "invoice_cd['Data Origin'].value_counts()"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Z005    104759\n",
              "Z001     89820\n",
              "Z006     86771\n",
              "Z002     39163\n",
              "Z021     28395\n",
              "Z019     24643\n",
              "Z004     23114\n",
              "Z008     19483\n",
              "Z018     18176\n",
              "Z013     11313\n",
              "Z011      9584\n",
              "Z016      7426\n",
              "Z017      6725\n",
              "Z003      4928\n",
              "Z014      4319\n",
              "Z010      4082\n",
              "Z012      2077\n",
              "Z007      1919\n",
              "Z020       761\n",
              "Z015       741\n",
              "Z009       497\n",
              "Z022        49\n",
              "Name: Data Origin, dtype: int64"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 101
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "-9qgBeHj2Bkh",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 621
        },
        "outputId": "530559a7-1954-4c0d-9c3b-519e7ee11b86"
      },
      "source": [
        "plt.figure(figsize=(15,10))\n",
        "(invoice_cd.groupby('Data Origin')['Total Value Manual'].sum()/1000000).sort_values(ascending = True).plot(kind='barh')\n",
        "for index, value in enumerate(round(invoice_cd.groupby(\"Data Origin\")['Total Value Manual'].agg('sum')/1000000,2).sort_values(ascending = True)):\n",
        "    plt. text(value +5 , index - .1, str(value))\n",
        "plt.xlim(0,500)\n",
        "plt.xlabel(\"Revenue (in Millions)\")\n",
        "plt.title(\"Revenue by advertisement strategy\")\n",
        "plt.show()"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 1080x720 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": [],
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "KLbtl55BKa0P",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 400
        },
        "outputId": "7aedc713-17e1-46a5-a13c-219a87460e7b"
      },
      "source": [
        "invoice_cd['Data Origin'].value_counts()"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Z005    104759\n",
              "Z001     89820\n",
              "Z006     86771\n",
              "Z002     39163\n",
              "Z021     28395\n",
              "Z019     24643\n",
              "Z004     23114\n",
              "Z008     19483\n",
              "Z018     18176\n",
              "Z013     11313\n",
              "Z011      9584\n",
              "Z016      7426\n",
              "Z017      6725\n",
              "Z003      4928\n",
              "Z014      4319\n",
              "Z010      4082\n",
              "Z012      2077\n",
              "Z007      1919\n",
              "Z020       761\n",
              "Z015       741\n",
              "Z009       497\n",
              "Z022        49\n",
              "Name: Data Origin, dtype: int64"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 103
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "zG3vGtiWxCCa",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "invoice_cd.drop(['Unnamed: 0', 'CITY', 'Labour Total', 'Misc Total', 'OSL Total', 'Parts Total', 'Plant Name1', 'Print Status', 'Recovrbl Exp'], axis = 1, inplace = True)"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "NIGb4g0tyQcU",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 416
        },
        "outputId": "760ef846-5128-48ec-c5db-5c87ab72eb6d"
      },
      "source": [
        "invoice_cd.isnull().sum()"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Cust Type                  0\n",
              "Customer No.               0\n",
              "District                   0\n",
              "Insurance Company     468723\n",
              "Invoice Date               0\n",
              "Invoice No                 0\n",
              "Invoice Time               0\n",
              "Job Card No                0\n",
              "JobCard Date               0\n",
              "JobCard Time               0\n",
              "KMs Reading                0\n",
              "Make                       0\n",
              "Model                   1525\n",
              "Order Type                 0\n",
              "Pin code                   0\n",
              "Plant                      0\n",
              "User ID                    0\n",
              "Total Value Manual         0\n",
              "Date                       0\n",
              "Category of days           0\n",
              "Month                      0\n",
              "zero revenue               0\n",
              "Data Origin             3567\n",
              "dtype: int64"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 105
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "n3ysfQTxyWPY",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 572
        },
        "outputId": "1bcdb417-9962-4c0d-b923-140ec166a8a8"
      },
      "source": [
        "fig,ax = plt.subplots(figsize = (16,8))\n",
        "sns.heatmap(invoice_cd.isnull(), yticklabels = False, cbar = False, cmap = 'viridis', )\n",
        "plt.show()"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "image/png": "iVBORw0KGgoAAAANSUhEUgAAA4sAAAIrCAYAAABGeAw5AAAABHNCSVQICAgIfAhkiAAAAAlwSFlzAAALEgAACxIB0t1+/AAAADh0RVh0U29mdHdhcmUAbWF0cGxvdGxpYiB2ZXJzaW9uMy4yLjIsIGh0dHA6Ly9tYXRwbG90bGliLm9yZy+WH4yJAAAgAElEQVR4nOzdebhlV1kn/u8boiJDGEShoyCIjAIFCDI5ophWcUCxEVEEFBBFA9iOoEzOSiNCO4AaEUEmQQGFUCAgoyBDgKA2iNJonPDH1DKT9/fH3id16u5blaTg3rUv9fk8T57k7FvFeTn33r33d+213lXdHQAAANh2yugCAAAAWB9hEQAAgAVhEQAAgAVhEQAAgAVhEQAAgAVhEQAAgIVTL+TrfbtTvn1fCrm4Dp//tKyxtrXWlUy1nf+v1x5dxq5Oucr/WfXnpraLZ611JWo7UWo7MWutba11JWo7UWq7+NZaV6K2E6W2E3P4/KfVsb7mySIAAAALwiIAAAALwiIAAAALwiIAAAALF9bgBgAAgE/Q2eedM7qEi01YBAAA2GNnnH5odAm7Onz+sb9mGioAAAALwiIAAAALwiIAAAALwiIAAAALwiIAAAALwiIAAAALwiIAAAALwiIAAAALwiIAAAALwiIAAAALwiIAAAALwiIAAAALwiIAAAALwiIAAAALwiIAAAALwiIAAAALwiIAAAALwiIAAAALwiIAAAALwiIAAAALwiIAAAALwiIAAAALwiIAAAALwiIAAAALwiIAAAALwiIAAAALwiIAAAALwiIAAAALwiIAAAALp44ugP11xumHRpewq8Pnj64AAADYJiyeZM4+75zRJQAAAAeAaagAAAAsCIsAAAAsCIsAAAAsCIsAAAAsCIsAAAAsCIsAAAAsCIsAAAAsCIsAAAAsCIsAAAAsCIsAAAAsCIsAAAAsCIsAAAAsCIsAAAAsCIsAAAAsCIsAAAAsCIsAAAAsCIsAAAAsCIsAAAAsCIsAAAAsCIsAAAAsCIsAAAAsCIsAAAAsCIsAAAAsCIsAAAAsCIsAAAAsCIsAAAAsCIsAAAAsCIsAAAAsCIsAAAAsCIsAAAAsCIsAAAAsCIsAAAAsCIsAAAAsCIsAAAAsCIsAAAAsCIsAAAAsCIsAAAAsCIsAAAAsCIsAAAAsCIsAAAAsCIsAAAAsCIsAAAAsCIsAAAAsnDq6APbXGacfGl3Crg6fP7oCAABgm7B4kjn7vHNGlwAAABwApqECAACwICwCAACwICwCAACwICwCAACwICwCAACwICwCAACwICwCAACwYJ/Fk8wZpx8aXcKuDp8/ugIAAGCbsHiSOfu8c0aXAAAAHACmoQIAALAgLAIAALAgLAIAALAgLAIAALAgLAIAALAgLAIAALAgLAIAALAgLAIAALAgLAIAALAgLAIAALAgLAIAALAgLAIAALAgLAIAALAgLAIAALAgLAIAALAgLAIAALAgLAIAALAgLAIAALAgLAIAALAgLAIAALAgLAIAALAgLAIAALAgLAIAALAgLAIAALAgLAIAALAgLAIAALAgLAIAALAgLAIAALAgLAIAALAgLAIAALAgLAIAALAgLAIAALAgLAIAALAgLAIAALAgLAIAALAgLAIAALAgLAIAALAgLAIAALAgLAIAALAgLAIAALAgLAIAALBw6ugCAAAAPtWdfd45o0u42IRFAACAPXbG6YdGl7Crw+cf+2umoQIAALAgLAIAALAgLAIAALAgLAIAALAgLAIAALAgLAIAALAgLAIAALAgLAIAALAgLAIAALAgLAIAALAgLAIAALAgLAIAALAgLAIAALAgLAIAALAgLAIAALAgLAIAALAgLAIAALAgLAIAALAgLAIAALAgLAIAALAgLAIAALAgLAIAALAgLAIAALAgLAIAALAgLAIAALAgLAIAALAgLAIAALAgLAIAALAgLAIAALAgLAIAALAgLAIAALAgLAIAALAgLAIAALAgLAIAALAgLAIAALAgLAIAALAgLAIAALAgLAIAALAgLAIAALAgLAIAALAgLAIAALAgLAIAALAgLAIAALAgLAIAALAgLAIAALAgLAIAALAgLAIAALAgLAIAALAgLAIAALAgLAIAALAgLAIAALAgLAIAALAgLAIAALBw6ugCAAAAPtWdfd45o0u42IRFAACAPXbG6YdGl7Crw+cf+2umoQIAALDgySIAAMAeMw0VAACABdNQAQAA+JQgLAIAALAgLAIAALAgLAIAALAgLAIAALAgLAIAALAgLAIAALAgLAIAALAgLAIAALBw6ugCAOBT2dnnnTO6BAA4IcIiAOyhM04/NLqEhcPnj64AgIPANFQAAAAWhEUAAAAWhEUAAAAWhEUAAAAWhEUAAAAWhEUAAAAWhEUAAAAWhEUAAAAWhEUAAAAWhEUAAAAWhEUAAAAWhEUAAAAWhEUAAAAWhEUAAAAWhEUAAAAWhEUAAAAWhEUAAAAWhEUAAAAWhEUAAAAWhEUAAAAWhEUAAAAWhEUAAAAWhEUAAAAWhEUAAAAWhEUAAAAWhEUAAAAWhEUAAAAWhEUAAAAWhEUAAAAWhEUAAAAWhEUAAAAWhEUAAAAWhEUAAAAWhEUAAAAWhEUAAAAWhEUAAAAWhEUAAAAWhEUAAAAWhEUAAAAWhEUAAAAWhEUAAAAWhEUAAAAWhEUAAAAWhEUAAAAWhEUAAAAWhEUAAAAWhEUAAAAWhEUAAAAWhEUAAAAWhEUAAAAWhEUAAAAWhEUAAAAWhEUAAAAWhEUAAAAWhEUAAAAWhEUAAAAWhEUAAAAWhEUAAAAWhEUAAAAWhEUAAAAWhEUAAAAWhEUAAAAWhEUAAAAWhEUAAAAWhEUAAAAWhEUAAAAWhEUAAAAWhEUAAAAWhEUAAAAWhEUAAAAWhEUAAAAWhEUAAAAWhEUAAAAWhEUAAAAWhEUAAAAWhEUAAAAWhEUAAAAWhEUAAAAWhEUAAAAWhEUAAAAWhEUAAAAWhEUAAAAWhEUAAAAWhEUAAAAWhEUAAAAWhEUAAAAWhEUAAAAWhEUAAAAWhEUAAAAWhEUAAAAWhEUAAAAWhEUAAAAWhEUAAAAWhEUAAAAWhEUAAAAWTh1dAPvrjNMPjS5hV4fPH10BAACwTVg8yZx93jmjSwAAAA4A01ABAABYEBYBAABYEBYBAABYsGbxJKPBDQAAcFEIiycZDW4AAICLwjRUAAAAFoRFAAAAFoRFAAAAFoRFAAAAFoRFAAAAFoRFAAAAFoRFAAAAFoRFAAAAFoRFAAAAFoRFAAAAFoRFAAAAFoRFAAAAFoRFAAAAFoRFAAAAFoRFAAAAFoRFAAAAFoRFAAAAFoRFAAAAFoRFAAAAFoRFAAAAFk4dXQD764zTD40uYVeHzx9dAQAAsE1YPMmcfd45o0sAAAAOANNQAQAAWBAWAQAAWBAWAQAAWBAWAQAAWBAWAQAAWBAWAQAAWBAWAQAAWBAWAQAAWBAWAQAAWBAWAQAAWBAWAQAAWDh1dAHsrzNOPzS6hF0dPn90BQAAwDZh8SRz9nnnjC4BAAA4AExDBQAAYMGTxZOMaagAAMBFISyeZExDBQAALgrTUAEAAFgQFgEAAFgQFgEAAFgQFgEAAFjQ4OYkoxsqAABwUQiLJxndUAEAgIvCNFQAAAAWhEUAAAAWhEUAAAAWhEUAAAAWhEUAAAAWhEUAAAAWhEUAAAAWhEUAAAAWhEUAAAAWhEUAAAAWTh1dAPvrjNMPjS5hV4fPH10BAACwTVg8yZx93jmjSwAAAA4A01ABAABYEBYBAABYEBYBAABYEBYBAABYEBYBAABYEBYBAABYEBYBAABYEBYBAABYEBYBAABYEBYBAABYEBYBAABYEBYBAABYEBYBAABYEBYBAABYOHV0AeyvM04/NLqEXR0+f3QFAADANmHxJHP2eeeMLgEAADgATEMFAABgQVgEAABgQVgEAABgQVgEAABgQVgEAABgQVgEAABgQVgEAABgQVgEAABgQVgEAABgQVgEAABg4dTRBbC/zjj90OgSdnX4/NEVAAAA24TFk8zZ550zugQAAOAAMA0VAACABWERAACABWERAACABWERAACABWERAACABWERAACABWERAACABWERAACABWERAACABWERAACABWERAACABWERAACABWERAACAhVNHF8D+OuP0Q6NL2NXh80dXAAAAbBMWTzJnn3fO6BIAAIADwDRUAAAAFoRFAAAAFoRFAAAAFqxZPMlocAMAAFwUwuJJRoMbAADgojANFQAAgAVPFk8ypqECAAAXhbB4kjENFQAAuChMQwUAAGBBWAQAAGBBWAQAAGBBWAQAAGBBWAQAAGBBWAQAAGBBWAQAAGDBPosnmTNOPzS6hF0dPn90BQAAwDZh8SRz9nnnjC4BAAA4AExDBQAAYEFYBAAAYEFYBAAAYEFYBAAAYEFYBAAAYEE31JOMrTMAAICLQlg8ydg6AwAAuChMQwUAAGBBWAQAAGBBWAQAAGBBWAQAAGBBWAQAAGChunv/3qzqXt392H17w4torXUlajtRajsxa61trXUlajtRarv41lpXorYTpbYTs9ba1lpXorYTpbb9f7J4r31+v4tqrXUlajtRajsxa61trXUlajtRarv41lpXorYTpbYTs9ba1lpXorYTddLXZhoqAAAAC8IiAAAAC/sdFlc55zfrrStR24lS24lZa21rrStR24lS28W31roStZ0otZ2Ytda21roStZ2ok762fW1wAwAAwMFgGioAAAALwiIAAAALwiIX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\n",
            "text/plain": [
              "<Figure size 1152x576 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": [],
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "i08cXS8X4IJy",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "invoice_cd['Year']=pd.to_datetime(invoice_cd['Invoice Date']).dt.year"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "ITjgsZjG4bOu",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 417
        },
        "outputId": "dd785962-24ab-4303-848e-6ce19d1575e2"
      },
      "source": [
        "invoice_cd.head()"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Cust Type</th>\n",
              "      <th>Customer No.</th>\n",
              "      <th>District</th>\n",
              "      <th>Insurance Company</th>\n",
              "      <th>Invoice Date</th>\n",
              "      <th>Invoice No</th>\n",
              "      <th>Invoice Time</th>\n",
              "      <th>Job Card No</th>\n",
              "      <th>JobCard Date</th>\n",
              "      <th>JobCard Time</th>\n",
              "      <th>KMs Reading</th>\n",
              "      <th>Make</th>\n",
              "      <th>Model</th>\n",
              "      <th>Order Type</th>\n",
              "      <th>Pin code</th>\n",
              "      <th>Plant</th>\n",
              "      <th>User ID</th>\n",
              "      <th>Total Value Manual</th>\n",
              "      <th>Date</th>\n",
              "      <th>Category of days</th>\n",
              "      <th>Month</th>\n",
              "      <th>zero revenue</th>\n",
              "      <th>Data Origin</th>\n",
              "      <th>Year</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>Retail</td>\n",
              "      <td>67849</td>\n",
              "      <td>Maharashtra</td>\n",
              "      <td>NaN</td>\n",
              "      <td>2015-01-02</td>\n",
              "      <td>7005200002</td>\n",
              "      <td>11:30:36</td>\n",
              "      <td>168303</td>\n",
              "      <td>2014-12-13</td>\n",
              "      <td>14:29:43</td>\n",
              "      <td>49317</td>\n",
              "      <td>GENERAL MOTORS</td>\n",
              "      <td>SPARK</td>\n",
              "      <td>Paid Service</td>\n",
              "      <td>400601</td>\n",
              "      <td>BC01</td>\n",
              "      <td>BC01FS1</td>\n",
              "      <td>4051.95</td>\n",
              "      <td>2</td>\n",
              "      <td>Start of the Month</td>\n",
              "      <td>1</td>\n",
              "      <td>Revenue</td>\n",
              "      <td>Z007</td>\n",
              "      <td>2015</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>Retail</td>\n",
              "      <td>67849</td>\n",
              "      <td>Maharashtra</td>\n",
              "      <td>NaN</td>\n",
              "      <td>2014-08-14</td>\n",
              "      <td>7000137359</td>\n",
              "      <td>17:54:30</td>\n",
              "      <td>136482</td>\n",
              "      <td>2014-08-08</td>\n",
              "      <td>15:26:53</td>\n",
              "      <td>45575</td>\n",
              "      <td>GENERAL MOTORS</td>\n",
              "      <td>SPARK</td>\n",
              "      <td>Accidental</td>\n",
              "      <td>400601</td>\n",
              "      <td>BC01</td>\n",
              "      <td>BC01FS1</td>\n",
              "      <td>11470.10</td>\n",
              "      <td>14</td>\n",
              "      <td>Mid of the Month</td>\n",
              "      <td>8</td>\n",
              "      <td>Revenue</td>\n",
              "      <td>Z007</td>\n",
              "      <td>2014</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>Retail</td>\n",
              "      <td>67849</td>\n",
              "      <td>Maharashtra</td>\n",
              "      <td>NaN</td>\n",
              "      <td>2014-08-16</td>\n",
              "      <td>7000137489</td>\n",
              "      <td>10:52:30</td>\n",
              "      <td>135895</td>\n",
              "      <td>2014-08-06</td>\n",
              "      <td>12:49:48</td>\n",
              "      <td>45575</td>\n",
              "      <td>GENERAL MOTORS</td>\n",
              "      <td>SPARK</td>\n",
              "      <td>Paid Service</td>\n",
              "      <td>400601</td>\n",
              "      <td>BC01</td>\n",
              "      <td>BC01FS1</td>\n",
              "      <td>28344.28</td>\n",
              "      <td>16</td>\n",
              "      <td>Mid of the Month</td>\n",
              "      <td>8</td>\n",
              "      <td>Revenue</td>\n",
              "      <td>Z007</td>\n",
              "      <td>2014</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>Retail</td>\n",
              "      <td>67849</td>\n",
              "      <td>Maharashtra</td>\n",
              "      <td>NaN</td>\n",
              "      <td>2014-10-09</td>\n",
              "      <td>7000151113</td>\n",
              "      <td>17:35:30</td>\n",
              "      <td>150383</td>\n",
              "      <td>2014-10-06</td>\n",
              "      <td>11:40:52</td>\n",
              "      <td>47556</td>\n",
              "      <td>GENERAL MOTORS</td>\n",
              "      <td>SPARK</td>\n",
              "      <td>Running Repairs</td>\n",
              "      <td>400601</td>\n",
              "      <td>BC01</td>\n",
              "      <td>BC01SA1</td>\n",
              "      <td>200.00</td>\n",
              "      <td>9</td>\n",
              "      <td>Start of the Month</td>\n",
              "      <td>10</td>\n",
              "      <td>Revenue</td>\n",
              "      <td>Z007</td>\n",
              "      <td>2014</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>Retail</td>\n",
              "      <td>67849</td>\n",
              "      <td>Maharashtra</td>\n",
              "      <td>NaN</td>\n",
              "      <td>2014-12-31</td>\n",
              "      <td>7000175211</td>\n",
              "      <td>18:41:00</td>\n",
              "      <td>168210</td>\n",
              "      <td>2014-12-13</td>\n",
              "      <td>12:14:37</td>\n",
              "      <td>49317</td>\n",
              "      <td>GENERAL MOTORS</td>\n",
              "      <td>SPARK</td>\n",
              "      <td>Accidental</td>\n",
              "      <td>400601</td>\n",
              "      <td>BC01</td>\n",
              "      <td>BC01FS1</td>\n",
              "      <td>30458.92</td>\n",
              "      <td>31</td>\n",
              "      <td>End of the Month</td>\n",
              "      <td>12</td>\n",
              "      <td>Revenue</td>\n",
              "      <td>Z007</td>\n",
              "      <td>2014</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "  Cust Type Customer No.     District  ... zero revenue Data Origin  Year\n",
              "0    Retail        67849  Maharashtra  ...      Revenue        Z007  2015\n",
              "1    Retail        67849  Maharashtra  ...      Revenue        Z007  2014\n",
              "2    Retail        67849  Maharashtra  ...      Revenue        Z007  2014\n",
              "3    Retail        67849  Maharashtra  ...      Revenue        Z007  2014\n",
              "4    Retail        67849  Maharashtra  ...      Revenue        Z007  2014\n",
              "\n",
              "[5 rows x 24 columns]"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 108
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "FnCiTkBg4lpr",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 116
        },
        "outputId": "e2ac88ab-e997-4ad4-f7aa-dbd864a4e790"
      },
      "source": [
        "invoice_cd['Year'].value_counts()"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "2016    197284\n",
              "2015    124719\n",
              "2014     95617\n",
              "2013     56057\n",
              "2012     18635\n",
              "Name: Year, dtype: int64"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 109
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "G69sHI004sUy",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 294
        },
        "outputId": "ba4ecba3-0e8e-4295-e227-7120d1924167"
      },
      "source": [
        "(invoice_cd.groupby(\"Year\")['Total Value Manual'].agg('sum')/1000000).plot(kind='barh', color='blue')\n",
        "plt.title('Revenue in Millions')\n",
        "plt.xlabel(\"Revenue\")\n",
        "for index, value in enumerate(round(invoice_cd.groupby(\"Year\")['Total Value Manual'].agg('sum')/1000000,2)):\n",
        "    plt. text(value +10 , index - .1, str(value))\n",
        "plt.xlim(0,1000)\n",
        "plt.show()"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": [],
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "mUmjCPL85JOl",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "invoice_cd.drop('Insurance Company', inplace=True, axis=1)"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "DvrnqlNhQVWN",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 417
        },
        "outputId": "bc236e6f-6fd9-44e2-e8c0-c1534f2a9845"
      },
      "source": [
        "invoice_cd.head()"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Cust Type</th>\n",
              "      <th>Customer No.</th>\n",
              "      <th>District</th>\n",
              "      <th>Invoice Date</th>\n",
              "      <th>Invoice No</th>\n",
              "      <th>Invoice Time</th>\n",
              "      <th>Job Card No</th>\n",
              "      <th>JobCard Date</th>\n",
              "      <th>JobCard Time</th>\n",
              "      <th>KMs Reading</th>\n",
              "      <th>Make</th>\n",
              "      <th>Model</th>\n",
              "      <th>Order Type</th>\n",
              "      <th>Pin code</th>\n",
              "      <th>Plant</th>\n",
              "      <th>User ID</th>\n",
              "      <th>Total Value Manual</th>\n",
              "      <th>Date</th>\n",
              "      <th>Category of days</th>\n",
              "      <th>Month</th>\n",
              "      <th>zero revenue</th>\n",
              "      <th>Data Origin</th>\n",
              "      <th>Year</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>Retail</td>\n",
              "      <td>67849</td>\n",
              "      <td>Maharashtra</td>\n",
              "      <td>2015-01-02</td>\n",
              "      <td>7005200002</td>\n",
              "      <td>11:30:36</td>\n",
              "      <td>168303</td>\n",
              "      <td>2014-12-13</td>\n",
              "      <td>14:29:43</td>\n",
              "      <td>49317</td>\n",
              "      <td>GENERAL MOTORS</td>\n",
              "      <td>SPARK</td>\n",
              "      <td>Paid Service</td>\n",
              "      <td>400601</td>\n",
              "      <td>BC01</td>\n",
              "      <td>BC01FS1</td>\n",
              "      <td>4051.95</td>\n",
              "      <td>2</td>\n",
              "      <td>Start of the Month</td>\n",
              "      <td>1</td>\n",
              "      <td>Revenue</td>\n",
              "      <td>Z007</td>\n",
              "      <td>2015</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>Retail</td>\n",
              "      <td>67849</td>\n",
              "      <td>Maharashtra</td>\n",
              "      <td>2014-08-14</td>\n",
              "      <td>7000137359</td>\n",
              "      <td>17:54:30</td>\n",
              "      <td>136482</td>\n",
              "      <td>2014-08-08</td>\n",
              "      <td>15:26:53</td>\n",
              "      <td>45575</td>\n",
              "      <td>GENERAL MOTORS</td>\n",
              "      <td>SPARK</td>\n",
              "      <td>Accidental</td>\n",
              "      <td>400601</td>\n",
              "      <td>BC01</td>\n",
              "      <td>BC01FS1</td>\n",
              "      <td>11470.10</td>\n",
              "      <td>14</td>\n",
              "      <td>Mid of the Month</td>\n",
              "      <td>8</td>\n",
              "      <td>Revenue</td>\n",
              "      <td>Z007</td>\n",
              "      <td>2014</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>Retail</td>\n",
              "      <td>67849</td>\n",
              "      <td>Maharashtra</td>\n",
              "      <td>2014-08-16</td>\n",
              "      <td>7000137489</td>\n",
              "      <td>10:52:30</td>\n",
              "      <td>135895</td>\n",
              "      <td>2014-08-06</td>\n",
              "      <td>12:49:48</td>\n",
              "      <td>45575</td>\n",
              "      <td>GENERAL MOTORS</td>\n",
              "      <td>SPARK</td>\n",
              "      <td>Paid Service</td>\n",
              "      <td>400601</td>\n",
              "      <td>BC01</td>\n",
              "      <td>BC01FS1</td>\n",
              "      <td>28344.28</td>\n",
              "      <td>16</td>\n",
              "      <td>Mid of the Month</td>\n",
              "      <td>8</td>\n",
              "      <td>Revenue</td>\n",
              "      <td>Z007</td>\n",
              "      <td>2014</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>Retail</td>\n",
              "      <td>67849</td>\n",
              "      <td>Maharashtra</td>\n",
              "      <td>2014-10-09</td>\n",
              "      <td>7000151113</td>\n",
              "      <td>17:35:30</td>\n",
              "      <td>150383</td>\n",
              "      <td>2014-10-06</td>\n",
              "      <td>11:40:52</td>\n",
              "      <td>47556</td>\n",
              "      <td>GENERAL MOTORS</td>\n",
              "      <td>SPARK</td>\n",
              "      <td>Running Repairs</td>\n",
              "      <td>400601</td>\n",
              "      <td>BC01</td>\n",
              "      <td>BC01SA1</td>\n",
              "      <td>200.00</td>\n",
              "      <td>9</td>\n",
              "      <td>Start of the Month</td>\n",
              "      <td>10</td>\n",
              "      <td>Revenue</td>\n",
              "      <td>Z007</td>\n",
              "      <td>2014</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>Retail</td>\n",
              "      <td>67849</td>\n",
              "      <td>Maharashtra</td>\n",
              "      <td>2014-12-31</td>\n",
              "      <td>7000175211</td>\n",
              "      <td>18:41:00</td>\n",
              "      <td>168210</td>\n",
              "      <td>2014-12-13</td>\n",
              "      <td>12:14:37</td>\n",
              "      <td>49317</td>\n",
              "      <td>GENERAL MOTORS</td>\n",
              "      <td>SPARK</td>\n",
              "      <td>Accidental</td>\n",
              "      <td>400601</td>\n",
              "      <td>BC01</td>\n",
              "      <td>BC01FS1</td>\n",
              "      <td>30458.92</td>\n",
              "      <td>31</td>\n",
              "      <td>End of the Month</td>\n",
              "      <td>12</td>\n",
              "      <td>Revenue</td>\n",
              "      <td>Z007</td>\n",
              "      <td>2014</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "  Cust Type Customer No.     District  ... zero revenue  Data Origin  Year\n",
              "0    Retail        67849  Maharashtra  ...      Revenue         Z007  2015\n",
              "1    Retail        67849  Maharashtra  ...      Revenue         Z007  2014\n",
              "2    Retail        67849  Maharashtra  ...      Revenue         Z007  2014\n",
              "3    Retail        67849  Maharashtra  ...      Revenue         Z007  2014\n",
              "4    Retail        67849  Maharashtra  ...      Revenue         Z007  2014\n",
              "\n",
              "[5 rows x 23 columns]"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 112
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "poxBdRgFKHub",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 216
        },
        "outputId": "f40df6db-97d8-4b22-e11a-ad5913d9f364"
      },
      "source": [
        "invoice_cd['Plant'].value_counts()"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "BC03    28615\n",
              "BC01    14483\n",
              "BC05    13323\n",
              "BC26    13253\n",
              "BC06    12752\n",
              "        ...  \n",
              "X432       11\n",
              "X339        8\n",
              "X359        5\n",
              "X206        2\n",
              "X211        1\n",
              "Name: Plant, Length: 242, dtype: int64"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 113
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "WDvz_5c2KZsD",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "Plant_Revenue = pd.DataFrame((invoice_cd.groupby(['Plant','Year','District'])['Total Value Manual'].agg('sum')/1000000).sort_values(ascending=False))\n",
        "Plant_Revenue.reset_index(inplace=True)\n",
        "Plant_Revenue.columns= (['Plant','Year', 'State','Revenue (in Million)'])"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "BuVivcKhKvdv",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 347
        },
        "outputId": "a0346749-5636-497d-926e-6b41a9c8bc61"
      },
      "source": [
        "Plant_Revenue.head(10)"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Plant</th>\n",
              "      <th>Year</th>\n",
              "      <th>State</th>\n",
              "      <th>Revenue (in Million)</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>BC06</td>\n",
              "      <td>2014</td>\n",
              "      <td>Tamil Nadu</td>\n",
              "      <td>29.567311</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>BC06</td>\n",
              "      <td>2015</td>\n",
              "      <td>Tamil Nadu</td>\n",
              "      <td>28.217296</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>BC03</td>\n",
              "      <td>2013</td>\n",
              "      <td>Maharashtra</td>\n",
              "      <td>28.205798</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>BC06</td>\n",
              "      <td>2013</td>\n",
              "      <td>Tamil Nadu</td>\n",
              "      <td>27.860958</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>BC03</td>\n",
              "      <td>2014</td>\n",
              "      <td>Maharashtra</td>\n",
              "      <td>27.682280</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>BC03</td>\n",
              "      <td>2015</td>\n",
              "      <td>Maharashtra</td>\n",
              "      <td>27.289427</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6</th>\n",
              "      <td>BC07</td>\n",
              "      <td>2015</td>\n",
              "      <td>Tamil Nadu</td>\n",
              "      <td>22.543903</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7</th>\n",
              "      <td>BC05</td>\n",
              "      <td>2014</td>\n",
              "      <td>Andhra Pradesh</td>\n",
              "      <td>22.059397</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8</th>\n",
              "      <td>BC07</td>\n",
              "      <td>2016</td>\n",
              "      <td>Tamil Nadu</td>\n",
              "      <td>21.942490</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9</th>\n",
              "      <td>BC26</td>\n",
              "      <td>2015</td>\n",
              "      <td>Maharashtra</td>\n",
              "      <td>19.179013</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "  Plant  Year           State  Revenue (in Million)\n",
              "0  BC06  2014      Tamil Nadu             29.567311\n",
              "1  BC06  2015      Tamil Nadu             28.217296\n",
              "2  BC03  2013     Maharashtra             28.205798\n",
              "3  BC06  2013      Tamil Nadu             27.860958\n",
              "4  BC03  2014     Maharashtra             27.682280\n",
              "5  BC03  2015     Maharashtra             27.289427\n",
              "6  BC07  2015      Tamil Nadu             22.543903\n",
              "7  BC05  2014  Andhra Pradesh             22.059397\n",
              "8  BC07  2016      Tamil Nadu             21.942490\n",
              "9  BC26  2015     Maharashtra             19.179013"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 115
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "hodeHwRyMmta",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "# new_fiv[\"actual_city\"]=nomi.query_postal_code(np.array(new_fiv[\"Pin code\"].astype(str))).county_name\n",
        "# new_fiv[\"actual_state\"]=nomi.query_postal_code(np.array(new_fiv[\"Pin code\"].astype(str))).state_name"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "toKgIlcDQEfU",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        ""
      ],
      "execution_count": null,
      "outputs": []
    }
  ]
}